/**
 * 
 */
package com.servicelive.spn.common;

import static com.servicelive.spn.common.SPNBackendConstants.*;

import java.util.EnumSet;
import java.util.HashMap;
import java.util.Map;

/**
 * @author hoza
 *
 */
public enum ActionMapperEnum {
	//Provider firm enums	
	ENUM_STATUS_UPDATE_ACTION_ID_JOB_PF_SPN_INVITATION (MODIFIED_BY_INVITATION_JOB+"#"+WF_STATUS_PF_INVITED_TO_SPN+"#"+ACTION_TYPE_PROVIDER_FIRM, Integer.valueOf(1)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_PF_SPN_INTERESTED (MODIFIED_BY_USER+"#"+WF_STATUS_PF_SPN_INTERESTED+"#"+ACTION_TYPE_PROVIDER_FIRM, Integer.valueOf(2)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_PF_SPN_NOT_INTERESTED (MODIFIED_BY_USER+"#"+WF_STATUS_PF_SPN_NOT_INTERESTED+"#"+ACTION_TYPE_PROVIDER_FIRM, Integer.valueOf(3)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_PF_SPN_APPLICANT (MODIFIED_BY_USER+"#"+WF_STATUS_PF_SPN_APPLICANT+"#"+ACTION_TYPE_PROVIDER_FIRM,Integer.valueOf(4)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_PF_SPN_DECLINED (MODIFIED_BY_USER+"#"+WF_STATUS_PF_SPN_DECLINED+"#"+ACTION_TYPE_PROVIDER_FIRM_SPN_AUDITOR, Integer.valueOf(5)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_PF_SPN_MEMBER (MODIFIED_BY_USER+"#"+WF_STATUS_PF_SPN_MEMBER+"#"+ACTION_TYPE_PROVIDER_FIRM, Integer.valueOf(6)),
	ENUM_STATUS_UPDATE_ACTION_ID_JOB_PF_SPN_MEMBER  (MODIFIED_BY_MEMBERMAINTENANCE+"#"+WF_STATUS_PF_SPN_MEMBER+"#"+ACTION_TYPE_PROVIDER_FIRM, Integer.valueOf(7)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_PF_SPN_REAPPLICANT (MODIFIED_BY_USER+"#"+WF_STATUS_PF_SPN_REAPPLICANT+"#"+ACTION_TYPE_PROVIDER_FIRM, Integer.valueOf(8)),
	ENUM_STATUS_UPDATE_ACTION_ID_JOB_MM_PF_SPN_FIRM_OOC (MODIFIED_BY_MEMBERMAINTENANCE+"#"+WF_STATUS_PF_FIRM_OUT_OF_COMPLIANCE+"#"+ACTION_TYPE_PROVIDER_FIRM, Integer.valueOf(9)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_PF_SPN_OOC (MODIFIED_BY_USER+"#"+WF_STATUS_PF_FIRM_OUT_OF_COMPLIANCE+"#"+ACTION_TYPE_PROVIDER_FIRM, Integer.valueOf(10)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_PF_APP_INCOMPLETE (MODIFIED_BY_USER+"#"+WF_STATUS_PF_APPLICANT_INCOMPLETE+"#"+ACTION_TYPE_PROVIDER_FIRM_SPN_AUDITOR, Integer.valueOf(11) ),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_PF_SPN_REMOVED  (MODIFIED_BY_USER+"#"+WF_STATUS_PF_SPN_REMOVED_FIRM+"#"+ACTION_TYPE_PROVIDER_FIRM, Integer.valueOf(12) ),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_PF_SPN_AUDITOR_SPN_MEMBER  (MODIFIED_BY_USER+"#"+WF_STATUS_PF_SPN_MEMBER+"#"+ACTION_TYPE_PROVIDER_FIRM_SPN_AUDITOR, Integer.valueOf(22) ),
	//SL-19981
	ENUM_STATUS_UPDATE_ACTION_ID_USER_PF_SPN_AUDITOR_SPN_REVIEW  (MODIFIED_BY_USER+"#"+WF_STATUS_PF_SPN_MEMBERSHIP_UNDER_REVIEW+"#"+ACTION_TYPE_PROVIDER_FIRM_SPN_AUDITOR, Integer.valueOf(23) ),
	//Service pro Enums
	ENUM_STATUS_UPDATE_ACTION_ID_JOB_MEMBER_MAINTANCE_SP_APPROVED (MODIFIED_BY_MEMBERMAINTENANCE+"#"+WF_STATUS_SP_SPN_APPROVED+"#"+ACTION_TYPE_SERVICE_PROVIDER, Integer.valueOf(13)),
	ENUM_STATUS_UPDATE_ACTION_ID_JOB_MEMBER_MAINTANCE_SP_OUT_OF_COMPLIANCE (MODIFIED_BY_MEMBERMAINTENANCE+"#"+WF_STATUS_SP_SPN_OUT_OF_COMPLIANCE+"#"+ACTION_TYPE_SERVICE_PROVIDER, Integer.valueOf(14)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_PF_SP_SPN_OOC (MODIFIED_BY_USER+"#"+WF_STATUS_SP_SPN_OUT_OF_COMPLIANCE+"#"+ACTION_TYPE_PROVIDER_FIRM, Integer.valueOf(15)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_PF_SP_SPN_REMOVED (MODIFIED_BY_USER+"#"+WF_STATUS_SP_SPN_REMOVED+"#"+ACTION_TYPE_PROVIDER_FIRM, Integer.valueOf(16)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_SP_SPN_APPROVED (MODIFIED_BY_USER+"#"+WF_STATUS_SP_SPN_APPROVED+"#"+ACTION_TYPE_SERVICE_PROVIDER, Integer.valueOf(17)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_SP_SPN_OOC (MODIFIED_BY_USER+"#"+WF_STATUS_SP_SPN_OUT_OF_COMPLIANCE+"#"+ACTION_TYPE_SERVICE_PROVIDER, Integer.valueOf(18)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_SP_SPN_REMOVED (MODIFIED_BY_USER+"#"+WF_STATUS_SP_SPN_REMOVED+"#"+ACTION_TYPE_SERVICE_PROVIDER, Integer.valueOf(19)),
	
	ENUM_STATUS_UPDATE_ACTION_ID_JOB_MM_PF_SP_SPN_OOC (MODIFIED_BY_MEMBERMAINTENANCE+"#"+WF_STATUS_SP_SPN_OUT_OF_COMPLIANCE+"#"+ACTION_TYPE_PROVIDER_FIRM, Integer.valueOf(20)),
	ENUM_STATUS_UPDATE_ACTION_ID_USER_SP_PERF_LEVEVL_CHNAGE (MODIFIED_BY_USER+"#"+WF_STATUS_SP_SPN_PERF_LEVEL_CHANGE+"#"+ACTION_TYPE_SERVICE_PROVIDER, Integer.valueOf(21)),
	ENUM_ACTION_MAPPED_NONE							("NONE",Integer.valueOf(-1)); 
	 private static final Map<String,ActionMapperEnum> lookup 
     = new HashMap<String,ActionMapperEnum>();
	
	

	static {
	     for(ActionMapperEnum c : EnumSet.allOf(ActionMapperEnum.class))
	          lookup.put(c.getDescription(), c);
	}
	 
	 private final String enumcriteriaDescription;
	 private final Integer enumValue;
	 ActionMapperEnum(String desc,Integer value) {
	        this.enumcriteriaDescription = desc;
	        this.enumValue = value;
	    }
	 
	 public Integer getValue() {
		 return enumValue;
	 }
	 /**
	  * 
	  * @return String
	  */
	 public String getDescription() {
		 return enumcriteriaDescription;
	 }
	/**
	 * 
	 * @param str  This Strin is "#" comcanated  string of Modifidier_id#SPNSTATUS#ActionType  so example is USER#SP SPN OUT OF COMPLIANCE#PROVIDER_FIRM  or USER#SP SPN OUT OF COMPLIANCE#SERVICE_PROVIDER
	 * @return
	 */
	 public static ActionMapperEnum getActiomMapperEnum(String user,String status,String actionType)
	    {
		    String str = user + "#" + status+ "#" + actionType;
	        try {
	        	if(lookup.containsKey(str)){
	        		return lookup.get(str);
	        	}
	        	return ENUM_ACTION_MAPPED_NONE;
	        } 
	        catch (Exception ex) {
	            return ENUM_ACTION_MAPPED_NONE;
	        }
	    }   
}
