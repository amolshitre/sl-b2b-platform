<?xml version="1.0" encoding="UTF-8"?>

<project basedir="../" default="distribute" name="OMSStaging">
	
	<target name="package" depends="distribute"/>
	<echo level="info">
	===============================================================================
	                                ${ant.project.name} 
	===============================================================================</echo>
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create build number file -->
		<buildnumber />
		<property name="dir.base" value="${basedir}" />
		<property name="dir.app" value="${dir.base}/web" />
		<property name="dir.source" value="${dir.base}/src/main/java" />
		<property name="dir.dest" value="${dir.base}/bin" />
		<property name="dir.build" value="${dir.base}/build" />
		<property name="dir.test" value="${dir.base}/src/test/java" />
		<property name="dir.archive" value="${dir.base}/archive" />

		<!-- Folder under which all the libraries are kept -->
		<property name="dir.service.live.web.util.base" value="../ServiceLiveWebUtil" />
		<property name="struts2InitialDeployables.lib" value="${dir.service.live.web.util.base}/lib/Struts2InitialDeployables"/>
		<property name="deployables.lib" value="${dir.service.live.web.util.base}/lib/deployables"/>
		<property name="nondeployables.lib" value="${dir.service.live.web.util.base}/lib/nondeployables"/>
		<property name="dir.slCommonBuild.nondeployables" value="../SLCommonBuild/lib/nondeployables"/>
		
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${nondeployables.lib}/ant-contrib-1.0b3.jar"/>
			</classpath>
		</taskdef>

		<!-- Folder containing uncompressed final release software-->
		<property name="dir.dist" value="${dir.base}/dist"/>
		
		<!-- JUnit report dir path -->
		<property name="junit-report.dir" value="${basedir}/${ant.project.name}Reports" />
		
		<path id="build.class.path">
			<fileset dir="${deployables.lib}">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${struts2InitialDeployables.lib}">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${nondeployables.lib}">
				<include name="*.jar"/>
			</fileset>
		</path>
		
		<path id="test.class.path">
    		<pathelement location="${build.class.path}" />
			<pathelement location="${dir.dest}"/>
    		<fileset dir="${dir.slCommonBuild.nondeployables}">
	    			<include name="junit.jar" />
	    			<include name="hamcrest-core-1.1.jar" />
	    			<include name="hamcrest-library-1.1.jar" />
	    			<include name="mockito-all-1.8.4.jar"/>
    		</fileset>
		</path>
	</target>
	
	<target name="clean" depends="init">
		<delete includeEmptyDirs="true">
			<fileset dir="${dir.base}" includes="**/*.class" />
			<fileset dir="${dir.base}" includes="**/*.war" />
		</delete>
		<delete dir="${dir.dest}" failonerror="false"/>
		<mkdir dir="${dir.dest}"/>
		<delete dir="${dir.dist}" failonerror="false"/>
		<mkdir dir="${dir.dist}"/>
		<delete dir="${junit-report.dir}" failonerror="false"/>
		<mkdir dir="${junit-report.dir}"/>	
	</target>
	
	<target name="compile" depends="clean">
		<javac
			srcdir="${dir.source}"
			destdir="${dir.dest}"
			classpathref="build.class.path"
			target="1.5"
			source="1.5"
			debug="on"
			deprecation="false"
		/>
		<copy todir="${dir.dest}">
			<fileset dir="${dir.source}">
				<include name="**/*.xml"/>
			</fileset>
			<fileset dir="${dir.source}">
				<include name="**/*.tld"/>
			</fileset>
			<fileset dir="${dir.source}">
				<include name="**/*.properties"/>
			</fileset>
		</copy>
	</target>

	<target name="jar" depends="compile">
		<copy todir="${dir.dest}">
			<fileset dir="${dir.base}/src/main/resources">
				<include name="**/*.xml"/>
			</fileset>
		</copy>

		<!-- Build the JAR file -->
		<jar compress="yes" jarfile="${dir.base}/OMSStaging.jar">
			<fileset dir="${dir.dest}">
				<include name="**/*.class"/>
				<include name="**/*.js"/>
				<include name="**/*.css"/>
				<include name="**/*.html"/>
				<include name="**/*.inc"/>
				<include name="**/*.jsp"/>
				<include name="**/*.htm"/>
				<include name="**/*.jpg"/>
				<include name="**/*.gif"/>
				<include name="**/*.png"/>
				<include name="**/*.jrxml"/>
				<include name="**/*.xml"/>
				<include name="**/*.tld"/>
				<include name="**/*.properties"/>
				<include name="**/*.jar"/>
				<include name="**/*.so"/>
				<include name="**/*.zip"/>
				<include name="**/*.swf"/>
				<exclude name="web.xml"/>
			</fileset>
		</jar>
	</target>

	<target name="copyjar" depends="jar">
		<copy todir="${dir.dist}">
			<fileset dir="${dir.base}" includes="*.war"/>
			<fileset dir="${dir.base}" includes="*.jar"/>
		</copy>
	</target>
	
	<target name="compile-test" depends="copyjar">
		<javac 
			srcdir="${dir.test}" 
			destdir="${dir.dest}" 
			classpathref="build.class.path" 
			target="1.5" 
			source="1.5" 
			debug="on" 
			deprecation="false" />
	</target>
	
	<target name="junit-report" description="Runs the JUnit test cases" depends="compile-test">
			<junit fork="yes" haltonfailure="false" printsummary="withOutAndErr" showoutput="yes">		
				<classpath>
					<path refid="test.class.path"/>						  				
				</classpath>
		
				<formatter type="xml" />
					
				<batchtest fork="yes" todir="${junit-report.dir}" >	 
					<fileset dir="${dir.test}" >
						<include name="**/*Test.java" />
					</fileset>
				</batchtest>	  
			</junit>
			<echo message="build date ">${DSTAMP}${TSTAMP}</echo>
			<echo message="build.number ">${build.number}</echo>
			<echo message="full tag ">${app.lastbuild.tag.auto}</echo>

			<echo message="Format the tests report" />
			<junitreport todir="${junit-report.dir}">
				<fileset dir="${junit-report.dir}">
					<include name="TEST-*.xml" />
				</fileset>
				<report todir="${junit-report.dir}" />
			</junitreport>
	</target>

	<target name="distribute" depends="junit-report">
	</target>
	
	<!-- Sonar Integration -->
	<property name="dir.sonar.src" value="${basedir}/src/main/java" />
	<property name="dir.sonar.ant.task" value="../SLCommonBuild/lib/nondeployables"/>
	<import file="../../SLCommonBuild/ant/opt/ant-script-library/asl-java-sonar.xml"/>
	<target name="sonar" depends="sonar-init, sonar-run">
	</target>
</project>