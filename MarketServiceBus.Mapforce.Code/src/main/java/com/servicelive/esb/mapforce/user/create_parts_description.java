/**
 * user/create_parts_description.java
 *
 * This file was generated by MapForce 2011sp1.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.servicelive.esb.mapforce.user;

import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import com.altova.db.*;
import com.altova.text.tablelike.*;
import com.altova.text.*;
import com.altova.text.edi.*;
import java.util.*;

public class create_parts_description extends com.altova.TraceProvider 
{
	static class seq1_Main implements IEnumerable
	{
		com.altova.functions.RuntimeContext var1_param_context;
		java.lang.String var2_param_merchandiseDescription;
		java.lang.String var3_param_warehouseNumber;
		java.lang.String var4_param_lastMaintenanceDate;
		java.lang.String var5_param_deliveryStatus;
		java.lang.String var6_param_deliveryDescription;
		java.lang.String var7_param_holdCode;
		java.lang.String var8_param_holdDescription;
		java.lang.String var9_param_pendCode;
		java.lang.String var10_param_pendDescription;
		java.lang.String var11_param_shipmentMethodCode;
		java.lang.String var12_param_pickupLocationCode;
		java.lang.String var13_param_shipmentMethodDescription;
		java.lang.String var14_param_deliveryTimeCode;
		java.lang.String var15_param_deliveryTimeDescription;
	
		public seq1_Main(com.altova.functions.RuntimeContext var1_param_context, java.lang.String var2_param_merchandiseDescription, java.lang.String var3_param_warehouseNumber, java.lang.String var4_param_lastMaintenanceDate, java.lang.String var5_param_deliveryStatus, java.lang.String var6_param_deliveryDescription, java.lang.String var7_param_holdCode, java.lang.String var8_param_holdDescription, java.lang.String var9_param_pendCode, java.lang.String var10_param_pendDescription, java.lang.String var11_param_shipmentMethodCode, java.lang.String var12_param_pickupLocationCode, java.lang.String var13_param_shipmentMethodDescription, java.lang.String var14_param_deliveryTimeCode, java.lang.String var15_param_deliveryTimeDescription)
		{
			this.var1_param_context = var1_param_context;
			this.var2_param_merchandiseDescription = var2_param_merchandiseDescription;
			this.var3_param_warehouseNumber = var3_param_warehouseNumber;
			this.var4_param_lastMaintenanceDate = var4_param_lastMaintenanceDate;
			this.var5_param_deliveryStatus = var5_param_deliveryStatus;
			this.var6_param_deliveryDescription = var6_param_deliveryDescription;
			this.var7_param_holdCode = var7_param_holdCode;
			this.var8_param_holdDescription = var8_param_holdDescription;
			this.var9_param_pendCode = var9_param_pendCode;
			this.var10_param_pendDescription = var10_param_pendDescription;
			this.var11_param_shipmentMethodCode = var11_param_shipmentMethodCode;
			this.var12_param_pickupLocationCode = var12_param_pickupLocationCode;
			this.var13_param_shipmentMethodDescription = var13_param_shipmentMethodDescription;
			this.var14_param_deliveryTimeCode = var14_param_deliveryTimeCode;
			this.var15_param_deliveryTimeDescription = var15_param_deliveryTimeDescription;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq1_Main closure;
			public Enumerator(seq1_Main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(com.altova.functions.Core.concat(closure.var2_param_merchandiseDescription, (java.lang.String)com.altova.functions.Core.first((new seq2_if_empty(closure.var3_param_warehouseNumber)))), (java.lang.String)com.altova.functions.Core.first((new seq3_if_empty(closure.var4_param_lastMaintenanceDate)))), (java.lang.String)com.altova.functions.Core.first((new seq4_if_empty(closure.var5_param_deliveryStatus)))), (java.lang.String)com.altova.functions.Core.first((new seq5_if_empty(closure.var6_param_deliveryDescription)))), (java.lang.String)com.altova.functions.Core.first((new seq6_if_empty(closure.var7_param_holdCode)))), (java.lang.String)com.altova.functions.Core.first((new seq7_if_empty(closure.var8_param_holdDescription)))), (java.lang.String)com.altova.functions.Core.first((new seq8_if_empty(closure.var9_param_pendCode)))), (java.lang.String)com.altova.functions.Core.first((new seq9_if_empty(closure.var10_param_pendDescription)))), (java.lang.String)com.altova.functions.Core.first((new seq10_if_empty(closure.var11_param_shipmentMethodCode)))), (java.lang.String)com.altova.functions.Core.first((new seq11_if_empty(closure.var12_param_pickupLocationCode)))), (java.lang.String)com.altova.functions.Core.first((new seq12_if_empty(closure.var13_param_shipmentMethodDescription)))), (java.lang.String)com.altova.functions.Core.first((new seq13_if_empty(closure.var14_param_deliveryTimeCode)))), (java.lang.String)com.altova.functions.Core.first((new seq14_if_empty(closure.var15_param_deliveryTimeDescription))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq2_if_empty implements IEnumerable
	{
		java.lang.String var1_warehouseNumber;
	
		public seq2_if_empty(java.lang.String var1_warehouseNumber)
		{
			this.var1_warehouseNumber = var1_warehouseNumber;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq2_if_empty closure;
			public Enumerator(seq2_if_empty closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Lang.empty(closure.var1_warehouseNumber))) {state = 11; return false; }
				current = com.altova.functions.Core.concat(" WAREHOUSE:", closure.var1_warehouseNumber);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(" WAREHOUSE:", closure.var1_warehouseNumber);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq3_if_empty implements IEnumerable
	{
		java.lang.String var1_lastMaintenanceDate;
	
		public seq3_if_empty(java.lang.String var1_lastMaintenanceDate)
		{
			this.var1_lastMaintenanceDate = var1_lastMaintenanceDate;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq3_if_empty closure;
			public Enumerator(seq3_if_empty closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Lang.empty(closure.var1_lastMaintenanceDate))) {state = 11; return false; }
				current = com.altova.functions.Core.concat(" LAST MAINTENANCE DATE:", closure.var1_lastMaintenanceDate);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(" LAST MAINTENANCE DATE:", closure.var1_lastMaintenanceDate);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq4_if_empty implements IEnumerable
	{
		java.lang.String var1_deliveryStatus;
	
		public seq4_if_empty(java.lang.String var1_deliveryStatus)
		{
			this.var1_deliveryStatus = var1_deliveryStatus;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq4_if_empty closure;
			public Enumerator(seq4_if_empty closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Lang.empty(closure.var1_deliveryStatus))) {state = 11; return false; }
				current = com.altova.functions.Core.concat(" DELIVERY STATUS:", closure.var1_deliveryStatus);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(" DELIVERY STATUS:", closure.var1_deliveryStatus);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq5_if_empty implements IEnumerable
	{
		java.lang.String var1_deliveryDescription;
	
		public seq5_if_empty(java.lang.String var1_deliveryDescription)
		{
			this.var1_deliveryDescription = var1_deliveryDescription;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq5_if_empty closure;
			public Enumerator(seq5_if_empty closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Lang.empty(closure.var1_deliveryDescription))) {state = 11; return false; }
				current = com.altova.functions.Core.concat(" DELIVERY DESCRIPTION:", closure.var1_deliveryDescription);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(" DELIVERY DESCRIPTION:", closure.var1_deliveryDescription);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq6_if_empty implements IEnumerable
	{
		java.lang.String var1_holdCode;
	
		public seq6_if_empty(java.lang.String var1_holdCode)
		{
			this.var1_holdCode = var1_holdCode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq6_if_empty closure;
			public Enumerator(seq6_if_empty closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Lang.empty(closure.var1_holdCode))) {state = 11; return false; }
				current = com.altova.functions.Core.concat(" HOLD CODE:", closure.var1_holdCode);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(" HOLD CODE:", closure.var1_holdCode);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq7_if_empty implements IEnumerable
	{
		java.lang.String var1_holdDescription;
	
		public seq7_if_empty(java.lang.String var1_holdDescription)
		{
			this.var1_holdDescription = var1_holdDescription;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq7_if_empty closure;
			public Enumerator(seq7_if_empty closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Lang.empty(closure.var1_holdDescription))) {state = 11; return false; }
				current = com.altova.functions.Core.concat(" HOLD DESCRIPTION:", closure.var1_holdDescription);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(" HOLD DESCRIPTION:", closure.var1_holdDescription);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq8_if_empty implements IEnumerable
	{
		java.lang.String var1_pendCode;
	
		public seq8_if_empty(java.lang.String var1_pendCode)
		{
			this.var1_pendCode = var1_pendCode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq8_if_empty closure;
			public Enumerator(seq8_if_empty closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Lang.empty(closure.var1_pendCode))) {state = 11; return false; }
				current = com.altova.functions.Core.concat(" PEND CODE:", closure.var1_pendCode);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(" PEND CODE:", closure.var1_pendCode);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq9_if_empty implements IEnumerable
	{
		java.lang.String var1_pendDescription;
	
		public seq9_if_empty(java.lang.String var1_pendDescription)
		{
			this.var1_pendDescription = var1_pendDescription;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq9_if_empty closure;
			public Enumerator(seq9_if_empty closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Lang.empty(closure.var1_pendDescription))) {state = 11; return false; }
				current = com.altova.functions.Core.concat(" PEND DESCRIPTION:", closure.var1_pendDescription);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(" PEND DESCRIPTION:", closure.var1_pendDescription);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq10_if_empty implements IEnumerable
	{
		java.lang.String var1_shipmentMethodCode;
	
		public seq10_if_empty(java.lang.String var1_shipmentMethodCode)
		{
			this.var1_shipmentMethodCode = var1_shipmentMethodCode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq10_if_empty closure;
			public Enumerator(seq10_if_empty closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Lang.empty(closure.var1_shipmentMethodCode))) {state = 11; return false; }
				current = com.altova.functions.Core.concat(" SHIPMENT METHOD CODE:", closure.var1_shipmentMethodCode);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(" SHIPMENT METHOD CODE:", closure.var1_shipmentMethodCode);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq11_if_empty implements IEnumerable
	{
		java.lang.String var1_pickupLocationCode;
	
		public seq11_if_empty(java.lang.String var1_pickupLocationCode)
		{
			this.var1_pickupLocationCode = var1_pickupLocationCode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq11_if_empty closure;
			public Enumerator(seq11_if_empty closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Lang.empty(closure.var1_pickupLocationCode))) {state = 11; return false; }
				current = com.altova.functions.Core.concat(" PICKUP LOCATION CODE:", closure.var1_pickupLocationCode);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(" PICKUP LOCATION CODE:", closure.var1_pickupLocationCode);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq12_if_empty implements IEnumerable
	{
		java.lang.String var1_shipmentMethodDescription;
	
		public seq12_if_empty(java.lang.String var1_shipmentMethodDescription)
		{
			this.var1_shipmentMethodDescription = var1_shipmentMethodDescription;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq12_if_empty closure;
			public Enumerator(seq12_if_empty closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Lang.empty(closure.var1_shipmentMethodDescription))) {state = 11; return false; }
				current = com.altova.functions.Core.concat(" SHIPMENT METHOD DESCRIPTION:", closure.var1_shipmentMethodDescription);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(" SHIPMENT METHOD DESCRIPTION:", closure.var1_shipmentMethodDescription);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq13_if_empty implements IEnumerable
	{
		java.lang.String var1_deliveryTimeCode;
	
		public seq13_if_empty(java.lang.String var1_deliveryTimeCode)
		{
			this.var1_deliveryTimeCode = var1_deliveryTimeCode;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq13_if_empty closure;
			public Enumerator(seq13_if_empty closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Lang.empty(closure.var1_deliveryTimeCode))) {state = 11; return false; }
				current = com.altova.functions.Core.concat(" DELIVERY TIME CODE:", closure.var1_deliveryTimeCode);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(" DELIVERY TIME CODE:", closure.var1_deliveryTimeCode);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq14_if_empty implements IEnumerable
	{
		java.lang.String var1_deliveryTimeDescription;
	
		public seq14_if_empty(java.lang.String var1_deliveryTimeDescription)
		{
			this.var1_deliveryTimeDescription = var1_deliveryTimeDescription;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq14_if_empty closure;
			public Enumerator(seq14_if_empty closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Lang.empty(closure.var1_deliveryTimeDescription))) {state = 11; return false; }
				current = com.altova.functions.Core.concat(" DELIVERY TIME DESCRIPTION:", closure.var1_deliveryTimeDescription);
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.concat(" DELIVERY TIME DESCRIPTION:", closure.var1_deliveryTimeDescription);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}


		

	// instances


	public static IEnumerable create(com.altova.functions.RuntimeContext var1_param_context, java.lang.String var2_param_merchandiseDescription, java.lang.String var3_param_warehouseNumber, java.lang.String var4_param_lastMaintenanceDate, java.lang.String var5_param_deliveryStatus, java.lang.String var6_param_deliveryDescription, java.lang.String var7_param_holdCode, java.lang.String var8_param_holdDescription, java.lang.String var9_param_pendCode, java.lang.String var10_param_pendDescription, java.lang.String var11_param_shipmentMethodCode, java.lang.String var12_param_pickupLocationCode, java.lang.String var13_param_shipmentMethodDescription, java.lang.String var14_param_deliveryTimeCode, java.lang.String var15_param_deliveryTimeDescription)
	{
		return new seq1_Main(
			var1_param_context,
			var2_param_merchandiseDescription,
			var3_param_warehouseNumber,
			var4_param_lastMaintenanceDate,
			var5_param_deliveryStatus,
			var6_param_deliveryDescription,
			var7_param_holdCode,
			var8_param_holdDescription,
			var9_param_pendCode,
			var10_param_pendDescription,
			var11_param_shipmentMethodCode,
			var12_param_pickupLocationCode,
			var13_param_shipmentMethodDescription,
			var14_param_deliveryTimeCode,
			var15_param_deliveryTimeDescription
			);

	}


	static IEnumerable throwUserException(String content)
	{
		throw new com.altova.UserException(content);
	}
}
