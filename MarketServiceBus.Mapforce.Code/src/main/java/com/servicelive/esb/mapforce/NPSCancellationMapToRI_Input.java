/**
 * NPSCancellationMapToRI_Input.java
 *
 * This file was generated by MapForce 2011sp1.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.servicelive.esb.mapforce;

import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import com.altova.db.*;
import com.altova.text.tablelike.*;
import com.altova.text.*;
import com.altova.text.edi.*;
import java.util.*;

public class NPSCancellationMapToRI_Input extends com.altova.TraceProvider 
{
	static class seq1_Main implements IEnumerable
	{
		com.altova.db.Catalog var1_instance_servicelive_integration;
		long var2_param_batchId;
	
		public seq1_Main(com.altova.db.Catalog var1_instance_servicelive_integration, long var2_param_batchId)
		{
			this.var1_instance_servicelive_integration = var1_instance_servicelive_integration;
			this.var2_param_batchId = var2_param_batchId;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq1_Main closure;
			com.altova.db.Statement var21_NewStatement;
			com.altova.db.Statement var20_NewStatement;
			com.altova.db.Statement var19_NewStatement;
			com.altova.db.Statement var18_NewStatement;
			com.altova.db.Statement var17_NewStatement;
			com.altova.db.Statement var16_NewStatement;
			com.altova.db.Statement var15_NewStatement;
			com.altova.db.Statement var14_NewStatement;
			com.altova.db.Statement var13_NewStatement;
			com.altova.db.Statement var12_NewStatement;
			com.altova.db.Statement var11_NewStatement;
			com.altova.db.Statement var10_NewStatement;
			com.altova.db.Statement var9_NewStatement;
			com.altova.db.Statement var8_NewStatement;
			com.altova.db.Statement var7_NewStatement;
			com.altova.db.Statement var6_NewStatement;
			com.altova.db.Statement var5_NewStatement;
			com.altova.db.Statement var4_NewStatement;
			com.altova.db.Statement var3_NewStatement;
			public Enumerator(seq1_Main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var21_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 18, "SELECT `description` FROM `tasks_oms` WHERE ? = `taskId`");
				com.altova.db.Dbs.addParameter(var21_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var21_NewStatement);
				var20_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 17, "SELECT `coverage` FROM `tasks_oms` WHERE ? = `taskId`");
				com.altova.db.Dbs.addParameter(var20_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var20_NewStatement);
				var19_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 16, "SELECT `type` FROM `tasks_oms` WHERE ? = `taskId`");
				com.altova.db.Dbs.addParameter(var19_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var19_NewStatement);
				var18_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 15, "SELECT `chargeCode` FROM `tasks_oms` WHERE ? = `taskId`");
				com.altova.db.Dbs.addParameter(var18_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var18_NewStatement);
				var17_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 14, "SELECT `sequence_number`, `externalSku`, `taskId`, CONVERT(`amount`, CHAR(67)) AS `amount` FROM `tasks` WHERE ? = `serviceOrderId`");
				com.altova.db.Dbs.addParameter(var17_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var17_NewStatement);
				var16_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 13, "SELECT `serviceOrderId` FROM `serviceorders` WHERE ? = `transactionId`");
				com.altova.db.Dbs.addParameter(var16_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var16_NewStatement);
				var15_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 12, "SELECT `customerNumber` FROM `customrefs_oms` WHERE ? = `serviceOrderId`");
				com.altova.db.Dbs.addParameter(var15_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var15_NewStatement);
				var14_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 11, "SELECT `serviceOrderId` FROM `serviceorders` WHERE ? = `serviceOrderId`");
				com.altova.db.Dbs.addParameter(var14_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var14_NewStatement);
				var13_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 10, "SELECT `relatedServiceOrderId` FROM `buyer_notifications` WHERE ? = `transactionId`");
				com.altova.db.Dbs.addParameter(var13_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var13_NewStatement);
				var12_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 9, "SELECT `orderNumber` FROM `customrefs_oms` WHERE ? = `serviceOrderId`");
				com.altova.db.Dbs.addParameter(var12_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var12_NewStatement);
				var11_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 8, "SELECT `serviceOrderId` FROM `serviceorders` WHERE ? = `serviceOrderId`");
				com.altova.db.Dbs.addParameter(var11_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var11_NewStatement);
				var10_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 7, "SELECT `relatedServiceOrderId` FROM `buyer_notifications` WHERE ? = `transactionId`");
				com.altova.db.Dbs.addParameter(var10_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var10_NewStatement);
				var9_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 6, "SELECT `unitNumber` FROM `customrefs_oms` WHERE ? = `serviceOrderId`");
				com.altova.db.Dbs.addParameter(var9_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var9_NewStatement);
				var8_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 5, "SELECT `serviceOrderId` FROM `serviceorders` WHERE ? = `serviceOrderId`");
				com.altova.db.Dbs.addParameter(var8_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var8_NewStatement);
				var7_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 4, "SELECT `relatedServiceOrderId` FROM `buyer_notifications` WHERE ? = `transactionId`");
				com.altova.db.Dbs.addParameter(var7_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.prepareStatement(var7_NewStatement);
				var6_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 3, "SELECT `transactionId` FROM `transactions` WHERE (? = `batchId`) AND ((batchId = ? and transactionTypeId = ? and statusId = ?))");
				com.altova.db.Dbs.addParameter(var6_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.addParameter(var6_NewStatement, java.sql.Types.BIGINT,-1);
				com.altova.db.Dbs.addParameter(var6_NewStatement, java.sql.Types.SMALLINT,-1);
				com.altova.db.Dbs.addParameter(var6_NewStatement, java.sql.Types.SMALLINT,-1);
				com.altova.db.Dbs.prepareStatement(var6_NewStatement);
				var5_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 2, "SELECT `batchId` FROM `vw_batches` WHERE ? = `integrationId`");
				com.altova.db.Dbs.addParameter(var5_NewStatement, java.sql.Types.SMALLINT,-1);
				com.altova.db.Dbs.prepareStatement(var5_NewStatement);
				var4_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 1, "SELECT `integrationId` FROM `integrations` WHERE ? = `buyerId`");
				com.altova.db.Dbs.addParameter(var4_NewStatement, java.sql.Types.SMALLINT,-1);
				com.altova.db.Dbs.prepareStatement(var4_NewStatement);
				var3_NewStatement = com.altova.db.Dbs.newStatement(closure.var1_instance_servicelive_integration, 0, "SELECT `buyerId` FROM `buyers`");
				com.altova.db.Dbs.prepareStatement(var3_NewStatement);
				current = new MFElement("InstallationServiceOrders", "", "", (new seq2_map_SELECT__buyerId__FRO(closure.var1_instance_servicelive_integration, closure.var2_param_batchId)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq2_map_SELECT__buyerId__FRO implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		long var6_batchId;
	
		public seq2_map_SELECT__buyerId__FRO(com.altova.db.Catalog var2_servicelive_integration, long var6_batchId)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var6_batchId = var6_batchId;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq2_map_SELECT__buyerId__FRO closure;
			IEnumerator var1_map_SELECT__buyerId__FRO;
			IEnumerator var3_map_SELECT__integrationI;
			IEnumerator var4_map_SELECT__batchId__FRO;
			IEnumerator var5_map_SELECT__transactionI;
			public Enumerator(seq2_map_SELECT__buyerId__FRO closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_map_SELECT__buyerId__FRO = ((new seq3__buyers_(closure.var2_servicelive_integration))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 9;				
				if (!var1_map_SELECT__buyerId__FRO.moveNext()) {state = 6; return false; }
				var3_map_SELECT__integrationI = ((new seq5__integrations_(closure.var2_servicelive_integration, ((com.altova.db.Record)(var1_map_SELECT__buyerId__FRO.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_SELECT__buyerId__FRO.close(); var1_map_SELECT__buyerId__FRO = null;
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if (!var3_map_SELECT__integrationI.moveNext()) {state = 10; return false; }
				var4_map_SELECT__batchId__FRO = ((new seq7__vw_batches_(closure.var2_servicelive_integration, ((com.altova.db.Record)(var3_map_SELECT__integrationI.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 5;				
				var3_map_SELECT__integrationI.close(); var3_map_SELECT__integrationI = null;
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 17;				
				if (!var4_map_SELECT__batchId__FRO.moveNext()) {state = 14; return false; }
				var5_map_SELECT__transactionI = ((new seq9__transactions_(closure.var2_servicelive_integration, ((com.altova.db.Record)(var4_map_SELECT__batchId__FRO.current())), closure.var6_batchId))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 9;				
				var4_map_SELECT__batchId__FRO.close(); var4_map_SELECT__batchId__FRO = null;
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var5_map_SELECT__transactionI.moveNext()) {state = 18; return false; }
				current = new MFElement("InstallationServiceOrder", "", null, (new seq11_content_InstallationServiceOrder(closure.var2_servicelive_integration, ((com.altova.db.Record)(var5_map_SELECT__transactionI.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 13;				
				var5_map_SELECT__transactionI.close(); var5_map_SELECT__transactionI = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var5_map_SELECT__transactionI.close(); var5_map_SELECT__transactionI = null;
				var4_map_SELECT__batchId__FRO.close(); var4_map_SELECT__batchId__FRO = null;
				var3_map_SELECT__integrationI.close(); var3_map_SELECT__integrationI = null;
				var1_map_SELECT__buyerId__FRO.close(); var1_map_SELECT__buyerId__FRO = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq4_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
	
		public seq4_NewQuery(com.altova.db.Catalog var2_servicelive_integration)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq4_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq4_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 0);
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq3__buyers_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
	
		public seq3__buyers_(com.altova.db.Catalog var1_servicelive_integration)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq3__buyers_ closure;
			com.altova.db.ResultSetWrapper var3_NewQuery;
			com.altova.db.Record var2_NewRecord;
			public Enumerator(seq3__buyers_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var3_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq4_NewQuery(closure.var1_servicelive_integration)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var3_NewQuery))) {state = 0; return false; }
				var2_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_short(var2_NewRecord, var3_NewQuery, "buyerId");
				current = var2_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var3_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq6_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq6_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq6_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq6_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 1);
				com.altova.db.Dbs.bindParameter_int(var1_NewQuery, (Integer)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "buyerId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq5__integrations_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq5__integrations_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq5__integrations_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq5__integrations_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq6_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_short(var3_NewRecord, var4_NewQuery, "integrationId");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq8_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq8_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq8_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq8_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 2);
				com.altova.db.Dbs.bindParameter_int(var1_NewQuery, (Integer)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "integrationId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq7__vw_batches_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq7__vw_batches_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq7__vw_batches_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq7__vw_batches_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq8_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_long(var3_NewRecord, var4_NewQuery, "batchId");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq10_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
		long var4_batchId;
	
		public seq10_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv, long var4_batchId)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
			this.var4_batchId = var4_batchId;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq10_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			java.math.BigDecimal var5_const_6;
			public Enumerator(seq10_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 3);
				var5_const_6 = new java.math.BigDecimal("6");
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, (Long)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "batchId")));
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, closure.var4_batchId);
				com.altova.db.Dbs.bindParameter_int(var1_NewQuery, com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(var5_const_6))));
				com.altova.db.Dbs.bindParameter_int(var1_NewQuery, com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(var5_const_6))));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq9__transactions_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
		long var3_batchId;
	
		public seq9__transactions_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv, long var3_batchId)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
			this.var3_batchId = var3_batchId;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq9__transactions_ closure;
			com.altova.db.ResultSetWrapper var5_NewQuery;
			com.altova.db.Record var4_NewRecord;
			public Enumerator(seq9__transactions_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var5_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq10_NewQuery(closure.var1_servicelive_integration, closure.var2_bv, closure.var3_batchId)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var5_NewQuery))) {state = 0; return false; }
				var4_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_long(var4_NewRecord, var5_NewQuery, "transactionId");
				current = var4_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var5_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq11_content_InstallationServiceOrder implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq11_content_InstallationServiceOrder(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq11_content_InstallationServiceOrder closure;
			IEnumerator var1_map_SELECT__relatedServi;
			IEnumerator var4_map_read_field;
			IEnumerator var8_map_SELECT__relatedServi;
			IEnumerator var5_map_SELECT__serviceOrder;
			IEnumerator var9_map_read_field;
			IEnumerator var6_map_SELECT__unitNumber__;
			IEnumerator var10_map_SELECT__serviceOrder;
			com.altova.mapforce.IEnumerable var7_read_field;
			IEnumerator var11_map_SELECT__orderNumber_;
			com.altova.mapforce.IEnumerable var12_read_field;
			public Enumerator(seq11_content_InstallationServiceOrder closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 37:	if (moveNext_37()) return true; break;
					case 38:	if (moveNext_38()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 52:	if (moveNext_52()) return true; break;
					case 53:	if (moveNext_53()) return true; break;
					case 54:	if (moveNext_54()) return true; break;
					case 55:	if (moveNext_55()) return true; break;
					case 56:	if (moveNext_56()) return true; break;
					case 57:	if (moveNext_57()) return true; break;
					case 58:	if (moveNext_58()) return true; break;
					case 59:	if (moveNext_59()) return true; break;
					case 60:	if (moveNext_60()) return true; break;
					case 61:	if (moveNext_61()) return true; break;
					case 62:	if (moveNext_62()) return true; break;
					case 63:	if (moveNext_63()) return true; break;
					case 64:	if (moveNext_64()) return true; break;
					case 65:	if (moveNext_65()) return true; break;
					case 66:	if (moveNext_66()) return true; break;
					case 67:	if (moveNext_67()) return true; break;
					case 68:	if (moveNext_68()) return true; break;
					case 69:	if (moveNext_69()) return true; break;
					case 70:	if (moveNext_70()) return true; break;
					case 71:	if (moveNext_71()) return true; break;
					case 72:	if (moveNext_72()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				current = new MFElement("TransactionType", "", null, com.altova.functions.Core.box("UPDATE_FROM_SERVICELIVE"));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var1_map_SELECT__relatedServi = ((new seq12__buyer_notifications_(closure.var2_servicelive_integration, closure.var3_bv))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 10;				
				if (!var1_map_SELECT__relatedServi.moveNext()) {state = 7; return false; }
				var4_map_read_field = (com.altova.db.Dbs.readField(((com.altova.db.Record)(var1_map_SELECT__relatedServi.current())), "relatedServiceOrderId")).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 29;				
				var1_map_SELECT__relatedServi.close(); var1_map_SELECT__relatedServi = null;
				var8_map_SELECT__relatedServi = ((new seq18__buyer_notifications_(closure.var2_servicelive_integration, closure.var3_bv))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 14;				
				if (!var4_map_read_field.moveNext()) {state = 11; return false; }
				var5_map_SELECT__serviceOrder = ((new seq14__serviceorders_(closure.var2_servicelive_integration, ((Long)(var4_map_read_field.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 6;				
				var4_map_read_field.close(); var4_map_read_field = null;
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 18;				
				if (!var5_map_SELECT__serviceOrder.moveNext()) {state = 15; return false; }
				var6_map_SELECT__unitNumber__ = ((new seq16__customrefs_oms_(closure.var2_servicelive_integration, ((com.altova.db.Record)(var5_map_SELECT__serviceOrder.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 10;				
				var5_map_SELECT__serviceOrder.close(); var5_map_SELECT__serviceOrder = null;
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 18;				
				if (!var6_map_SELECT__unitNumber__.moveNext()) {state = 19; return false; }
				var7_read_field = new com.altova.functions.Core.SequenceCache(com.altova.db.Dbs.readField(((com.altova.db.Record)(var6_map_SELECT__unitNumber__.current())), "unitNumber"));
				if (!(com.altova.functions.Core.exists(var7_read_field))) {state = 18; return false; }
				current = new MFElement("ServiceUnitNumber", "", null, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(var7_read_field)));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 14;				
				var6_map_SELECT__unitNumber__.close(); var6_map_SELECT__unitNumber__ = null;
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 33;				
				if (!var8_map_SELECT__relatedServi.moveNext()) {state = 30; return false; }
				var9_map_read_field = (com.altova.db.Dbs.readField(((com.altova.db.Record)(var8_map_SELECT__relatedServi.current())), "relatedServiceOrderId")).enumerator();
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 52;				
				var8_map_SELECT__relatedServi.close(); var8_map_SELECT__relatedServi = null;
				current = new MFElement("OrderTakenTime", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_33() throws Exception {
				state = 37;				
				if (!var9_map_read_field.moveNext()) {state = 34; return false; }
				var10_map_SELECT__serviceOrder = ((new seq20__serviceorders_(closure.var2_servicelive_integration, ((Long)(var9_map_read_field.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 29;				
				var9_map_read_field.close(); var9_map_read_field = null;
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 41;				
				if (!var10_map_SELECT__serviceOrder.moveNext()) {state = 38; return false; }
				var11_map_SELECT__orderNumber_ = ((new seq22__customrefs_oms_(closure.var2_servicelive_integration, ((com.altova.db.Record)(var10_map_SELECT__serviceOrder.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 33;				
				var10_map_SELECT__serviceOrder.close(); var10_map_SELECT__serviceOrder = null;
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 41;				
				if (!var11_map_SELECT__orderNumber_.moveNext()) {state = 42; return false; }
				var12_read_field = new com.altova.functions.Core.SequenceCache(com.altova.db.Dbs.readField(((com.altova.db.Record)(var11_map_SELECT__orderNumber_.current())), "orderNumber"));
				if (!(com.altova.functions.Core.exists(var12_read_field))) {state = 41; return false; }
				current = new MFElement("ServiceOrderNumber", "", null, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(var12_read_field)));
				pos++;
				return true;
			}
			private boolean moveNext_42() throws Exception {
				state = 37;				
				var11_map_SELECT__orderNumber_.close(); var11_map_SELECT__orderNumber_ = null;
				return false;
			}
			private boolean moveNext_52() throws Exception {
				state = 53;				
				current = new MFElement("OrderTakenDate", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_53() throws Exception {
				state = 54;				
				current = new MFElement("PromisedDate", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_54() throws Exception {
				state = 55;				
				current = new MFElement("PromisedTimeFrom", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_55() throws Exception {
				state = 56;				
				current = new MFElement("PromisedTimeTo", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_56() throws Exception {
				state = 57;				
				current = new MFElement("TechID", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_57() throws Exception {
				state = 58;				
				current = new MFElement("OriginalScheduledDate", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_58() throws Exception {
				state = 59;				
				current = new MFElement("OriginalTimeFrom", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_59() throws Exception {
				state = 60;				
				current = new MFElement("OriginalTimeTo", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_60() throws Exception {
				state = 61;				
				current = new MFElement("Customer", "", null, (new seq24_content_Customer(closure.var2_servicelive_integration, closure.var3_bv)));
				pos++;
				return true;
			}
			private boolean moveNext_61() throws Exception {
				state = 62;				
				current = new MFElement("RepairAt", "", null, (new seq32_content_RepairAt()));
				pos++;
				return true;
			}
			private boolean moveNext_62() throws Exception {
				state = 63;				
				current = new MFElement("ServiceRequested", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_63() throws Exception {
				state = 64;				
				current = new MFElement("ServiceOrderStatusCode", "", null, com.altova.functions.Core.box("CA"));
				pos++;
				return true;
			}
			private boolean moveNext_64() throws Exception {
				state = 65;				
				current = new MFElement("ServiceOrderType", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_65() throws Exception {
				state = 66;				
				current = new MFElement("SpecialInstructions1", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_66() throws Exception {
				state = 67;				
				current = new MFElement("SpecialInstructions2", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_67() throws Exception {
				state = 68;				
				current = new MFElement("PermanentInstructions", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_68() throws Exception {
				state = 69;				
				current = new MFElement("Merchandise", "", null, (new seq34_content_Merchandise()));
				pos++;
				return true;
			}
			private boolean moveNext_69() throws Exception {
				state = 70;				
				current = new MFElement("SalesCheck", "", null, (new seq35_content_SalesCheck()));
				pos++;
				return true;
			}
			private boolean moveNext_70() throws Exception {
				state = 71;				
				current = new MFElement("JobCodes", "", null, (new seq37_map_SELECT__serviceOrder(closure.var2_servicelive_integration, closure.var3_bv)));
				pos++;
				return true;
			}
			private boolean moveNext_71() throws Exception {
				state = 72;				
				current = new MFElement("Messages", "", null, (new seq54_content_Messages()));
				pos++;
				return true;
			}
			private boolean moveNext_72() throws Exception {
				state = 0;				
				current = new MFElement("Logistics", "", null, (new seq55_content_Logistics()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				var6_map_SELECT__unitNumber__.close(); var6_map_SELECT__unitNumber__ = null;
				var5_map_SELECT__serviceOrder.close(); var5_map_SELECT__serviceOrder = null;
				var4_map_read_field.close(); var4_map_read_field = null;
				var1_map_SELECT__relatedServi.close(); var1_map_SELECT__relatedServi = null;
				var11_map_SELECT__orderNumber_.close(); var11_map_SELECT__orderNumber_ = null;
				var10_map_SELECT__serviceOrder.close(); var10_map_SELECT__serviceOrder = null;
				var9_map_read_field.close(); var9_map_read_field = null;
				var8_map_SELECT__relatedServi.close(); var8_map_SELECT__relatedServi = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq13_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq13_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq13_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq13_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 4);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, (Long)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "transactionId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq12__buyer_notifications_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq12__buyer_notifications_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq12__buyer_notifications_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq12__buyer_notifications_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq13_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_long(var3_NewRecord, var4_NewQuery, "relatedServiceOrderId");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq15_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		long var3_bv;
	
		public seq15_NewQuery(com.altova.db.Catalog var2_servicelive_integration, long var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq15_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq15_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 5);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, closure.var3_bv);
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq14__serviceorders_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		long var2_bv;
	
		public seq14__serviceorders_(com.altova.db.Catalog var1_servicelive_integration, long var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq14__serviceorders_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq14__serviceorders_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq15_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_long(var3_NewRecord, var4_NewQuery, "serviceOrderId");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq17_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq17_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq17_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq17_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 6);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, (Long)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "serviceOrderId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq16__customrefs_oms_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq16__customrefs_oms_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq16__customrefs_oms_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq16__customrefs_oms_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq17_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_String(var3_NewRecord, var4_NewQuery, "unitNumber");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq19_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq19_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq19_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq19_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 7);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, (Long)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "transactionId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq18__buyer_notifications_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq18__buyer_notifications_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq18__buyer_notifications_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq18__buyer_notifications_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq19_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_long(var3_NewRecord, var4_NewQuery, "relatedServiceOrderId");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq21_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		long var3_bv;
	
		public seq21_NewQuery(com.altova.db.Catalog var2_servicelive_integration, long var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq21_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq21_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 8);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, closure.var3_bv);
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq20__serviceorders_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		long var2_bv;
	
		public seq20__serviceorders_(com.altova.db.Catalog var1_servicelive_integration, long var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq20__serviceorders_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq20__serviceorders_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq21_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_long(var3_NewRecord, var4_NewQuery, "serviceOrderId");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq23_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq23_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq23_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq23_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 9);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, (Long)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "serviceOrderId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq22__customrefs_oms_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq22__customrefs_oms_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq22__customrefs_oms_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq22__customrefs_oms_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq23_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_String(var3_NewRecord, var4_NewQuery, "orderNumber");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq24_content_Customer implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq24_content_Customer(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq24_content_Customer closure;
			IEnumerator var1_map_SELECT__relatedServi;
			IEnumerator var4_map_read_field;
			IEnumerator var5_map_SELECT__serviceOrder;
			IEnumerator var6_map_SELECT__customerNumb;
			com.altova.mapforce.IEnumerable var7_read_field;
			public Enumerator(seq24_content_Customer closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 28:	if (moveNext_28()) return true; break;
					case 29:	if (moveNext_29()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 32:	if (moveNext_32()) return true; break;
					case 33:	if (moveNext_33()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
					case 35:	if (moveNext_35()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_map_SELECT__relatedServi = ((new seq25__buyer_notifications_(closure.var2_servicelive_integration, closure.var3_bv))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 9;				
				if (!var1_map_SELECT__relatedServi.moveNext()) {state = 6; return false; }
				var4_map_read_field = (com.altova.db.Dbs.readField(((com.altova.db.Record)(var1_map_SELECT__relatedServi.current())), "relatedServiceOrderId")).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 28;				
				var1_map_SELECT__relatedServi.close(); var1_map_SELECT__relatedServi = null;
				current = new MFElement("Type", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 13;				
				if (!var4_map_read_field.moveNext()) {state = 10; return false; }
				var5_map_SELECT__serviceOrder = ((new seq27__serviceorders_(closure.var2_servicelive_integration, ((Long)(var4_map_read_field.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 5;				
				var4_map_read_field.close(); var4_map_read_field = null;
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 17;				
				if (!var5_map_SELECT__serviceOrder.moveNext()) {state = 14; return false; }
				var6_map_SELECT__customerNumb = ((new seq29__customrefs_oms_(closure.var2_servicelive_integration, ((com.altova.db.Record)(var5_map_SELECT__serviceOrder.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 9;				
				var5_map_SELECT__serviceOrder.close(); var5_map_SELECT__serviceOrder = null;
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 17;				
				if (!var6_map_SELECT__customerNumb.moveNext()) {state = 18; return false; }
				var7_read_field = new com.altova.functions.Core.SequenceCache(com.altova.db.Dbs.readField(((com.altova.db.Record)(var6_map_SELECT__customerNumb.current())), "customerNumber"));
				if (!(com.altova.functions.Core.exists(var7_read_field))) {state = 17; return false; }
				current = new MFElement("Number", "", null, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(var7_read_field)));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 13;				
				var6_map_SELECT__customerNumb.close(); var6_map_SELECT__customerNumb = null;
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 29;				
				current = new MFElement("FirstName", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_29() throws Exception {
				state = 30;				
				current = new MFElement("LastName", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_30() throws Exception {
				state = 31;				
				current = new MFElement("Phone", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 32;				
				current = new MFElement("AltPhone", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_32() throws Exception {
				state = 33;				
				current = new MFElement("PreferredLanguage", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_33() throws Exception {
				state = 34;				
				current = new MFElement("CellPhoneNumber", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_34() throws Exception {
				state = 35;				
				current = new MFElement("SupplementalCustomerInformation", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 0;				
				current = new MFElement("Address", "", null, (new seq31_content_Address()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				var6_map_SELECT__customerNumb.close(); var6_map_SELECT__customerNumb = null;
				var5_map_SELECT__serviceOrder.close(); var5_map_SELECT__serviceOrder = null;
				var4_map_read_field.close(); var4_map_read_field = null;
				var1_map_SELECT__relatedServi.close(); var1_map_SELECT__relatedServi = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq26_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq26_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq26_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq26_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 10);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, (Long)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "transactionId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq25__buyer_notifications_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq25__buyer_notifications_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq25__buyer_notifications_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq25__buyer_notifications_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq26_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_long(var3_NewRecord, var4_NewQuery, "relatedServiceOrderId");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq28_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		long var3_bv;
	
		public seq28_NewQuery(com.altova.db.Catalog var2_servicelive_integration, long var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq28_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq28_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 11);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, closure.var3_bv);
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq27__serviceorders_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		long var2_bv;
	
		public seq27__serviceorders_(com.altova.db.Catalog var1_servicelive_integration, long var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq27__serviceorders_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq27__serviceorders_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq28_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_long(var3_NewRecord, var4_NewQuery, "serviceOrderId");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq30_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq30_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq30_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq30_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 12);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, (Long)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "serviceOrderId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq29__customrefs_oms_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq29__customrefs_oms_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq29__customrefs_oms_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq29__customrefs_oms_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq30_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_String(var3_NewRecord, var4_NewQuery, "customerNumber");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq31_content_Address implements IEnumerable
	{
	
		public seq31_content_Address()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq31_content_Address closure;
			public Enumerator(seq31_content_Address closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				current = new MFElement("StreetAddress1", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = new MFElement("StreetAddress2", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = new MFElement("City", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = new MFElement("State", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = new MFElement("ZipCode", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq32_content_RepairAt implements IEnumerable
	{
	
		public seq32_content_RepairAt()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq32_content_RepairAt closure;
			public Enumerator(seq32_content_RepairAt closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				current = new MFElement("Phone", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = new MFElement("AltPhone", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				current = new MFElement("Address", "", null, (new seq33_content_Address()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq33_content_Address implements IEnumerable
	{
	
		public seq33_content_Address()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq33_content_Address closure;
			public Enumerator(seq33_content_Address closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				current = new MFElement("StreetAddress1", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = new MFElement("StreetAddress2", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = new MFElement("City", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = new MFElement("State", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = new MFElement("ZipCode", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq34_content_Merchandise implements IEnumerable
	{
	
		public seq34_content_Merchandise()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq34_content_Merchandise closure;
			public Enumerator(seq34_content_Merchandise closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				current = new MFElement("Code", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = new MFElement("Description", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = new MFElement("PurchaseDate", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = new MFElement("Specialty", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = new MFElement("Brand", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = new MFElement("Model", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = new MFElement("SerialNumber", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = new MFElement("Division", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = new MFElement("ItemNumber", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = new MFElement("SearsSoldCode", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = new MFElement("SystemItemSuffix", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 16;				
				current = new MFElement("SearsStoreNumber", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 0;				
				current = new MFElement("ResidentialOrCommercialUsage", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq35_content_SalesCheck implements IEnumerable
	{
	
		public seq35_content_SalesCheck()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq35_content_SalesCheck closure;
			public Enumerator(seq35_content_SalesCheck closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				current = new MFElement("Number", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = new MFElement("Date", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = new MFElement("Time", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = new MFElement("SellingAssociate", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = new MFElement("SalesCheckItems", "", null, com.altova.functions.Core.box(new MFElement("Item", "", null, (new seq36_content_Item()))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq36_content_Item implements IEnumerable
	{
	
		public seq36_content_Item()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq36_content_Item closure;
			public Enumerator(seq36_content_Item closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				current = new MFElement("LineNumber", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = new MFElement("Division", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = new MFElement("ItemNumber", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = new MFElement("SKU", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = new MFElement("Description", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = new MFElement("Quantity", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = new MFElement("GiftFlag", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 0;				
				current = new MFElement("GiftDate", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq37_map_SELECT__serviceOrder implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq37_map_SELECT__serviceOrder(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq37_map_SELECT__serviceOrder closure;
			IEnumerator var1_map_SELECT__serviceOrder;
			IEnumerator var4_map_SELECT__sequence_num;
			public Enumerator(seq37_map_SELECT__serviceOrder closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_map_SELECT__serviceOrder = ((new seq38__serviceorders_(closure.var2_servicelive_integration, closure.var3_bv))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 9;				
				if (!var1_map_SELECT__serviceOrder.moveNext()) {state = 6; return false; }
				var4_map_SELECT__sequence_num = ((new seq40__tasks_(closure.var2_servicelive_integration, ((com.altova.db.Record)(var1_map_SELECT__serviceOrder.current()))))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_SELECT__serviceOrder.close(); var1_map_SELECT__serviceOrder = null;
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var4_map_SELECT__sequence_num.moveNext()) {state = 10; return false; }
				current = new MFElement("JobCode", "", null, (new seq42_content_JobCode(((com.altova.db.Record)(var4_map_SELECT__sequence_num.current())), closure.var2_servicelive_integration)));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 5;				
				var4_map_SELECT__sequence_num.close(); var4_map_SELECT__sequence_num = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var4_map_SELECT__sequence_num.close(); var4_map_SELECT__sequence_num = null;
				var1_map_SELECT__serviceOrder.close(); var1_map_SELECT__serviceOrder = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq39_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq39_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq39_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq39_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 13);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, (Long)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "transactionId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq38__serviceorders_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq38__serviceorders_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq38__serviceorders_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq38__serviceorders_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq39_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_long(var3_NewRecord, var4_NewQuery, "serviceOrderId");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq41_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq41_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq41_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq41_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 14);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, (Long)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "serviceOrderId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq40__tasks_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq40__tasks_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq40__tasks_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq40__tasks_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq41_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_int(var3_NewRecord, var4_NewQuery, "sequence_number");
				com.altova.db.Dbs.read_String(var3_NewRecord, var4_NewQuery, "externalSku");
				com.altova.db.Dbs.read_long(var3_NewRecord, var4_NewQuery, "taskId");
				com.altova.db.Dbs.read_String_ParseDecimal(var3_NewRecord, var4_NewQuery, "amount");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq42_content_JobCode implements IEnumerable
	{
		com.altova.db.Record var1_bv;
		com.altova.db.Catalog var4_servicelive_integration;
	
		public seq42_content_JobCode(com.altova.db.Record var1_bv, com.altova.db.Catalog var4_servicelive_integration)
		{
			this.var1_bv = var1_bv;
			this.var4_servicelive_integration = var4_servicelive_integration;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq42_content_JobCode closure;
			com.altova.mapforce.IEnumerable var2_read_field;
			IEnumerator var3_map_SELECT__chargeCode__;
			com.altova.mapforce.IEnumerable var5_read_field;
			IEnumerator var6_map_SELECT__type__FROM__;
			com.altova.mapforce.IEnumerable var7_read_field;
			IEnumerator var8_map_SELECT__coverage__FR;
			com.altova.mapforce.IEnumerable var9_read_field;
			IEnumerator var10_map_SELECT__description_;
			com.altova.mapforce.IEnumerable var11_read_field;
			public Enumerator(seq42_content_JobCode closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 30:	if (moveNext_30()) return true; break;
					case 31:	if (moveNext_31()) return true; break;
					case 41:	if (moveNext_41()) return true; break;
					case 42:	if (moveNext_42()) return true; break;
					case 52:	if (moveNext_52()) return true; break;
					case 53:	if (moveNext_53()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 6;				
				var2_read_field = new com.altova.functions.Core.SequenceCache(com.altova.db.Dbs.readField(closure.var1_bv, "externalSku"));
				if (!(com.altova.functions.Core.exists((new seq43_map_read_field(closure.var1_bv))))) {state = 6; return false; }
				current = new MFElement("SequenceNumber", "", null, com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong((Integer)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var1_bv, "sequence_number")))))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 15;				
				if (!(com.altova.functions.Core.exists(var2_read_field))) {state = 13; return false; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 19;				
				var3_map_SELECT__chargeCode__ = ((new seq44__tasks_oms_(closure.var4_servicelive_integration, closure.var1_bv))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 13;				
				current = new MFElement("Number", "", null, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(var2_read_field)));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 19;				
				if (!var3_map_SELECT__chargeCode__.moveNext()) {state = 20; return false; }
				var5_read_field = new com.altova.functions.Core.SequenceCache(com.altova.db.Dbs.readField(((com.altova.db.Record)(var3_map_SELECT__chargeCode__.current())), "chargeCode"));
				if (!(com.altova.functions.Core.exists(var5_read_field))) {state = 19; return false; }
				current = new MFElement("ChargeCode", "", null, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(var5_read_field)));
				pos++;
				return true;
			}
			private boolean moveNext_20() throws Exception {
				state = 30;				
				var3_map_SELECT__chargeCode__.close(); var3_map_SELECT__chargeCode__ = null;
				var6_map_SELECT__type__FROM__ = ((new seq46__tasks_oms_(closure.var4_servicelive_integration, closure.var1_bv))).enumerator();
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 30;				
				if (!var6_map_SELECT__type__FROM__.moveNext()) {state = 31; return false; }
				var7_read_field = new com.altova.functions.Core.SequenceCache(com.altova.db.Dbs.readField(((com.altova.db.Record)(var6_map_SELECT__type__FROM__.current())), "type"));
				if (!(com.altova.functions.Core.exists(var7_read_field))) {state = 30; return false; }
				current = new MFElement("Type", "", null, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(var7_read_field)));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 41;				
				var6_map_SELECT__type__FROM__.close(); var6_map_SELECT__type__FROM__ = null;
				var8_map_SELECT__coverage__FR = ((new seq48__tasks_oms_(closure.var4_servicelive_integration, closure.var1_bv))).enumerator();
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 41;				
				if (!var8_map_SELECT__coverage__FR.moveNext()) {state = 42; return false; }
				var9_read_field = new com.altova.functions.Core.SequenceCache(com.altova.db.Dbs.readField(((com.altova.db.Record)(var8_map_SELECT__coverage__FR.current())), "coverage"));
				if (!(com.altova.functions.Core.exists(var9_read_field))) {state = 41; return false; }
				current = new MFElement("Coverage", "", null, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(var9_read_field)));
				pos++;
				return true;
			}
			private boolean moveNext_42() throws Exception {
				state = 52;				
				var8_map_SELECT__coverage__FR.close(); var8_map_SELECT__coverage__FR = null;
				var10_map_SELECT__description_ = ((new seq50__tasks_oms_(closure.var4_servicelive_integration, closure.var1_bv))).enumerator();
				return false;
			}
			private boolean moveNext_52() throws Exception {
				state = 52;				
				if (!var10_map_SELECT__description_.moveNext()) {state = 53; return false; }
				var11_read_field = new com.altova.functions.Core.SequenceCache(com.altova.db.Dbs.readField(((com.altova.db.Record)(var10_map_SELECT__description_.current())), "description"));
				if (!(com.altova.functions.Core.exists(var11_read_field))) {state = 52; return false; }
				current = new MFElement("Description", "", null, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first(var11_read_field)));
				pos++;
				return true;
			}
			private boolean moveNext_53() throws Exception {
				state = 0;				
				var10_map_SELECT__description_.close(); var10_map_SELECT__description_ = null;
				if (!(com.altova.functions.Core.exists(com.altova.db.Dbs.readField(closure.var1_bv, "amount")))) {state = 0; return false; }
				if (!((Boolean)com.altova.functions.Core.first((new seq52_if_contains(closure.var1_bv))))) {state = 0; return false; }
				current = new MFElement("Amount", "", null, com.altova.functions.Core.box((java.lang.String)com.altova.functions.Core.first((new seq53_if_contains(closure.var1_bv)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				var3_map_SELECT__chargeCode__.close(); var3_map_SELECT__chargeCode__ = null;
				var6_map_SELECT__type__FROM__.close(); var6_map_SELECT__type__FROM__ = null;
				var8_map_SELECT__coverage__FR.close(); var8_map_SELECT__coverage__FR = null;
				var10_map_SELECT__description_.close(); var10_map_SELECT__description_ = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq43_map_read_field implements IEnumerable
	{
		com.altova.db.Record var2_bv;
	
		public seq43_map_read_field(com.altova.db.Record var2_bv)
		{
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq43_map_read_field closure;
			IEnumerator var1_map_read_field;
			public Enumerator(seq43_map_read_field closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_map_read_field = (com.altova.db.Dbs.readField(closure.var2_bv, "sequence_number")).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!var1_map_read_field.moveNext()) {state = 6; return false; }
				current = com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(((Integer)(var1_map_read_field.current()))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				var1_map_read_field.close(); var1_map_read_field = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var1_map_read_field.close(); var1_map_read_field = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq45_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq45_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq45_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq45_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 15);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, (Long)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "taskId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq44__tasks_oms_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq44__tasks_oms_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq44__tasks_oms_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq44__tasks_oms_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq45_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_String(var3_NewRecord, var4_NewQuery, "chargeCode");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq47_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq47_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq47_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq47_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 16);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, (Long)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "taskId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq46__tasks_oms_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq46__tasks_oms_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq46__tasks_oms_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq46__tasks_oms_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq47_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_String(var3_NewRecord, var4_NewQuery, "type");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq49_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq49_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq49_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq49_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 17);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, (Long)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "taskId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq48__tasks_oms_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq48__tasks_oms_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq48__tasks_oms_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq48__tasks_oms_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq49_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_String(var3_NewRecord, var4_NewQuery, "coverage");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq51_NewQuery implements IEnumerable
	{
		com.altova.db.Catalog var2_servicelive_integration;
		com.altova.db.Record var3_bv;
	
		public seq51_NewQuery(com.altova.db.Catalog var2_servicelive_integration, com.altova.db.Record var3_bv)
		{
			this.var2_servicelive_integration = var2_servicelive_integration;
			this.var3_bv = var3_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq51_NewQuery closure;
			com.altova.db.Statement var1_NewQuery;
			public Enumerator(seq51_NewQuery closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var1_NewQuery = com.altova.db.Dbs.newQuery(closure.var2_servicelive_integration, 18);
				com.altova.db.Dbs.bindParameter_long(var1_NewQuery, (Long)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var3_bv, "taskId")));
				current = com.altova.db.Dbs.executeQuery(var1_NewQuery);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeQuery(var1_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq50__tasks_oms_ implements IEnumerable
	{
		com.altova.db.Catalog var1_servicelive_integration;
		com.altova.db.Record var2_bv;
	
		public seq50__tasks_oms_(com.altova.db.Catalog var1_servicelive_integration, com.altova.db.Record var2_bv)
		{
			this.var1_servicelive_integration = var1_servicelive_integration;
			this.var2_bv = var2_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq50__tasks_oms_ closure;
			com.altova.db.ResultSetWrapper var4_NewQuery;
			com.altova.db.Record var3_NewRecord;
			public Enumerator(seq50__tasks_oms_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var4_NewQuery = (com.altova.db.ResultSetWrapper)com.altova.functions.Core.first((new seq51_NewQuery(closure.var1_servicelive_integration, closure.var2_bv)));
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 5;				
				if (!(com.altova.db.Dbs.moveNextRecord(var4_NewQuery))) {state = 0; return false; }
				var3_NewRecord = com.altova.db.Dbs.newRecord();
				com.altova.db.Dbs.read_String(var3_NewRecord, var4_NewQuery, "description");
				current = var3_NewRecord;
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				com.altova.db.Dbs.disposeRecordset(var4_NewQuery);
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq52_if_contains implements IEnumerable
	{
		com.altova.db.Record var1_bv;
	
		public seq52_if_contains(com.altova.db.Record var1_bv)
		{
			this.var1_bv = var1_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq52_if_contains closure;
			java.lang.String var2_const_amount;
			boolean var3_exists;
			public Enumerator(seq52_if_contains closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var2_const_amount = "amount";
				if (!(com.altova.functions.Core.contains(com.altova.CoreTypes.decimalToString((java.math.BigDecimal)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var1_bv, var2_const_amount))), "."))) {state = 18; return false; }
				var3_exists = com.altova.functions.Core.exists(com.altova.db.Dbs.readField(closure.var1_bv, var2_const_amount));
				if (!(var3_exists)) {state = 15; return false; }
				current = var3_exists;
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 0;				
				current = com.altova.CoreTypes.parseBoolean("false");
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.exists(com.altova.db.Dbs.readField(closure.var1_bv, var2_const_amount));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq53_if_contains implements IEnumerable
	{
		com.altova.db.Record var1_bv;
	
		public seq53_if_contains(com.altova.db.Record var1_bv)
		{
			this.var1_bv = var1_bv;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq53_if_contains closure;
			java.lang.String var2_const_amount;
			java.lang.String var3_;
			com.altova.mapforce.IEnumerable var6_read_field;
			boolean var4_exists;
			IEnumerator var5_map_read_field;
			public Enumerator(seq53_if_contains closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 25:	if (moveNext_25()) return true; break;
					case 26:	if (moveNext_26()) return true; break;
					case 27:	if (moveNext_27()) return true; break;
					case 34:	if (moveNext_34()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				var2_const_amount = "amount";
				var3_ = com.altova.CoreTypes.decimalToString((java.math.BigDecimal)com.altova.functions.Core.first(com.altova.db.Dbs.readField(closure.var1_bv, var2_const_amount)));
				if (!(com.altova.functions.Core.contains(var3_, "."))) {state = 34; return false; }
				var6_read_field = new com.altova.functions.Core.SequenceCache(com.altova.db.Dbs.readField(closure.var1_bv, var2_const_amount));
				var4_exists = com.altova.functions.Core.exists(var6_read_field);
				if (!(var4_exists)) {state = 0; return false; }
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.functions.Core.stringLength(com.altova.functions.Core.substringAfter(var3_, "."))))), new java.math.BigDecimal("1")))) {state = 25; return false; }
				if (!(var4_exists)) {state = 0; return false; }
				current = com.altova.functions.Core.concat(var3_, "0");
				pos++;
				return true;
			}
			private boolean moveNext_25() throws Exception {
				state = 26;				
				var5_map_read_field = (var6_read_field).enumerator();
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 26;				
				if (!var5_map_read_field.moveNext()) {state = 27; return false; }
				current = com.altova.CoreTypes.decimalToString(((java.math.BigDecimal)(var5_map_read_field.current())));
				pos++;
				return true;
			}
			private boolean moveNext_27() throws Exception {
				state = 0;				
				var5_map_read_field.close(); var5_map_read_field = null;
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.exists(com.altova.db.Dbs.readField(closure.var1_bv, var2_const_amount)))) {state = 0; return false; }
				current = com.altova.functions.Core.concat(var3_, ".00");
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				var5_map_read_field.close(); var5_map_read_field = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq54_content_Messages implements IEnumerable
	{
	
		public seq54_content_Messages()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq54_content_Messages closure;
			public Enumerator(seq54_content_Messages closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				return false;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq55_content_Logistics implements IEnumerable
	{
	
		public seq55_content_Logistics()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq55_content_Logistics closure;
			public Enumerator(seq55_content_Logistics closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				current = new MFElement("Order", "", null, (new seq56_content_Order()));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				current = new MFElement("LogisticsMerchandise", "", null, (new seq58_content_LogisticsMerchandise()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq56_content_Order implements IEnumerable
	{
	
		public seq56_content_Order()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq56_content_Order closure;
			public Enumerator(seq56_content_Order closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 12:	if (moveNext_12()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
					case 17:	if (moveNext_17()) return true; break;
					case 18:	if (moveNext_18()) return true; break;
					case 19:	if (moveNext_19()) return true; break;
					case 20:	if (moveNext_20()) return true; break;
					case 21:	if (moveNext_21()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				current = new MFElement("Number", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = new MFElement("WarehouseNumber", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = new MFElement("LastMaintenanceDate", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = new MFElement("DeliveryStatus", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				current = new MFElement("DeliveryDescription", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 10;				
				current = new MFElement("HoldCode", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 11;				
				current = new MFElement("HoldDescription", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 12;				
				current = new MFElement("PendCode", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 13;				
				current = new MFElement("PendDescription", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = new MFElement("SpecialInstructions", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				current = new MFElement("ItemInstructions", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_15() throws Exception {
				state = 16;				
				current = new MFElement("DeliveryDate", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 17;				
				current = new MFElement("PickupLocationCode", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_17() throws Exception {
				state = 18;				
				current = new MFElement("ShipmentMethodCode", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_18() throws Exception {
				state = 19;				
				current = new MFElement("ShipmentMethodDescription", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_19() throws Exception {
				state = 20;				
				current = new MFElement("DeliveryTimeCode", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_20() throws Exception {
				state = 21;				
				current = new MFElement("DeliveryTimeDescription", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 0;				
				current = new MFElement("Address", "", null, (new seq57_content_Address()));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq57_content_Address implements IEnumerable
	{
	
		public seq57_content_Address()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq57_content_Address closure;
			com.altova.mapforce.IEnumerable var1_const_;
			public Enumerator(seq57_content_Address closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				var1_const_ = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box(""));
				current = new MFElement("StreetAddress1", "", null, var1_const_);
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = new MFElement("StreetAddress2", "", null, var1_const_);
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = new MFElement("City", "", null, var1_const_);
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = new MFElement("State", "", null, var1_const_);
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = new MFElement("ZipCode", "", null, var1_const_);
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq58_content_LogisticsMerchandise implements IEnumerable
	{
	
		public seq58_content_LogisticsMerchandise()
		{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq58_content_LogisticsMerchandise closure;
			public Enumerator(seq58_content_LogisticsMerchandise closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 5;				
				current = new MFElement("PendCode", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = new MFElement("PendDescription", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = new MFElement("SCIMHandlingCode", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = new MFElement("SCIMHandlingDescription", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 0;				
				current = new MFElement("LastMaintenanceDate", "", null, com.altova.functions.Core.box(""));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}


	private boolean runDoesCloseAll = true;		

	// instances
	protected java.sql.Connection varservicelive_integrationInstance;
	protected long varbatchId;

	public void run(java.sql.Connection servicelive_integrationSourceConnection, long batchId9SourceParameter, String RI_InputTargetFilename) throws Exception {
		// open source streams
		// open target stream
		com.altova.io.FileOutput RI_InputTarget = new com.altova.io.FileOutput(RI_InputTargetFilename);

		// run
		run(servicelive_integrationSourceConnection, batchId9SourceParameter, RI_InputTarget);

		// close source streams
		// close target stream
		writeTrace("Saving " + RI_InputTargetFilename + "...\n");
		RI_InputTarget.close();
	}


	// main entry point

	public void run(java.sql.Connection servicelive_integrationSourceConnection, long batchId9SourceParameter, com.altova.io.Output RI_InputTarget) throws Exception {
		// Open the source(s)
		writeTrace("Connecting to servicelive_integration database...\n");
			
		varservicelive_integrationInstance = servicelive_integrationSourceConnection;
		
			varbatchId = batchId9SourceParameter;


		// Create the target
		org.w3c.dom.Document RI_Input2Doc = (RI_InputTarget.getType() == com.altova.io.Output.IO_DOM) ? RI_InputTarget.getDocument() : XmlTreeOperations.createDocument();

		// Execute mapping

		seq1_Main mapping = new seq1_Main(new com.altova.db.Catalog(varservicelive_integrationInstance), batchId9SourceParameter);

		com.altova.xml.MFDOMWriter.write(mapping, RI_Input2Doc);
		// Close the target
		XmlTreeOperations.saveDocument(RI_Input2Doc, RI_InputTarget, "UTF-8", false, false, true);
		// Close the source
		varservicelive_integrationInstance.close();

		
		if (runDoesCloseAll)
		{
			RI_InputTarget.close();
		}
	}


	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}
	static IEnumerable throwUserException(String content)
	{
		throw new com.altova.UserException(content);
	}
}
