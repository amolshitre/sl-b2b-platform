<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="so">

	<cacheModel type="LRU" id="contactCache">
		<flushInterval hours="2" />
		<property name="size" value="15000" />
	</cacheModel>
	
	<cacheModel type="LRU" id="wfStatusCache">
		<flushInterval hours="2" />
		<property name="size" value="10000" />
	</cacheModel>
	
	<cacheModel type="LRU" id="wfSubStatusCache">
		<flushInterval hours="24" />
		<property name="size" value="1000" />
	</cacheModel>


	<cacheModel type="LRU" id="counterOfferReasonsCache">
		<flushInterval hours="24" />
		<property name="size" value="1000" />
	</cacheModel>

	<typeAlias alias="customRef"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderCustomRefVO" />
	<typeAlias alias="initPrice" 
		type="com.newco.marketplace.dto.vo.InitialPriceDetailsVO"/>
	<typeAlias alias="buyerAltInfo"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderAltBuyerContactVO" />
  	<typeAlias alias="uploadAuditVO"
		type="com.newco.marketplace.vo.buyerFileUpload.UploadAuditVO" />
	<typeAlias alias="resource"
		type="com.newco.marketplace.dto.vo.provider.VendorResource" />
	<typeAlias alias="firmDetails"
		type="com.newco.marketplace.dto.vo.provider.ProviderFirmVO" />
	<typeAlias alias="solocation"
		type="com.newco.marketplace.dto.vo.serviceorder.SoLocation" />
	<typeAlias alias="contact"
		type="com.newco.marketplace.dto.vo.serviceorder.Contact" />
	<typeAlias alias="sobuyer"
		type="com.newco.marketplace.dto.vo.serviceorder.Buyer" />
	<typeAlias alias="sobuyerresource"
		type="com.newco.marketplace.dto.vo.serviceorder.BuyerResource" />
	<typeAlias alias="carrier"
		type="com.newco.marketplace.dto.vo.serviceorder.Carrier" />
	<typeAlias alias="socontactphone"
		type="com.newco.marketplace.dto.vo.serviceorder.SoContactPhone" />
	<typeAlias alias="routedProvider"
		type="com.newco.marketplace.dto.vo.serviceorder.RoutedProvider" />
		
	<typeAlias alias="rescheduleVo"
		type="com.newco.marketplace.vo.ordermanagement.so.RescheduleVO" />
		
	<typeAlias alias="tierRoutedProvider"
		type="com.newco.marketplace.dto.vo.serviceorder.TierRoutedProvider" /> 
	<typeAlias alias="mvo"
		type="com.newco.marketplace.dto.vo.ledger.MarketPlaceTransactionVO" />
	<typeAlias alias="documentVO"
		type="com.newco.marketplace.dto.vo.DocumentVO" />
	<typeAlias alias="soContact"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderContact" />
	<typeAlias alias="pendingCancelHistory"
		type="com.newco.marketplace.dto.vo.serviceorder.PendingCancelHistoryVO" />
	<typeAlias alias="so"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrder" />
	<typeAlias alias="soCancelVO"
		type="com.newco.marketplace.dto.vo.so.order.SoCancelVO" />
	<typeAlias alias="providerTel"
		type="com.newco.marketplace.dto.vo.serviceorder.ProviderContactVO"/>	
	<typeAlias alias="SODocument"
		type="com.newco.marketplace.dto.vo.serviceorder.SODocument" />
	<typeAlias alias="task"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderTask" />
	<typeAlias alias="note"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderNote" />
	<typeAlias alias="part"
		type="com.newco.marketplace.dto.vo.serviceorder.Part" />
	<typeAlias alias="invoiceParts"
		type="com.newco.marketplace.dto.vo.serviceorder.ProviderInvoicePartsVO" />
	<typeAlias alias="invoiceDocIdList"
	    type="com.newco.marketplace.api.mobile.beans.sodetails.InvoiceDocumentVO"/>	
	<typeAlias alias="soPartLaborPriceReason"
		type="com.newco.marketplace.dto.vo.serviceorder.SOPartLaborPriceReasonVO" />
	<typeAlias alias="wfStates"
		type="com.newco.marketplace.dto.vo.serviceorder.WfStatesVO" />
	<typeAlias alias="soWFStateTransitionVO"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderWorkflowStateTransitionVO" />
	<typeAlias alias="sorole"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderRole" />
	<typeAlias alias="wfStatesCounts"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderWfStatesCountsVO" />
	<typeAlias alias="soDetails"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderSearchResultsVO" />

	<typeAlias alias="serviceOrderMonitor"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderMonitorVO" />

	<typeAlias alias="serviceOrderMonitorResults"
		type="com.newco.marketplace.dto.vo.pagination.ServiceOrderMonitorResultVO" />
    <typeAlias alias="providerDetail" 
        type="com.newco.marketplace.dto.vo.serviceorder.ProviderDetail" />
	<typeAlias alias="soResponseVO"
		type="com.newco.marketplace.dto.vo.serviceorder.ResponseSoVO" />
	<typeAlias alias="routedProResponseVO"
		type="com.newco.marketplace.dto.vo.serviceorder.RoutedProviderResponseVO" />	
	<typeAlias alias="reasonLookupVO"
		type="com.newco.marketplace.dto.vo.serviceorder.ReasonLookupVO" />

	<typeAlias alias="somTabsDetails"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderTabResultsVO" />
	<typeAlias alias="soDetail"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderDetail" />
	<typeAlias alias="buyerDetail"
		type="com.newco.marketplace.dto.vo.serviceorder.BuyerDetail" />
	<typeAlias alias="providerDetail"
		type="com.newco.marketplace.dto.vo.serviceorder.ProviderDetail" />

	<typeAlias alias="serviceOrderMonitor"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderMonitorVO" />

	<typeAlias alias="ajaxCache"
		type="com.newco.marketplace.dto.vo.ajax.AjaxCacheVO" />
	<typeAlias alias="rescheduleData"
		type="com.newco.marketplace.dto.vo.so.order.ServiceOrderRescheduleVO" />

	<typeAlias alias="serviceOrderMonitorResults"
		type="com.newco.marketplace.dto.vo.pagination.ServiceOrderMonitorResultVO" />

	<typeAlias alias="problemLookupVO"
		type="com.newco.marketplace.dto.vo.serviceorder.ProblemLookupVO" />

	<typeAlias alias="problemResolutionSoVO"
		type="com.newco.marketplace.dto.vo.serviceorder.ProblemResolutionSoVO" />
	<typeAlias alias="serviceOrderStatusVO"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderStatusVO" />
	<typeAlias alias="serviceOrderSubStatusVO"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderSubStatusVO" />
	<typeAlias alias="serviceOrderStatusInput"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderStatusInput" />

	<typeAlias alias="document"
		type="com.newco.marketplace.dto.vo.DocumentVO" />


	<typeAlias alias="skill"
		type="com.newco.marketplace.dto.vo.skillTree.SkillNodeVO" />
	
	<typeAlias alias="product"
		type="com.newco.marketplace.dto.vo.serviceorder.ProductDetailVO" />
		
	<typeAlias alias="serviceTypes"
		type="com.newco.marketplace.dto.vo.skillTree.ServiceTypesVO" />

	<typeAlias alias="surveyResponseSO"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderSurveyResponseVO" />

	<typeAlias alias="contactPhone"
		type="com.newco.marketplace.dto.vo.serviceorder.PhoneVO" />

	<typeAlias alias="uploadAuditErrorVO"
		type="com.newco.marketplace.dto.vo.buyerUploadScheduler.UploadAuditErrorVO" /> 
		
	<typeAlias alias="price"
		type="com.newco.marketplace.dto.vo.price.ServiceOrderPriceVO" />
		
	<typeAlias alias="buyerPendingCancelPrice"
		type="com.newco.marketplace.dto.vo.price.PendingCancelPriceVO" />
		
		<typeAlias alias="buyerPendingCancelPreviousPrice"
		type="com.newco.marketplace.dto.vo.price.PendingCancelPriceVO" />
		
	<typeAlias alias="providerPendingCancelPrice"
		type="com.newco.marketplace.dto.vo.price.PendingCancelPriceVO" />
		
	<typeAlias alias="upsellInfo"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderAddonVO" />
		
	<typeAlias alias="soSearchResult"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrder" />
		
	<typeAlias alias="counterOfferReasons"
		type="com.newco.marketplace.dto.vo.serviceorder.CounterOfferReasonsVO" />
		
	<typeAlias alias="soOutFileTrackingVO"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderOutFileTrackingVO" />
	
	<typeAlias alias="marketMakerProviderResponse"
		type="com.newco.marketplace.dto.vo.serviceorder.MarketMakerProviderResponse" />
		
	<typeAlias alias="ivrDetailsVO"
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderIvrDetailsVO" />
	<typeAlias alias="buyerRefVO"
		type="com.newco.marketplace.dto.vo.buyer.BuyerReferenceVO" />
		
	<typeAlias alias="lookUpVo"
		type="com.newco.marketplace.dto.vo.LookupVO" />
		
	<typeAlias alias="taskPriceVO"
		type="com.newco.marketplace.dto.vo.serviceorder.SOTaskPriceHistoryVO" />	
	<typeAlias alias="reasoncodeVO" 
		type="com.newco.marketplace.dto.vo.reasonCode.ReasonCodeVO"/>
	<typeAlias alias="soSpendLimitHistoryVO" 
		type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderSpendLimitHistoryVO" />
	<typeAlias alias="spendLimitHistoryVO"
	      type="com.newco.marketplace.dto.vo.serviceorder.ServiceOrderSpendLimitHistoryListVO" />
	      
	 <!-- SL-18007 added result map for solevel price change history-->
	 <typeAlias alias="soPriceChangeHistory"
		type="com.newco.marketplace.dto.vo.serviceorder.SoPriceChangeHistory" />
	 <typeAlias alias="preCallHistory"
		type="com.newco.marketplace.business.iBusiness.api.beans.ordermanagement.getPreCallHistory.PreCallHistory" />
		
	 <typeAlias alias="soSchedule"
		type="com.newco.marketplace.dto.vo.serviceorder.SoSchedule" />
	
	<typeAlias alias="soWrkFlowControls"
		type="com.newco.marketplace.dto.vo.SOWorkflowControlsVO" />
	<!--SL-19206: Added for including accepted provider firm contact details  -->
	<typeAlias alias="providerFirmContact" 
	    type="com.newco.marketplace.dto.vo.provider.FirmContact"/>	
	
	<typeAlias alias="estimateVO"
		type="com.newco.marketplace.dto.vo.EstimateVO" />
		<typeAlias alias="estimateTaskVO"
		type="com.newco.marketplace.dto.vo.EstimateTaskVO" />
	<typeAlias alias="estimateLocationVO"
		type="com.newco.marketplace.dto.vo.EstimateLocationVO" />
	<typeAlias alias="closedOrdersRequestVO"
		type="com.newco.marketplace.dto.vo.serviceorder.ClosedOrdersRequestVO" />
	<typeAlias alias="closedServiceOrderVO"
		type="com.newco.marketplace.dto.vo.serviceorder.ClosedServiceOrderVO" />
	<typeAlias alias="basicFirmDetailsVO"
		type="com.newco.marketplace.dto.vo.provider.BasicFirmDetailsVO" />
	    <!--Priority 5B changes: Added for fetching validation rules  -->
	<typeAlias alias="validationVO" 
	    type="com.newco.marketplace.dto.vo.ValidationRulesVO"/>	
	 <typeAlias alias="licensesAndCertVO" type="com.newco.marketplace.vo.provider.LicensesAndCertVO"/>
	 <typeAlias alias="lastClosedVo" type="com.newco.marketplace.vo.provider.LastClosedOrderVO"/>
	 <typeAlias alias="firmServicesVO"
		type="com.newco.marketplace.dto.vo.leadsmanagement.FirmServiceVO" />
	 <typeAlias alias="firmReviewVO"
		type="com.newco.marketplace.dto.vo.leadsmanagement.ReviewVO" />
		 <typeAlias alias="warrantyVO"
		type="com.newco.marketplace.vo.provider.WarrantyVO" />
	<typeAlias alias="reviewVO"
		type="com.newco.marketplace.dto.vo.leadsmanagement.ReviewVO" />
	<typeAlias alias="estimateHistoryVO"
		type="com.newco.marketplace.dto.vo.EstimateHistoryVO" />
	<typeAlias alias="estimateHistoryTaskVO"
		type="com.newco.marketplace.dto.vo.EstimateHistoryTaskVO" />
	<typeAlias alias="soAdditionalPayment"
		type="com.newco.marketplace.dto.vo.serviceorder.AdditionalPaymentVO" />
		
	<typeAlias alias="skuDetailsVO" 
	    type="com.newco.marketplace.dto.vo.SkuDetailsVO"/>  
	<typeAlias alias="serviceDatetimeSlot" 
	    type="com.newco.marketplace.dto.vo.serviceorder.ServiceDatetimeSlot"/> 
	     
	   <typeAlias alias="warrantyHomeReasonInfoVO" 
	    type="com.newco.marketplace.api.mobile.beans.vo.WarrantyHomeReasonInfoVO"/>  
	    
	    
		<typeAlias alias="providerDetailWithSOAccepted" 
        type="com.newco.marketplace.dto.vo.provider.ProviderDetailWithSOAccepted" />
    
		<typeAlias alias="JobCodeDetails" 
        type="com.newco.marketplace.dto.vo.serviceorder.JobCodeVO"/>
        
        <typeAlias alias="PaymentDetails" 
        type="com.newco.marketplace.dto.vo.serviceorder.PaymentDetailsVO"/>
        
        <typeAlias alias="InvoiceDetails" 
        type="com.newco.marketplace.dto.vo.serviceorder.PartDatasVO"/> 
	    
	  <resultMap id="soServiceDatetimeSlot.resultMap" class="serviceDatetimeSlot">
		<result property="slotId" column="so_service_datetime_slot_id" />
		<result property="soId" column="so_id" />
		<result property="serviceStartDate" column="service_start_date"  />
		<result property="serviceStartTime" column="service_start_time"/>
		<result property="serviceEndDate" column="service_end_date" />
		<result property="serviceEndTime" column="service_end_time" />
		<result property="slotSelected" column="slot_seleted_ind" />
		<result property="preferenceInd" column="preference_ind" />
		<result property="createdDate" column="created_date" />
		<result property="modifiedDate" column="modified_date" />
		<result property="modifiedBy" column="modified_by"  />
		
		
	</resultMap>
	     
	 <resultMap id="soSpendLimitHistoryVO.resultMap" class="soSpendLimitHistoryVO" >
	    <result property="soId" column="so_id"/>
	    <result property="spendLimitLabor" column="spend_limit_labor"/>
	    <result property="spendLimitParts" column="spend_limit_parts"/>
	    <result property="buyerId" column="buyer_id"/>
	    <result property="historyVOlist" column="so_id"
	            select="so.getSpendLimitHistorylist.query"/>
	 
	 </resultMap>
	<resultMap id="ivrDetails.resultsmap" class="ivrDetailsVO">
		<result property="soId" column="so_id" />
		<result property="buyerId" column="buyer_id" />
		<result property="soCustRefs" column="so_id" select="soCustRefForIvr.query" />
		<result property="phoneDetails" column="so_id" select="soPhoneDetailsForIvr.query" />
	</resultMap>
		
	<resultMap id="accptResContact.resultsmap" class="contact">
		<result property="soId" column="so_id" />
		<result property="contactId" column="contact_id" />
		<result property="businessName" column="business_name" />
		<result property="lastName" column="last_name" />
		<result property="firstName" column="first_name" />
		<result property="mi" column="mi" />
		<result property="suffix" column="suffix" />
		<result property="email" column="email" />
		<result property="honorific" column="honorific" />
		<result property="entityId" column="accepted_resource_id" />
		<result property="resLocId" column="locn_id" />
		<result property="phoneNo" column="phone_no" />
		<result property="faxNo" column="fax_no" />
		<result property="cellNo" column="mobile_no" />
		<result property="phoneNoExt" column="phone_no_ext" />
		<result property="street_1" column="street_1" />
		<result property="street_2" column="street_2" />
		<result property="city" column="city" />
		<result property="stateCd" column="state_cd" />
		<result property="zip" column="zip" />
		<result property="zip4" column="zip4" />
		<result property="country" column="country" />
		<result property="locnTypeId" column="locn_type_id" />
		<result property="locName" column="locn_name" />
	</resultMap>
	<resultMap class="estimateVO"    id="estimateDetailList.resultmap">
        <result property="estimationId" column="estimation_id"/>   
        <result property="estimationRefNo" column="reference_no" />           
        <result property="estimationDate" column="estimation_date" />
        <result property="estimationExpiryDate" column="estimation_expiry_date" />     
        <result property="responseDate" column="response_date" />
       	<result property="estimateTasks" column="estimation_id"
				select="getEstimateTaskDetails.query" />
		<result property="estimateParts" column="estimation_id"
				select="getEstimatePartDetails.query" />
		<result property="estimateOtherEstimateServices" column="estimation_id"
				select="getEstimateOtherServicesDetails.query" />				
        <result property="totalLaborPrice" column="total_labor_price"/>   
        <result property="totalPartsPrice" column="total_parts_price" />
        <result property="totalOtherServicePrice" column="total_other_service_price" />        
        <result property="discountType" column="discount_type" />
        <result property="discountedPercentage" column="discounted_percentage" />
        <result property="discountedAmount" column="discounted_amount" />   
        <result property="taxRate" column="tax_rate" />
        <result property="taxType" column="tax_type" />   
        <result property="taxPrice" column="tax" />
        <result property="laborDiscountType" column="labor_discount_type" />
		<result property="laborDiscountedPercentage" column="labor_discounted_percentage" />
		<result property="laborDiscountedAmount" column="labor_discounted_amount" />
		<result property="laborTaxRate" column="labor_tax_rate" />
		<result property="laborTaxPrice" column="labor_tax_price" />
		<result property="partsDiscountType" column="parts_discount_type" />
		<result property="partsDiscountedPercentage" column="parts_discounted_percentage" />
		<result property="partsDiscountedAmount" column="parts_discounted_amount" />
		<result property="partsTaxRate" column="parts_tax_rate" />
		<result property="partsTaxPrice" column="parts_tax_price" />
		<result property="totalPrice" column="total_price" />           
        <result property="comments" column="comments"/>
        <result property="logoDocumentId" column="logo_doc_id" />
        <result property="vendorId" column="vendor_id"/>
        <result property="resourceId" column="resource_id"/>
        <result property="description" column="description"/>
        <result property="acceptSource" column="accept_source"/>
        <result property="tripCharge" column="trip_charge"/>
        <result property="status" column="status"/>
        <result property="respondedCustomerName" column="responded_customer_name"/>
        <result property="responseDate" column="response_date" />
        <result property="firmLocation" column="vendor_id"
        		select="getEstimateFirmLocation.query" />
        <result property="providerLocation" column="resource_id"
        		select="getEstimateProviderLocation.query" />
        <result property="estimateHistoryList" column="estimation_id"
        		select="getEstimateHistory.query" />
        <result property="estimateTasksHistory" column="estimation_id"
				select="getEstimateTaskHistoryDetails.query" />
		<result property="estimatePartsHistory" column="estimation_id"
				select="getEstimatePartHistoryDetails.query" />
		<result property="estimateOtherServicesHistory" column="estimation_id"
				select="getEstimateOtherServicesHistoryDetails.query" />				
    </resultMap>
    
    
     <resultMap class="estimateTaskVO" id="estimateItemDetails.resultmap">
        <result property="taskSeqNumber" column="seq_no"/>
        <result property="taskName" column="name" />
        <result property="partNumber" column="item_number" />
        <result property="taskType" column="type" />
        <result property="description" column="description" />
        <result property="unitPrice" column="unit_price" />
        <result property="quantity" column="quantity" />
        <result property="totalPrice" column="total_price" />
        <result property="additionalDetails" column="additional_details" />
    </resultMap>
    
   <resultMap class="estimateTaskVO" id="estimateLaborDetails.resultmap">
        <result property="itemId" column="item_id"/>
        <result property="taskSeqNumber" column="seq_no"/>
        <result property="taskName" column="name" />
        <result property="taskType" column="type" />
        <result property="description" column="description" />
        <result property="unitPrice" column="unit_price" />
        <result property="quantity" column="quantity" />
        <result property="totalPrice" column="total_price" />
        <result property="additionalDetails" column="additional_details" />
    </resultMap>
    
    <resultMap class="estimateTaskVO" id="estimatePartDetails.resultmap">
        <result property="itemId" column="item_id"/>   
        <result property="partSeqNumber" column="seq_no"/>
        <result property="partName" column="name" />
        <result property="partNumber" column="item_number" />
        <result property="taskType" column="type" />
        <result property="description" column="description" />
        <result property="unitPrice" column="unit_price" />
        <result property="quantity" column="quantity" />
        <result property="totalPrice" column="total_price" />
        <result property="additionalDetails" column="additional_details" />
    </resultMap>

    <resultMap class="estimateTaskVO" id="estimateOtherEstimateServices.resultmap">
        <result property="itemId" column="item_id"/>   
	    <result property="otherServiceSeqNumber" column="seq_no"/>
		<result property="otherServiceType" column="type" />
		<result property="otherServiceName" column="name" />
		<result property="description" column="description" />
		<result property="unitPrice" column="unit_price" />
		<result property="quantity" column="quantity" />
        <result property="totalPrice" column="total_price" />
		<result property="additionalDetails" column="additional_details" />
	 </resultMap>    
    
    <resultMap class="estimateHistoryVO"    id="estimateHistoryList.resultmap">
        <result property="estimationId" column="estimation_id"/>   
        <result property="estimationHistoryId" column="estimation_history_id"/>  
        <result property="estimationRefNo" column="reference_no" />           
        <result property="estimationDate" column="estimation_date" />
        <result property="estimationExpiryDate" column="estimation_expiry_date" />   
        <result property="responseDate" column="response_date" />
        <result property="totalLaborPrice" column="total_labor_price"/>   
        <result property="totalPartsPrice" column="total_parts_price" />
        <result property="totalOtherServicePrice" column="total_other_service_price" />        
        <result property="discountType" column="discount_type" />
        <result property="discountedPercentage" column="discounted_percentage" />
        <result property="discountedAmount" column="discounted_amount" />   
        <result property="taxRate" column="tax_rate" />
        <result property="taxType" column="tax_type" />   
        <result property="taxPrice" column="tax" />
        <result property="laborDiscountType" column="labor_discount_type" />
		<result property="laborDiscountedPercentage" column="labor_discounted_percentage" />
		<result property="laborDiscountedAmount" column="labor_discounted_amount" />
		<result property="laborTaxRate" column="labor_tax_rate" />
		<result property="laborTaxPrice" column="labor_tax_price" />
		<result property="partsDiscountType" column="parts_discount_type" />
		<result property="partsDiscountedPercentage" column="parts_discounted_percentage" />
		<result property="partsDiscountedAmount" column="parts_discounted_amount" />
		<result property="partsTaxRate" column="parts_tax_rate" />
		<result property="partsTaxPrice" column="parts_tax_price" />
		<result property="totalPrice" column="total_price" />           
        <result property="comments" column="comments"/>
        <result property="logoDocumentId" column="logo_doc_id" />
        <result property="vendorId" column="vendor_id"/>
        <result property="resourceId" column="resource_id"/>
        <result property="description" column="description"/>
        <result property="acceptSource" column="accept_source"/>
        <result property="tripCharge" column="trip_charge"/>
        <result property="status" column="status"/>
        <result property="respondedCustomerName" column="responded_customer_name"/>
        <result property="responseDate" column="response_date" />
        <result property="firmLocation" column="vendor_id"
        		select="getEstimateFirmLocation.query" />
        <result property="providerLocation" column="resource_id"
        		select="getEstimateProviderLocation.query" />
        <result property="action" column="action"/>
    </resultMap>
    
       <resultMap class="estimateHistoryTaskVO" id="estimateLaborHistoryDetails.resultmap">
        <result property="taskSeqNumber" column="seq_no"/>
        <result property="taskName" column="name" />
        <result property="taskType" column="type" />
        <result property="description" column="description" />
        <result property="unitPrice" column="unit_price" />
        <result property="quantity" column="quantity" />
        <result property="totalPrice" column="total_price" />
        <result property="additionalDetails" column="additional_details" />
        <result property="action" column="action" />
        <result property="itemId" column="item_id" />
        <result property="estimationHistoryId" column="estimation_history_id" />
    </resultMap>
    
    <resultMap class="estimateHistoryTaskVO" id="estimatePartHistoryDetails.resultmap">
        <result property="partSeqNumber" column="seq_no"/>
        <result property="partName" column="name" />
        <result property="partNumber" column="item_number" />
        <result property="taskType" column="type" />
        <result property="description" column="description" />
        <result property="unitPrice" column="unit_price" />
        <result property="quantity" column="quantity" />
        <result property="totalPrice" column="total_price" />
        <result property="additionalDetails" column="additional_details" />
        <result property="action" column="action" />
        <result property="itemId" column="item_id" />
        <result property="estimationHistoryId" column="estimation_history_id" />        
    </resultMap>
    
    	<resultMap class="estimateHistoryTaskVO" id="estimateOtherServicesHistory.resultmap">
        <result property="otherServiceSeqNumber" column="seq_no"/>
        <result property="otherServiceType" column="type" />
        <result property="otherServiceName" column="name" />
        <result property="description" column="description" />
        <result property="unitPrice" column="unit_price" />
        <result property="quantity" column="quantity" />
        <result property="totalPrice" column="total_price" />
        <result property="additionalDetails" column="additional_details" />
        <result property="action" column="action" />
        <result property="itemId" column="item_id" />
        <result property="estimationHistoryId" column="estimation_history_id" />          
    </resultMap>
	
	<select id="acceptedResourceContactInfo.query"
		resultMap="accptResContact.resultsmap">
		select sh.so_id, vr.contact_id, vh.business_name, ct.last_name,
		ct.first_name, ct.mi, ct.suffix, ct.email, ct.honorific,
		sh.accepted_resource_id, vr.locn_id, vh.bus_phone_no as phone_no, vh.bus_fax_no as fax_no,
		ct.mobile_no, vh.bus_phone_no_ext as phone_no_ext, lc.street_1, lc.street_2,
		lc.city, lc.state_cd, lc.zip, lc.zip4, lc.country,
		lc.locn_type_id, lc.locn_name from so_hdr sh, vendor_resource
		vr, contact ct, vendor_hdr vh, location lc where
		sh.accepted_resource_id = vr.resource_id and vr.contact_id =
		ct.contact_id and vr.vendor_id = vh.vendor_id and lc.locn_id =
		vr.locn_id and sh.so_id=#soId#
	</select>

	<select id="so_problem_lookup.query"
		resultClass="problemLookupVO">
		SELECT wfst.so_substatus_id , substat.descr , wfst.sort_order
		FROM so_wf_substatus wfst, lu_so_substatus substat WHERE
		wfst.so_substatus_id = substat.so_substatus_id AND
		wfst.wf_state_id = #wfStateId# ORDER BY wfst.sort_order asc
	</select>

	<select id="so_status_desc.query"
		resultClass="java.lang.String">
		SELECT substat.descr
		FROM lu_so_substatus substat WHERE
		substat.so_substatus_id = #soSubStatusID# 
	</select>

	<!-- 
	<select id="so_buyeradditionalattrib.query" parameterClass="java.lang.Integer" resultClass="sobuyer">
		select
	  		funding_type_id as fundingTypeId,
	  		posting_fee as postingFee,
	  		cancellation_fee as cancellationFee 
		from buyer where buyer_id=#buyerId#
	</select>
 	-->
 	<!-- The action_id = 10 in this query is used to filter the action of type 'ReportProblem' -->
	<select id="so.pbdesc" parameterClass="java.lang.String"
		resultClass="problemResolutionSoVO">
		SELECT distinct sohdr.so_id as soId, sohdr.wf_state_id as
		wfStateId, sohdr.so_substatus_id as subStatusId,
		sohdr.modified_by as modifiedBy, lusubstatus.descr as
		subStatusDesc, sohdr.last_status_id as lastStateId,
		sologging.chg_comment as pbComment FROM so_hdr sohdr,
		lu_so_substatus lusubstatus, so_logging sologging,
		lu_action_master luactions WHERE sohdr.so_substatus_id =
		lusubstatus.so_substatus_id AND sohdr.so_id = sologging.so_id and sohdr.so_id = #soId#
		AND sologging.action_id = 10 AND sologging.created_date = (select max(T1.created_date) from
		so_logging T1 where T1.action_id = 10 AND T1.so_id = sohdr.so_id AND sologging.action_id = 10 )
	</select>

	<resultMap id="reasonIdResult" class="reasonLookupVO">
		<result property="id" column="resp_reason_id" />
		<result property="descr" column="descr" />
		<result property="sort_order" column="sort_order" />
	</resultMap>

	<select id="so_reject_reason_lookup.query"
		resultClass="reasonLookupVO">
		SELECT resp_reason_id as id, descr , sort_order FROM
		lu_so_provider_resp_reason WHERE provider_resp_id = 3 ORDER BY
		sort_order asc
	</select>

   <select id="service_providers_name.query" parameterClass="java.lang.Integer" 
              resultClass="providerDetail"> 
       SELECT vr.resource_id AS providerId, 
       c.contact_id AS contactId, 
          c.last_name lastName, 
          c.first_name firstName 
       FROM vendor_resource vr
       JOIN vendor_resource vr2 ON (vr.vendor_id = vr2.vendor_id AND vr2.resource_id=#resourceId#)
       JOIN contact c ON (vr.contact_id = c.contact_id AND c.last_name != '' AND c.first_name != '')
       ORDER BY c.last_name,c.first_name
       </select> 
     
       <select id="service_markets_name.query" parameterClass="java.lang.Integer" 
              resultClass="providerDetail"> 
            SELECT distinct mar.market_id AS marketId,
              mar.market_name AS marketName 
			FROM vendor_resource vr 
			JOIN location l ON l.locn_id = vr.locn_id 
			JOIN lu_zip_market zmar ON zmar.zip = l.zip
			JOIN lu_market mar ON mar.market_id = zmar.market_id
			WHERE vr.resource_id =  #resourceId#
			ORDER BY mar.market_name
      </select> 
	
	<update id="so.updateLimit" parameterClass="so">
		UPDATE so_hdr SET spend_limit_labor = #spendLimitLabor#
		<isNotNull prepend=", " property="spendLimitIncrComment">
			spend_limit_incr_comment=#spendLimitIncrComment#
		</isNotNull>
		<isNotNull prepend=", " property="spendLimitParts">
				spend_limit_parts = #spendLimitParts#
		</isNotNull>
		<isNotNull prepend=", " property="spendLimitLabor">
				spend_limit_labor = #spendLimitLabor#
		</isNotNull>
		WHERE so_id = #soId#
	</update>

	<update id="so.updateSOPrice" parameterClass="price">
		update so_price
			set modified_date = now()
				<isNotNull prepend=", " property="origSpendLimitLabor">
					original_spend_limit_labor = #origSpendLimitLabor#
				</isNotNull>
				<isNotNull prepend=", " property="origSpendLimitParts">
					original_spend_limit_parts = #origSpendLimitParts#
				</isNotNull>
				<isNotNull prepend=", " property="discountedSpendLimitLabor">
					discounted_spend_limit_labor = #discountedSpendLimitLabor#
				</isNotNull>
				<isNotNull prepend=", " property="discountedSpendLimitParts">
					discounted_spend_limit_parts = #discountedSpendLimitParts#
				</isNotNull>
				<isNotNull prepend=", " property="conditionalOfferPrice">
					condl_offer_accepted_price = #conditionalOfferPrice#
				</isNotNull>
				<isNotNull prepend=", " property="finalServiceFee">
					final_service_fee = #finalServiceFee#
				</isNotNull>
			WHERE so_id = #soId#
	</update>

	<update id="part.update" parameterClass="part">
		UPDATE so_parts SET return_carrier_id =
		#returnCarrier.carrierId# , return_track_no =
		#returnCarrier.trackingNumber# , core_return_carrier_id =
		#coreReturnCarrier.carrierId# , core_return_track_no =
		#coreReturnCarrier.trackingNumber# ,modified_date = NOW() WHERE
		so_id = #soId# AND part_id = #partId#
	</update>
	
	<update id="partshipinfo.update" parameterClass="part">
		UPDATE so_parts SET modified_date = NOW()
		<isNotNull prepend=", " property="shippingCarrier.carrierId">
			ship_carrier_id = #shippingCarrier.carrierId# 	
		</isNotNull>
		<isNotNull prepend=", " property="shippingCarrier.trackingNumber">
			ship_track_no = #shippingCarrier.trackingNumber#
		</isNotNull>
		<isNotNull prepend=", " property="shipDate">
			ship_date = #shipDate#
		</isNotNull>
		<isNotNull prepend=", " property="returnCarrier.carrierId">
			return_carrier_id = #returnCarrier.carrierId#
		</isNotNull>
		<isNotNull prepend=", " property="returnCarrier.trackingNumber">
			return_track_no = #returnCarrier.trackingNumber#
		</isNotNull>
		<isNotNull prepend=", " property="returnTrackDate">
			return_track_date = #returnTrackDate#
		</isNotNull>
		<isNotNull prepend=", " property="coreReturnCarrier.carrierId">
			core_return_carrier_id = #coreReturnCarrier.carrierId#
		</isNotNull>
		<isNotNull prepend=", " property="returnCarrier.trackingNumber">
			core_return_track_no = #coreReturnCarrier.trackingNumber#
		</isNotNull>
		WHERE
		so_id = #soId# AND part_id = #partId#
	</update>

	<update id="so.updateResponse" parameterClass="soResponseVO">
		UPDATE so_routed_providers
		<dynamic prepend="SET">
			<isNotNull prepend=", " property="responseId">
				provider_resp_id = #responseId#
			</isNotNull>
			<isNotNull prepend=", " property="reasonId">
				resp_reason_id = #reasonId#
			</isNotNull>
			<isNotNull prepend=", " property="reasonDesc">
				provider_resp_comment = #reasonDesc#
			</isNotNull>			
			<isNotNull prepend=", ">
				provider_resp_date = NOW()
			</isNotNull>
			<isNotNull prepend=", ">modified_date = NOW()</isNotNull>
			<isNotNull prepend=", " property="modifiedBy">
				modified_by = #modifiedBy#
			</isNotNull>
		</dynamic>
		WHERE so_id = #soId# and resource_id = #resourceId#
	</update>

	<update id="soRoutedProviders.email.update" parameterClass="so">
		UPDATE so_routed_providers set email_sent = true where
		so_id = #soId#
		<isNotNull property="routedResources" prepend="and resource_id in ">
			<iterate property="routedResources" open="(" close=")"  conjunction=",">
				#routedResources[].resourceId#
			</iterate>
		</isNotNull>
	</update>
	
    <update id="soRoutedProviders.routedDate.update" parameterClass="java.util.HashMap">
		UPDATE so_routed_providers set routed_date = #routedDate# where
		so_id = #soId#
	</update>
		
	<update id="so.reportProblemResolution" parameterClass="so">
		UPDATE so_hdr
		<dynamic prepend="SET">
		<isNotNull prepend=", " property="wfStateId">
		wf_state_id = #wfStateId#
		</isNotNull>
			<isNotNull prepend=", " property="lastChngStateId">
				last_status_id= #lastChngStateId#
		</isNotNull>
			,so_substatus_id = #wfSubStatusId# ,last_status_chg = NOW(),
			problem_date = #problemDate#
		</dynamic>
		WHERE so_id = #soId#
	</update>

	<select id="so.routedProviderCount"
		parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(*) as routedProviderCount from so_routed_providers
		where so_id =#soId#
	</select>

	<select id="so.rejectResponseCount"
		parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(*) as soRejectResponseCount from
		so_routed_providers where so_id = #soId# and provider_resp_id =
		3
	</select>

	<cacheModel type="LRU" id="so.providerEmailCache">
		<flushInterval hours="24" />
	</cacheModel>

	<select id="note.queryMax" parameterClass="note"
		resultClass="note">
		select max(note_id) as noteId from so_notes where so_id = #soId#
	</select>

	<select id="so.queryProviderEmail"
		parameterClass="java.lang.Integer" resultClass="string"
		cacheModel="so.providerEmailCache">
		select email from vendor_resource v, contact c where resource_id
		= #acceptedResourceId# and v.contact_id = c.contact_id
	</select>

<!-- 	code change for SLT-2112 -->
	<select id="so.getWfStates" parameterClass="java.util.HashMap"
		resultClass="wfStates">
		select wf_state_id as wfStateID, wf_entity as wfEntity, wf_state
		as wfState, wf_descr as wfDesc, sort_order as sortOrder,
		audit_link_id as auditLinkID from wf_states where wf_state_id =
		#wfStateId#
	</select>

	<select id="so.checkWfState" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		select wf_state_id from so_hdr where so_id=#soId#
	</select>

	<update id="so.updateSOState" parameterClass="so">
		UPDATE so_hdr
		<dynamic prepend="SET">
			<isNotNull prepend=", " property="wfStateId">
				wf_state_id = #wfStateId#
			</isNotNull>
			<isNotNull prepend=", " property="lastStatusChange">
				last_status_chg = #lastStatusChange#
			</isNotNull>
			<isNotNull prepend=", " property="lastChngStateId">
				last_status_id = #lastChngStateId#
			</isNotNull>
			<isNotNull prepend=", " property="cancelledDate">
				cancelled_date = #cancelledDate#
			</isNotNull>
			<isNotNull prepend=", " property="voidedDate">
				voided_date = #voidedDate#
				, so_group_id = null
				, so_orig_group_id = #groupId#
				, final_price_labor = 0.0
				, final_price_parts = 0.0
			</isNotNull>
			<isNotNull prepend=", " property="closedDate">
				closed_date = #closedDate#
			</isNotNull>
			<isNotNull prepend=", " property="routedDate">
				routed_date = #routedDate#
			</isNotNull>
			<isNotNull prepend=", " property="expiredDate">
				expired_date = #expiredDate#
			</isNotNull>
			<isNotNull prepend=", " property="activatedDate">
				activated_date = #activatedDate#
			</isNotNull>
			<isNotNull prepend=", " property="fundingTypeId">
				funding_type_id = #fundingTypeId#
			</isNotNull>
			<isNotNull prepend=", " property="initialRoutedDate">
				initial_routed_date = #initialRoutedDate#
			</isNotNull>
			,so_substatus_id = #wfSubStatusId#
		</dynamic>
		WHERE so_id=#soId#
	</update>

	<update id="so.transitionSOWorkflowState"
		parameterClass="soWFStateTransitionVO">
		UPDATE so_hdr SET wf_state_id = #futureWorkflowState#,
		last_status_chg = NOW() WHERE so_id=#serviceOrder.soId# AND
		wf_state_id IN
		<iterate property="workflowStateTransitionList" open="("
			close=")" conjunction=", ">
			#workflowStateTransitionList[]#
		</iterate>
	</update>

	<update id="soReschedule.update" parameterClass="so">
		UPDATE so_hdr
		SET
		service_date1 = #serviceDate1#,
		service_date2 = #serviceDate2#,
		service_time_start = #serviceTimeStart#,
		service_time_end = #serviceTimeEnd#,
		service_date_type_id = #serviceDateTypeId#,
		wf_state_id = #wfStateId#,
		so_substatus_id=#reasonCodeId#,
		service_locn_time_zone = (select time_zone from zip_geocode where zip=#serviceLocation.zip#),
		service_date_timezone_offset = #serviceDateTimezoneOffset#			
		<isNotNull prepend=", " property="lastStatusChange">
			last_status_chg = #lastStatusChange#
		</isNotNull>
		<isNotNull prepend=", " property="lastChngStateId">
			last_status_id = #lastChngStateId#
		</isNotNull>		
		WHERE so_id=#soId#
	</update>
	
	<insert id="soReschedule.insert" parameterClass="java.util.HashMap">
	    INSERT into so_logging (so_id, action_id, chg_comment)
	      VALUES
	         (#soId#,'36',#comments#)
	 </insert>
	    
	<update id="soPartsSupplier.update" parameterClass="so">
		UPDATE so_hdr
		<dynamic prepend="SET">
			<isNotNull prepend=", " property="partsSupplier">
				parts_supplied_by_id = #partsSupplier#
			</isNotNull>
		</dynamic>
		WHERE so_id=#soId#
	</update>
	
	<select id="mvo.query" parameterClass="mvo"
		resultClass="java.lang.Integer">
		SELECT fee_value FROM ledger_fee lf, ledger_fee_details lfd
		WHERE lf.ledger_entry_rule_id=#ledgerEntryRuleId# And
		lf.entity_type_id=#userTypeID# And lf.fee_type_id=
		lfd.fee_value_type_id And lf.ledger_fee_id=lfd.ledger_fee_id
	</select>

	<select id="sorole.queryBuyer" parameterClass="java.lang.Integer"
		resultClass="sorole">
		SELECT so_id as soId, wf_state as soStatus, city as soCity,
		state_cd as soState, zip as soZip, sow_title as soTitle,
		so_hdr.created_date as soServiceDate FROM wf_states, so_hdr
		WHERE wf_states.wf_state_id = so_hdr.wf_state_id AND
		so_hdr.buyer_id=#buyerId# ORDER BY so_id asc
	</select>

	<select id="sorole.queryProvider" parameterClass="java.lang.Integer"
		resultClass="sorole">
		SELECT so_id as soId, wf_state as soStatus, city as soCity,
		state_cd as soState, zip as soZip, sow_title as soTitle,
		so_hdr.created_date as soServiceDate FROM wf_states, so_hdr
		WHERE wf_states.wf_state_id = so_hdr.wf_state_id AND
		so_hdr.accepted_resource_id=#providerId# ORDER BY so_id asc
	</select>

	<resultMap id="get-routed-result" class="java.util.HashMap">
		<result property="so_id" column="SO_ID" />
		<result property="resource_id" column="RESOURCE_ID" />
	</resultMap>
	<select id="so.getRoutedResources" parameterClass="java.lang.String"
		resultMap="get-routed-result">
		select so_id, resource_id from so_routed_providers where
		so_id=#serviceOrderId#
	</select>
	<update id="so.updateAccepted" parameterClass="so">
		UPDATE so_hdr s
			, so_routed_providers srp
		SET s.provider_so_terms_cond_id = #soTermsCondId#
			, provider_so_terms_cond_date = #providerTermsCondDate#
			, s.accepted_resource_id = #acceptedResource.resourceId#
			, provider_so_terms_cond_ind = #providerSOTermsCondInd#
			, s.accepted_date = #acceptedDate#
			, s.accepted_vendor_id = #acceptedVendorId#
			, s.wf_state_id = #wfStateId#
			, last_status_chg = #lastStatusChange#
			, last_status_id = #lastChngStateId#
			, srp.provider_resp_id = 1
		WHERE s.so_id = #soId#
			and s.so_id = srp.so_id
			and srp.resource_id = #acceptedResource.resourceId#
			and wf_state_id != #wfStateId#
	</update>
	
<update id="so.updateSelctedSeviceDateTimeSlot" parameterClass="serviceDatetimeSlot">
	UPDATE so_hdr so INNER JOIN so_service_datetime_slot sdt 
	ON so.so_id = sdt.so_id 
	SET so.service_date1 = sdt.service_start_date 
	,so.service_time_start = sdt.service_start_time
	,so.service_date2 = sdt.service_end_date 
	,so.service_time_end = sdt.service_end_time 
    where so.so_id=#soId# and  sdt.so_id=#soId# 
	and sdt.preference_ind=#preferenceInd#;
</update>

<update id="so.updateSeviceDateTimeSlot" parameterClass="serviceDatetimeSlot">
	UPDATE so_service_datetime_slot set slot_seleted_ind=1 where preference_ind=#preferenceInd# and so_id=#soId#
</update>
	
	

	<!-- SO Object model queries start -->
	<!-- Start of SO Object Model queries  SELECT-->
	<select id="adminContact.query" resultClass="java.lang.String">
		SELECT CONCAT(c.first_name ,' ',c.last_name) as AdminName FROM contact c,
		user_profile up where up.contact_id = c.contact_id and
		up.user_name = #userName#
	</select>
	
	<select id="providerPostedSOCount.query" resultClass="java.lang.Integer">
		SELECT count(*)
		FROM so_hdr so
		JOIN so_routed_providers srp ON so.so_id = srp.so_id
		AND srp.vendor_id = #companyId#
		AND (srp.provider_resp_id not in (3,5,7) OR srp.provider_resp_id is NULL)
		AND so.wf_state_id = 110
	</select>
	
	<select id="resourceContact.query" resultClass="contact">
		SELECT c.contact_id as contactId, c.last_name as lastName,
		c.first_name as firstName, c.title as title, c.phone_no as
		phoneNo, c.fax_no as faxNo, c.mobile_no as mobileNo, c.email as
		email, c.created_date as createdDate FROM contact c,
		vendor_resource v where v.contact_id = c.contact_id and
		v.resource_id = #resourceId#
	</select>
	
	
	<select id="soPendingCancelHistory.query" resultClass="pendingCancelHistory" parameterClass="java.lang.String">
		SELECT price AS price,modified_by AS userName,comments AS comments,withdraw_ind AS withdrawFlag,
		user_id AS userId,modified_date AS modifiedDate,admin_resource_id AS adminResourceId,admin_user_name AS adminUserName,role_id AS roleId
		FROM so_cancel_request_history WHERE so_id=#soId#
	</select>
	
	<select id="resourceLocation.query" resultClass="solocation" cacheModel="contactCache" >
		SELECT	l.locn_id as locationId,
				l.street_1 as street1,
				l.street_2 as street2,
				l.city as city,
				l.state_cd as state,
				l.apt_no as aptNo,
				l.zip as zip,
				l.zip4 as zip4,
				l.country as country,
				l.locn_type_id as locnTypeId,
				l.gis_latitude as latitude,
				l.gis_longitude as longitude,
				l.created_date as createdDate,
				l.modified_date as modifiedDate,
				l.modified_by as modifiedBy
		FROM    location l, vendor_resource v 
		WHERE   v.locn_id = l.locn_id 
		AND		v.resource_id = #resourceId#
	</select>
	<select id="altBuyerContactInsert.query"
		parameterClass="java.lang.Integer" resultClass="contact" cacheModel="contactCache">
		SELECT c.contact_id as contactId, c.last_name as lastName,
		c.first_name as firstName, c.title as title, c.phone_no as
		phoneNo, c.fax_no as faxNo, c.mobile_no as mobileNo, c.email as
		email, c.created_date as createdDate FROM contact c where
		c.contact_id = #altBuyerContactId#
	</select>
	
	<resultMap class="routedProvider" id="sogroup.routed.resultsmap">
		<result property="resourceId" column="resource_id" />
		<result property="soId" column="so_id" />
		<result property="vendorId" column="vendor_id" />
		<result property="providerRespId" column="provider_resp_id" />
		<result property="providerRespReasonId" column="resp_reason_id" /> 
		<result property="providerRespDate" column="provider_resp_date" />
		<result property="providerRespComment" column="provider_resp_comment" />
		<result property="conditionalStartTime" column="service_time_start" />
		<result property="conditionalEndTime" column="service_time_end" />
		<result property="conditionalChangeDate1" column="service_date1" />
		<result property="conditionalChangeDate2" column="service_date2" />
	</resultMap>

	<resultMap class="routedProvider" id="routed.resultsmap">
		<result property="resourceId" column="resource_id" />
		<result property="soId" column="so_id" />
		<result property="vendorId" column="vendor_id" />
		<result property="providerRespId" column="provider_resp_id" />
		<result property="providerRespReasonId" column="resp_reason_id" /> 
		<result property="providerRespDate" column="provider_resp_date" />
		<result property="providerRespComment" column="provider_resp_comment" />
		<result property="conditionalStartTime" column="service_time_start" />
		<result property="conditionalEndTime" column="service_time_end" />
		<result property="conditionalChangeDate1" column="service_date1" />
		<result property="conditionalChangeDate2" column="service_date2" />
		<result property="conditionalSpendLimit" column="incr_spend_limit" />
		<result property="conditionalExpirationDate" column="offer_expiration_date" />
		<result property="createdDate" column="created_date" />
		<result property="priceModel" column="price_model" />
		<result property="totalLaborBid" column="total_labor" />
		<result property="partsAndMaterialsBid" column="parts_materials" />
		<result property="totalHoursBid" column="total_hours" />
		<result property="routedDate" column="routed_date" />
		<result property="perfScore" column="routed_time_perf_score" />
		<result property="firmPerfScore" column="routed_time_firm_perf_score" />
		<result property="firmName" column="firmName" />	
		<result property="providerContact.contactId" column="contact_contact_id" />
		<result property="providerContact.lastName" column="contact_last_name" />
		<result property="providerContact.firstName" column="contact_first_name" />
		<result property="providerContact.title" column="contact_title" />
		<result property="providerContact.phoneNo" column="contact_phone_no" />
		<result property="providerContact.faxNo" column="contact_fax_no" />
		<result property="providerContact.cellNo" column="contact_mobile_no" />
		<result property="providerContact.email" column="contact_email" />
		<result property="providerContact.createdDate" column="contact_created_date" />

		<result property="providerLocation.locationId" column="location_locn_id" />
		<result property="providerLocation.street1" column="location_street_1" />
		<result property="providerLocation.street2" column="location_street_2" />
		<result property="providerLocation.state" column="location_state_cd" />
		<result property="providerLocation.aptNo" column="location_apt_no" />
		<result property="providerLocation.zip" column="location_zip" />
		<result property="providerLocation.zip4" column="location_zip4" />
		<result property="providerLocation.country" column="location_country" />
		<result property="providerLocation.locnTypeId" column="location_locn_type_id" />
		<result property="providerLocation.latitude" column="location_gis_latitude" />
		<result property="providerLocation.longitude" column="location_gis_longitude" />
		<result property="providerLocation.createdDate" column="location_created_date" />
		<result property="providerLocation.modifiedDate" column="location_modified_date" />
		<result property="providerLocation.modifiedBy" column="location_modified_by" />
		<result property="providerRespDescription" column="provider_resp_descr" />
		<result property="emailSent" column="email_sent" />
		<result property="spnId" column="spn_id" />
		<result property="tierId" column="tier_id" />
		<result property="spnName" column="spn_name" />
		<result property="performanceId" column="perf_level" />
		<result property="performanceDesc" column="perf_descr" />
	</resultMap>
	
	<resultMap class="tierRoutedProvider" id="tierRouted.resultsmap">
		<result property="resourceId" column="resource_id" />
		<result property="soId" column="so_id" />
		<result property="vendorId" column="vendor_id" />
		<result property="createdDate" column="created_date" />
		<result property="spnId" column="spn_id" />
		<result property="perfScore" column="routed_time_perf_score" />
		<result property="firmPerfScore" column="routed_time_firm_perf_score" />
		<result property="firstName" column="fName" />
		<result property="lastName" column="lName" />
		<result property="firmName" column="firmName" />
		<result property="performanceLevelId" column="perf_level" />
		<result property="performanceLevelDesc" column="descr" />
		<result property="spnName" column="spn_name" />
	</resultMap>

	<resultMap class="resource" id="accepted.resultsmap">
		<result property="resourceId" column="resource_id" />
		<result property="vendorId" column="vendor_id" />

		<result property="resourceContact.contactId" column="contact_contact_id" />
		<result property="resourceContact.lastName" column="contact_last_name" />
		<result property="resourceContact.firstName" column="contact_first_name" />
		<result property="resourceContact.title" column="contact_title" />
		<result property="resourceContact.phoneNo" column="contact_phone_no" />
		<result property="resourceContact.faxNo" column="contact_fax_no" />
		<result property="resourceContact.cellNo" column="contact_mobile_no" />
		<result property="resourceContact.email" column="contact_email" />
		<result property="resourceContact.createdDate" column="contact_created_date" />

		<result property="resourceLocation.locationId" column="location_locn_id" />
		<result property="resourceLocation.street1" column="location_street_1" />
		<result property="resourceLocation.street2" column="location_street_2" />
		<result property="resourceLocation.state" column="location_state_cd" />
		<result property="resourceLocation.aptNo" column="location_apt_no" />
		<result property="resourceLocation.zip" column="location_zip" />
		<result property="resourceLocation.zip4" column="location_zip4" />
		<result property="resourceLocation.country" column="location_country" />
		<result property="resourceLocation.locnTypeId" column="location_locn_type_id" />
		<result property="resourceLocation.latitude" column="location_gis_latitude" />
		<result property="resourceLocation.longitude" column="location_gis_longitude" />
		<result property="resourceLocation.createdDate" column="location_created_date" />
		<result property="resourceLocation.modifiedDate" column="location_modified_date" />
		<result property="resourceLocation.modifiedBy" column="location_modified_by" />
	</resultMap>
	
	
	<resultMap class="solocation" id="servicelocation.resultsmap">
		<result property="aptNo" column="apt_no" />
		<result property="street1" column="street_1" />
		<result property="street2" column="street_2" />
		<result property="zip" column="zip" />
		<result property="zip4" column="zip4" />
		<result property="state" column="state_cd" />
		<result property="city" column="city" />
		<result property="locnNotes" column="locn_notes" />
		<result property="locnClassId" column="so_locn_class_id" />
		<result property="locnClassDesc" column="locnClassDescr" />
		<result property="createdDate" column="created_date" />
		<result property="locationId" column="so_locn_id" />
		<result property="locnName" column="locn_name" />
	</resultMap>

	<resultMap class="solocation"
		id="buyersupportlocation.resultsmap">
		<result property="street1" column="street_1" />
		<result property="street2" column="street_2" />
		<result property="zip" column="zip" />
		<result property="state" column="state_cd" />
		<result property="city" column="city" />
		<result property="locnNotes" column="locn_notes" />
		<result property="locnClassId" column="so_locn_class_id" />
		<result property="locnClassDesc" column="locnClassDescr" />
		<result property="createdDate" column="created_date" />
		<result property="locationId" column="so_locn_id" />
	</resultMap>

	<resultMap class="solocation"
		id="buyerassociatelocation.resultsmap">
		<result property="street1" column="street_1" />
		<result property="street2" column="street_2" />
		<result property="zip" column="zip" />
		<result property="state" column="state_cd" />
		<result property="city" column="city" />
		<result property="locnNotes" column="locn_notes" />
		<result property="locnClassId" column="so_locn_class_id" />
		<result property="locnClassDesc" column="locnClassDescr" />
		<result property="createdDate" column="created_date" />
		<result property="locationId" column="so_locn_id" />
	</resultMap>

	<resultMap class="solocation" id="pickuplocation.resultsmap">
		<result property="street1" column="street_1" />
		<result property="street2" column="street_2" />
		<result property="aptNo" column="apt_no" />
		<result property="zip" column="zip" />
		<result property="zip4" column="zip4" />
		<result property="state" column="state_cd" />
		<result property="city" column="city" />
		<result property="locnNotes" column="locn_notes" />
		<result property="locnClassId" column="so_locn_class_id" />
		<result property="locnClassDesc" column="locnClassDescr" />
		<result property="createdDate" column="created_date" />
		<result property="locationId" column="so_locn_id" />
	</resultMap>

	<resultMap class="solocation"
		id="vendorresourcelocation.resultsmap">
		<result property="street1" column="street_1" />
		<result property="street2" column="street_2" />
		<result property="zip" column="zip" />
		<result property="state" column="state_cd" />
		<result property="city" column="city" />
		<result property="locnNotes" column="locn_notes" />
		<result property="locnClassId" column="so_locn_class_id" />
		<result property="locnClassDesc" column="locnClassDescr" />
		<result property="createdDate" column="created_date" />
		<result property="locationId" column="so_locn_id" />
	</resultMap>

	<resultMap class="solocation" id="solocation.resultsmap">
		<result property="aptNo" column="apt_no" />
		<result property="street1" column="street_1" />
		<result property="street2" column="street_2" />
		<result property="zip" column="zip" />
		<result property="zip4" column="zip4" />
		<result property="state" column="state_cd" />
		<result property="city" column="city" />
		<result property="locnNotes" column="locn_notes" />
		<result property="locnClassId" column="so_locn_class_id" />
		<result property="locnClassDesc" column="locnClassDescr" />
		<result property="createdDate" column="created_date" />
		<result property="locationId" column="so_locn_id" />
		<result property="locnName" column="locn_name" />
		<result property="contactLocTypeId" column="so_contact_locn_type_id" />
	</resultMap>

	<resultMap class="contact" id="socontactcell.resultsmap">
		<result property="lastName" column="last_name" />
		<result property="firstName" column="first_name" />
		<result property="businessName" column="business_name" />
		<result property="email" column="email" />
		<result property="phoneNo" column="phone_no" />
		<result property="phoneNoExt" column="phone_no_ext" />
		<result property="phoneClassId" column="so_phone_class_id" />
		<result property="createdDate" column="created_date" />
		<result property="contactId" column="so_contact_id" />
		<result property="phoneCreatedDate" column="phone_created_date" />
		<result property="phoneTypeId" column="phone_type_id" />
		<result property="cellNo" column="cell_no" />
	</resultMap>

	<resultMap class="contact" id="socontact.resultsmap">
		<result property="lastName" column="last_name" />
		<result property="firstName" column="first_name" />
		<result property="businessName" column="business_name" />
		<result property="email" column="email" />
		<result property="phoneNo" column="phone_no" />
		<result property="phoneNoExt" column="phone_no_ext" />
		<result property="phoneClassId" column="so_phone_class_id" />
		<result property="createdDate" column="created_date" />
		<result property="contactId" column="so_contact_id" />
		<result property="phoneCreatedDate" column="phone_created_date" />
		<result property="phoneTypeId" column="phone_type_id" />
	</resultMap>

	<resultMap class="contact" id="socontactext.resultsmap">
		<result property="lastName" column="last_name" />
		<result property="firstName" column="first_name" />
		<result property="businessName" column="business_name" />
		<result property="email" column="email" />
		<result property="phoneNo" column="phone_no" />
		<result property="phoneNoExt" column="phone_no_ext" />
		<result property="phoneClassId" column="so_phone_class_id" />
		<result property="createdDate" column="created_date" />
		<result property="contactId" column="so_contact_id" />
		<result property="phoneCreatedDate" column="phone_created_date" />
		<result property="phoneTypeId" column="phone_type_id" />
		<result property="contactLocTypeId" column="so_contact_locn_type_id" />
		<result property="contactTypeId" column="so_contact_type_id" />
	</resultMap>

	<resultMap class="buyerAltInfo" id="buyercontactalt.resultsmap">
		<result property="firstName" column="first_name" />
		<result property="lastName" column="last_name" />
		<result property="contactId" column="so_contact_id" />
		<result property="createdDate" column="created_date" />
		<result property="entityId" column="entity_id" />
	</resultMap>

	<!-- <resultMap class="contact" id="endusercontact.resultsmap">
		<result property="lastName" column="last_name" />
		<result property="firstName" column="first_name" />
		<result property="businessName" column="business_name" />
		<result property="email" column="email" />
		<result property="phoneNo" column="phone_no" />
		<result property="phoneNoExt" column="phone_no_ext" />
		<result property="phoneClassId" column="so_phone_class_id" />
		</resultMap> 
		
		<resultMap class="contact" id="buyersupportcontact.resultsmap">
		<result property="lastName" column="last_name" />
		<result property="firstName" column="first_name" />
		<result property="businessName" column="business_name" />
		<result property="email" column="email" />
		<result property="phoneNo" column="phone_no" />
		<result property="phoneNoExt" column="phone_no_ext" />
		</resultMap>
		
		<resultMap class="contact" id="buyerassociatecontact.resultsmap">
		<result property="lastName" column="last_name" />
		<result property="firstName" column="first_name" />
		<result property="businessName" column="business_name" />
		<result property="email" column="email" />
		<result property="phoneNo" column="phone_no" />
		<result property="phoneNoExt" column="phone_no_ext" />
		</resultMap>
		
		<resultMap class="contact" id="vendorresourcecontact.resultsmap">
		<result property="lastName" column="last_name" />
		<result property="firstName" column="first_name" />
		<result property="businessName" column="business_name" />
		<result property="email" column="email" />
		<result property="phoneNo" column="phone_no" />
		<result property="phoneNoExt" column="phone_no_ext" />
		</resultMap>
		
		<resultMap class="contact" id="pickupcontact.resultsmap">
		<result property="lastName" column="last_name" />
		<result property="firstName" column="first_name" />
		<result property="businessName" column="business_name" />
		<result property="email" column="email" />
		<result property="phoneNo" column="phone_no" />
		<result property="phoneNoExt" column="phone_no_ext" />
		<result property="phoneClassId" column="so_phone_class_id" />
		</resultMap>-->

	<resultMap class="sobuyer" id="buyer.resultsmap">
		<result property="buyerId" column="buyer_id" />
		<result property="roleId" column="role_id" />
		<result property="userName" column="user_name" />
		<result property="businessName" column="business_name" />
		<result property="fundingTypeId" column="funding_type_id" />
		<result property="postingFee" column="posting_fee" />
		<result property="cancellationFee" column="cancellation_fee" />
		<result property="buyerPrimaryLocation" column="pri_locn_id"
			select="location.querry" />
		<result property="buyerContact" column="contact_id"
			select="contact.querry" />
		<result property="minTimeWindow" column="min_time_window" />
		<result property="maxTimeWindow" column="max_time_window" />	
	</resultMap>

	<resultMap class="sobuyerresource" id="buyerresource.resultsmap">
		<result property="resourceId" column="resource_id" />
		<result property="buyerId" column="buyer_id" />
		<result property="userName" column="user_name" />
		<result property="contactId" column="contact_id" />
		<result property="locnId" column="locn_id" />
		<result property="companyRoleId" column="company_role_id" />
		<result property="buyerResPrimaryLocation" column="locn_id"
			select="buyerResource.location.query" />
		<result property="buyerResContact" column="contact_id"
			select="buyerResource.contact.query" />
	</resultMap>
	
	<resultMap class="task" id="tasks.resultsmap">
		<result property="taskId" column="so_task_id" />
		<result property="createDate" column="created_date" />
		<result property="modifiedDate" column="modified_date" />
		<result property="modifiedBy" column="modified_by" />
		<result property="skillNodeId" column="skill_node_id" />
		<result property="serviceTypeId"
			column="service_type_template_id" />
		<result property="taskName" column="task_name" />
		<result property="price" column="price" />
		<result property="autoInjectedInd" column="auto_injected_ind" />
		<result property="primaryTask" column="primary_task" />
		<result property="taskComments" column="task_comments" />

		<result property="serviceType" column="service_type_desc" />
		<result property="subCategoryName" column="skill_subcategory" />
		<result property="categoryName" column="skill_category" />

		<result property="level" column="level" />
		<result property="parentId" column="parent_node" />
		
		<result property="soId" column="so_id" />
		<result property="sequenceNumber" column="sequence_number" />
		<result property="sku" column="sku" />
		<result property="finalPrice" column="final_price" />
		<result property="taskType" column="task_type" />
		<result property="permitTypeDesc" column="permit_type_id" select="permitTypeDesc.query" />
		<result property="permitTypeId" column="permit_type_id"/>
		<result property="sellingPrice" column="selling_price" />
		<result property="retailPrice" column="retail_price" />
		<result property="taskStatus" column="task_status" />
		<result property="taskSeqNum" column="task_seq_num" />
		<result property="priceHistoryList" column="{taskId = so_task_id}" select="priceHistory.query" />
	</resultMap>
	
	<resultMap class="taskPriceVO" id="priceHistory.resultsmap">
	
		<result property="price" column="price" />
		<result property="createdDate" column="created_date" />
		<result property="modifiedDate" column="modified_date" />
		<result property="modifiedBy" column="modified_by" />
		<result property="modifiedByName" column="modified_by_name" />
		<result property="sku" column="sku" />
		<result property="taskSeqNum" column="task_seq_num" />
		
	</resultMap>
	
	<resultMap class="customRef" id="customReferences.resultsmap">
		<result property="refTypeId" column="buyer_ref_type_id" />
		<result property="refValue" column="buyer_ref_value" />
		<result property="refType" column="ref_type" />
		<result property="soStateId" column="wf_state_id" />
		<result property="pdfRefInd" column="pdf_ref_ind" />
		<result property="privateInd" column="private_ind" />
		<result property="editable" column="editable"/>
		<result property="requiredInd" column="required"/>
	</resultMap>

	<resultMap class="part" id="parts.resultsmap">
		<result property="pickupLocation" column="soLocnId=so_locn_id,soId=so_id"
			select="pickuplocation.query" />
		<result property="pickupContact" column="so_contact_id"
			select="pickupcontact.query" />
		<result property="altPickupContact" column="so_contact_id"
			select="altPickupcontact.query" />
		<result property="shippingCarrier" column="part_id"
			select="shippingcarrier.query" />
		<result property="returnCarrier" column="part_id"
			select="returncarrier.query" />
		<result property="coreReturnCarrier" column="part_id"
			select="corereturncarrier.query" />

		<result property="partId" column="part_id" />
		<result property="partDs" column="part_descr" />
		<result property="referencePartId" column="reference_part_id" />
		<result property="shipDate" column="ship_date" />
				
		<result property="shipCarrierOther" column="ship_carrier_other" />
		<result property="returnCarrierOther" column="return_carrier_other" />
		<result property="coreReturnCarrierOther" column="core_return_carrier_other" />

		<result property="providerBringPartInd"
			column="provider_bring_part_ind" />
		<result property="createdDate" column="created_date" />
		<result property="modifiedDate" column="modified_date" />
		<result property="manufacturer" column="manufacturer" />
		<result property="modelNumber" column="model_no" />
		<result property="measurementStandard"
			column="measurement_standard" />
		<result property="length" column="length" />
		<result property="width" column="width" />
		<result property="height" column="height" />
		<result property="weight" column="weight" />
		<result property="quantity" column="quantity" />
		<result property="serialNumber" column="serial_number" />
		<result property="orderNumber" column="order_number" />
		<result property="purchaseOrderNumber" column="purchase_order_number" />
		<result property="partStatusId" column="part_status_id" />
		<result property="returnTrackDate" column="return_track_date" />
		<result property="additionalPartInfo" column="additional_part_info" />
		<result property="productLine" column="product_line" />
		<result property="vendorPartNumber" column="vendor_part_number" />
		<result property="manufacturerPartNumber" column="manufacturer_part_number" />
		<result property="altPartRef1" column="alt_part_ref1" />
		<result property="altPartRef2" column="alt_part_ref2" />
	</resultMap>

	<resultMap class="note" id="notes.resultmap">
		<result property="soId" column="so_id" />
		<result property="noteId" column="note_id" />
		<result property="subject" column="note_subject" />
		<result property="roleId" column="role_id" />
		<result property="entityId" column="entity_id" />
		<result property="note" column="note" />
		<result property="createdDate" column="created_date" />
		<result property="createdByName" column="created_by_name" />
		<result property="noteTypeId" column="note_type_id" />
		<result property="privateId" column="private_ind" />
	</resultMap>

	<resultMap class="invoiceParts" id="invoiceParts.resultmap">
	    <result property="invoicePartId" column="so_provider_invoice_parts_id"/>
		<result property="soId" column="so_id" />
		<result property="source" column="source" />
		<result property="partCoverage" column="part_coverage" />
		<result property="partNo" column="part_no" />
		<result property="divisionNumber" column="division_number" />
		<result property="sourceNumber" column="source_number" />
		<result property="partsUrl" column="part_url" />
		<result property="description" column="description" />
        <result property="invoiceNo" column="invoice_no" />
		<result property="unitCost" column="unit_cost" />
		<result property="retailPrice" column="retail_price" />
		<result property="qty" column="qty" />
		<result property="estProviderPartsPayment" column="est_provider_parts_payment" />
		<result property="finalPrice" column="final_price" />
		<result property="nonSearsSource" column="source_non_sears"/>
		<result property="retailCostToInventory" column="retail_cost_to_inventory"/>
		<result property="retailReimbursement" column="retail_reimbursement"/>
        <result property="retailPriceSLGrossUp" column="retail_price_sl_gross_up"/>
		<result property="retailSLGrossUp" column="retail_sl_gross_up"/>
		<result property="category" column="category"/>
		<result property="partStatus" column="part_status"/>
		<result property="partSource" column="part_source"/>
		<result property="claimStatus" column="claim_status"/>
		<result property="invoiceDocuments" column="so_provider_invoice_parts_id" select="getInvoiceDocumentId.query"/>
		<result property="providerMargin" column="provider_margin"/>
		<result property="commercialPrice" column="commercial_price"/>
	</resultMap>
	
	<resultMap class="soPartLaborPriceReason" id="soPartLaborPriceReason.resultmap">
		<result property="soId" column="so_id" />
		<result property="reasonId" column="reason_id" />
		<result property="reasonCodeId" column="reason_code_id" />
		<result property="reasonComments" column="reason_comments" />
		<result property="priceType" column="price_type" />
		<result property="modifiedBy" column="modified_by" />
	</resultMap>
	<!-- Fetch  Skill Sub Category Name-->
	<select id="skillsubcategoryname.query"
		resultClass="java.lang.String">
		select CASE skt.level WHEN 3 THEN skt.node_name END as
		SubCategory, node_id from skill_tree skt where skt.node_id =
		#skill_node_id#
	</select>

	<!-- Fetch  Skill Category Name-->
	<select id="skillcategoryname.query"
		resultClass="java.lang.String">
		select CASE skt.level WHEN 2 THEN skt.node_name WHEN 3 THEN
		(SELECT node_name FROM skill_tree WHERE node_id =
		skt.parent_node) END as Category, node_id from skill_tree skt
		where skt.node_id = #skill_node_id#
	</select>

	<select id="serviceTypes.query" resultClass="java.lang.String">
		select descr as serviceType from lu_service_type_template lst
		where lst.service_type_template_id= #service_type_template_id#
	</select>
	<select id="permitTypeDesc.query" resultClass="java.lang.String">
		select type as permitTypeDesc from lu_permit_type 
		where id= #value#
	</select>
	<select id="shippingcarrier.query" resultClass="carrier">
		select a.ship_track_no as trackingNumber, b.descr as
		carrierName, a.ship_carrier_id as carrierId from so_parts a,
		lu_shipping_carrier b where a.ship_carrier_id =
		b.shipping_carrier_id and a.part_id = #partId#
	</select>

	<select id="returncarrier.query" resultClass="carrier">
		select a.return_track_no as trackingNumber, b.descr as
		carrierName, a.return_carrier_id as carrierId from so_parts a,
		lu_shipping_carrier b where a.return_carrier_id =
		b.shipping_carrier_id and a.part_id = #partId#
	</select>
	
	<select id="corereturncarrier.query" resultClass="carrier">
		select a.core_return_track_no as trackingNumber, b.descr as
		carrierName, a.core_return_carrier_id as carrierId from so_parts a,
		lu_shipping_carrier b where a.core_return_carrier_id =
		b.shipping_carrier_id and a.part_id = #partId#
	</select>
	
	<select id="sobuyer.query" resultMap="buyer.resultsmap">
		select b.* , up.role_id from user_profile up , buyer  b where b.buyer_id=#value# and b.user_name = up.user_name
	</select>
	
	<select id="sobuyerresource.query" resultMap="buyerresource.resultsmap">
		select * from buyer_resource where resource_id=#value#
	</select>

	<select id="buyerTransactionLimit.query" parameterClass="java.util.Map" resultClass="java.lang.Double">
		select max_spend_limit_per_so from buyer_resource where resource_id=#resourceId# and buyer_id=#buyerId# 
	</select>
	
	<select id="soaltbuyerresource.query" resultMap="buyerresource.resultsmap">
		select * from buyer_resource where contact_id=#value#
	</select>
	
	<select id="pickuplocation.query"
		resultMap="pickuplocation.resultsmap">
		select sl.*, slc.descr as locnClassDescr from so_location sl
		join so_contact_locn scl on sl.so_id = scl.so_id and
		sl.so_locn_id = scl.so_locn_id left outer join
		lu_so_location_class slc on sl.so_locn_class_id =
		slc.so_locn_class_id where scl.so_contact_locn_type_id = 40 and
		sl.so_locn_id=#soLocnId# and sl.so_id =#soId#
	</select>

	<select id="buyersupportlocation.query"
		resultMap="buyersupportlocation.resultsmap">
		select sl.*, slc.descr as locnClassDescr from so_location sl
		join so_contact_locn scl on sl.so_id = scl.so_id and
		sl.so_locn_id = scl.so_locn_id left outer join
		lu_so_location_class slc on sl.so_locn_class_id =
		slc.so_locn_class_id where scl.so_contact_locn_type_id = 30 and
		sl.so_id=#value#
	</select>

	<select id="buyerassociatelocation.query"
		resultMap="buyerassociatelocation.resultsmap">
		select sl.*, slc.descr as locnClassDescr from so_location sl
		join so_contact_locn scl on sl.so_id = scl.so_id and
		sl.so_locn_id = scl.so_locn_id left outer join
		lu_so_location_class slc on sl.so_locn_class_id =
		slc.so_locn_class_id where scl.so_contact_locn_type_id = 60 and
		sl.so_id=#value#
	</select>

	<select id="servicelocation.query"
		resultMap="servicelocation.resultsmap">
		select sl.*, slc.descr as locnClassDescr from so_location sl
		join so_contact_locn scl on sl.so_id = scl.so_id and
		sl.so_locn_id = scl.so_locn_id left outer join
		lu_so_location_class slc on sl.so_locn_class_id =
		slc.so_locn_class_id where scl.so_contact_locn_type_id = 10 and
		sl.so_id=#value#
	</select>

	<select id="vendorresourcelocation.query"
		resultMap="vendorresourcelocation.resultsmap">
		select sl.*, slc.descr as locnClassDescr from so_location sl
		join so_contact_locn scl on sl.so_id = scl.so_id and
		sl.so_locn_id = scl.so_locn_id left outer join
		lu_so_location_class slc on sl.so_locn_class_id =
		slc.so_locn_class_id where scl.so_contact_locn_type_id = 50 and
		sl.so_id=#value# order by sl.created_date desc limit 1
	</select>

	<!-- master query to fetch all location info for a service order -->
	<select id="locationinfo.query" resultMap="solocation.resultsmap">
		SELECT sl.*, scl.so_contact_locn_type_id, slc.descr AS locnClassDescr
		FROM so_location sl
			JOIN so_contact_locn scl ON sl.so_id = scl.so_id AND sl.so_locn_id = scl.so_locn_id
			LEFT OUTER JOIN lu_so_location_class slc ON sl.so_locn_class_id = slc.so_locn_class_id
		WHERE sl.so_id = #value#
		ORDER BY sl.created_date
	</select>
	<select id="sealedBidInd.query" resultClass = "java.lang.Boolean">
	select sealed_bid_ind from so_workflow_controls where so_id = #soId#
	</select>

	<!-- master query to fetch all contact info for a service order -->
	<select id="contactinfo.query" resultMap="socontactext.resultsmap">
		SELECT 
			sc.*,
			scp.phone_no,
			scp.phone_no_ext,
			scp.so_phone_class_id,
			scp.created_date AS phone_created_date,
			scp.phone_type_id,
			scl.so_contact_locn_type_id
		FROM so_contact sc
			JOIN so_contact_locn scl ON sc.so_id = scl.so_id AND sc.so_contact_id = scl.so_contact_id
			LEFT JOIN so_contact_phones scp ON sc.so_id = scp.so_id AND sc.so_contact_id = scp.so_contact_id
		WHERE sc.so_id = #value#
		ORDER BY scp.phone_type_id
	</select>

	<select id="endusercontact.query"
		resultMap="socontact.resultsmap">
		select sc.*, scp.phone_no,
		scp.phone_no_ext,scp.so_phone_class_id, scp.created_date as
		phone_created_date ,scp.phone_type_id from so_contact sc join so_contact_locn scl
		on sc.so_id = scl.so_id and sc.so_contact_id = scl.so_contact_id
		left outer join so_contact_phones scp on sc.so_contact_id =
		scp.so_contact_id and sc.so_id = scp.so_id where
		scl.so_contact_locn_type_id = 20 and scp.phone_type_id=1 and
		sc.so_id=#value#
	</select>

	<select id="altendusercontact.query"
		resultMap="socontact.resultsmap">
		select sc.*, scp.phone_no,
		scp.phone_no_ext,scp.so_phone_class_id, scp.created_date as
		phone_created_date,scp.phone_type_id from so_contact sc join so_contact_locn scl
		on sc.so_id = scl.so_id and sc.so_contact_id = scl.so_contact_id
		left outer join so_contact_phones scp on sc.so_contact_id =
		scp.so_contact_id and sc.so_id = scp.so_id where
		scl.so_contact_locn_type_id = 20 and scp.phone_type_id=2 and
		sc.so_id=#value#
	</select>

	<select id="altenduserfax.query" resultMap="socontact.resultsmap">
		select sc.*, scp.phone_no, scp.phone_no_ext,
		scp.so_phone_class_id, scp.created_date as phone_created_date ,scp.phone_type_id
		from so_contact sc join so_contact_locn scl on sc.so_id =
		scl.so_id and sc.so_contact_id = scl.so_contact_id left outer
		join so_contact_phones scp on sc.so_contact_id =
		scp.so_contact_id and sc.so_id = scp.so_id where
		scl.so_contact_locn_type_id = 20 and scp.phone_type_id=3 and
		sc.so_id=#value#
	</select>

	<select id="pickupcontact.query" resultMap="socontact.resultsmap">
		select sc.*, scp.phone_no, scp.phone_no_ext,
		scp.so_phone_class_id, scp.created_date as phone_created_date ,scp.phone_type_id
		from so_contact sc join so_contact_locn scl on sc.so_id =
		scl.so_id and sc.so_contact_id = scl.so_contact_id left outer
		join so_contact_phones scp on sc.so_contact_id =
		scp.so_contact_id and scp.phone_type_id=1 and sc.so_id =
		scp.so_id where scl.so_contact_locn_type_id = 40 and
		sc.so_contact_id=#value#
	</select>

	<select id="altPickupcontact.query"
		resultMap="socontact.resultsmap">
		select sc.*, scp.phone_no, scp.phone_no_ext,
		scp.so_phone_class_id, scp.created_date as phone_created_date, scp.phone_type_id
		from so_contact sc join so_contact_locn scl on sc.so_id =
		scl.so_id and sc.so_contact_id = scl.so_contact_id left outer
		join so_contact_phones scp on sc.so_contact_id =
		scp.so_contact_id and scp.phone_type_id=2 and sc.so_id =
		scp.so_id where scl.so_contact_locn_type_id = 40 and
		sc.so_contact_id=#value#
	</select>

	<select id="buyerassociatecontact.query"
		resultMap="socontact.resultsmap">
		select sc.*, scp.phone_no, scp.phone_no_ext,
		scp.so_phone_class_id, scp.created_date as phone_created_date, scp.phone_type_id
		from so_contact sc join so_contact_locn scl on sc.so_id =
		scl.so_id and sc.so_contact_id = scl.so_contact_id left outer
		join so_contact_phones scp on sc.so_contact_id =
		scp.so_contact_id and sc.so_id = scp.so_id where
		scl.so_contact_locn_type_id = 60 and scp.phone_type_id=1 and
		sc.so_id=#value#
	</select>

	<select id="buyersupportcontact.query"
		resultMap="socontact.resultsmap">
		select sc.*, scp.phone_no, scp.phone_no_ext,
		scp.so_phone_class_id,scp.created_date as phone_created_date  ,scp.phone_type_id
		from so_contact sc join so_contact_locn scl on sc.so_id =
		scl.so_id and sc.so_contact_id = scl.so_contact_id left outer
		join so_contact_phones scp on sc.so_contact_id =
		scp.so_contact_id and sc.so_id = scp.so_id where
		scl.so_contact_locn_type_id = 30 and sc.so_contact_type_id = 10
		and sc.so_id=#value#
	</select>

	<select id="vendorresourcecontact.query"
		resultMap="socontact.resultsmap">
		select sc.*, scp.phone_no, scp.phone_no_ext,
		scp.so_phone_class_id, scp.created_date as phone_created_date ,scp.phone_type_id
		from so_contact sc join so_contact_locn scl on sc.so_id =
		scl.so_id and sc.so_contact_id = scl.so_contact_id left outer
		join so_contact_phones scp on sc.so_contact_id =
		scp.so_contact_id and sc.so_id = scp.so_id where
		scl.so_contact_locn_type_id = 50 and scp.phone_type_id=1 and scp.so_phone_class_id=1 and 
		sc.so_id=#value#
	</select>
	
	<select id="serviceprovider.telephonenumbers.query" resultClass="providerTel">
		<!-- select c.first_name as firstName, c.last_name as lastName, 
		v.bus_phone_no as phoneNo, c.phone_no as alternatePhoneNo
		from so_hdr s join vendor_hdr v on s.accepted_vendor_id = v.vendor_id
		join vendor_resource vr on v.vendor_id = vr.vendor_id and vr.primary_ind = 1
		join contact c on vr.contact_id = c.contact_id
		and s.so_id = #value# -->
		SELECT c.first_name   AS firstname, 
       c.last_name    AS lastname, 
       v.bus_phone_no AS phoneno, 
       c.phone_no     AS alternatephoneno, 
       c1.phone_no    AS acceptedRsrcphoneno,
       c1.mobile_no   AS acceptedRsrcmobno
FROM   so_hdr s 
       JOIN vendor_hdr v 
         ON s.accepted_vendor_id = v.vendor_id 
       JOIN vendor_resource vr 
         ON v.vendor_id = vr.vendor_id 
            AND vr.primary_ind = 1 
       JOIN contact c 
         ON vr.contact_id = c.contact_id 
LEFT OUTER JOIN vendor_resource vr1 
         ON s.accepted_resource_id = vr1.resource_id
       JOIN contact c1 
         ON vr1.contact_id = c1.contact_id         
            AND s.so_id = #value#
	</select>

	<select id="vendorresourcecontactfax.query"
		resultMap="socontact.resultsmap">
		select sc.*, scp.phone_no, scp.phone_no_ext,
		scp.so_phone_class_id, scp.created_date as phone_created_date ,scp.phone_type_id
		from so_contact sc join so_contact_locn scl on sc.so_id =
		scl.so_id and sc.so_contact_id = scl.so_contact_id left outer
		join so_contact_phones scp on sc.so_contact_id =
		scp.so_contact_id and sc.so_id = scp.so_id where
		scl.so_contact_locn_type_id = 50 and scp.phone_type_id=3 and
		sc.so_id=#value#
	</select>

	<select id="servicecontact.query"
		resultMap="socontactcell.resultsmap">
		select sc.*, scp.phone_no, scp.phone_no_ext,
		scp.so_phone_class_id, scp.created_date as phone_created_date ,scp.phone_type_id,
		scpm.phone_no as cell_no
		from so_contact sc 
		join so_contact_locn scl on sc.so_id = scl.so_id and sc.so_contact_id = scl.so_contact_id 
		left outer 	join so_contact_phones scp on scp.so_contact_id = sc.so_contact_id and sc.so_id = scp.so_id and	scp.phone_type_id=1
		left outer 	join so_contact_phones scpm on scpm.so_contact_id = sc.so_contact_id and sc.so_id = scp.so_id and scpm.phone_type_id=2 
		where scl.so_contact_locn_type_id = 10 and
		sc.so_contact_type_id=10 and sc.so_id=#value# limit 1
	</select>

	<select id="servicecontactalt.query"
		resultMap="socontact.resultsmap">
		select sc.*, scp.phone_no, scp.phone_no_ext,
		scp.so_phone_class_id, scp.created_date as phone_created_date ,scp.phone_type_id
		from so_contact sc join so_contact_locn scl on sc.so_id =
		scl.so_id and sc.so_contact_id = scl.so_contact_id left outer
		join so_contact_phones scp on scp.so_contact_id =
		sc.so_contact_id and sc.so_id = scp.so_id and
		scp.phone_type_id=2 where scl.so_contact_locn_type_id = 10 and
		sc.so_id=#value# limit 1
	</select>
	<select id="servicecontactfax.query"
		resultMap="socontact.resultsmap">
		select sc.*, scp.phone_no, scp.phone_no_ext,scp.created_date as
		phone_created_date, scp.phone_type_id, scp.so_phone_class_id from so_contact sc
		join so_contact_locn scl on sc.so_id = scl.so_id and
		sc.so_contact_id = scl.so_contact_id left outer join
		so_contact_phones scp on scp.so_contact_id = sc.so_contact_id
		and sc.so_id = scp.so_id and scp.phone_type_id=3 where
		scl.so_contact_locn_type_id = 10 and sc.so_id=#value#
	</select>
	<select id="buyercontactalt.query"
		resultMap="buyercontactalt.resultsmap">
		select sc.* from so_contact sc join so_contact_locn scl on
		sc.so_id = scl.so_id and sc.so_contact_id = scl.so_contact_id
		left outer join so_contact_phones scp on scp.so_contact_id =
		sc.so_contact_id and sc.so_id = scp.so_id and
		scp.phone_type_id=2 where scl.so_contact_locn_type_id = 30 and
		sc.so_contact_type_id=20 and sc.so_id=#value#
	</select>

	<!-- updated to remove massive subqueries -->
	<select id="routedresource.query" resultMap="routed.resultsmap">
		SELECT
		providers.resource_id, providers.so_id, providers.vendor_id, providers.provider_resp_id,
		providers.resp_reason_id,providers.provider_resp_date, providers.provider_resp_comment,providers.service_time_start, 
		providers.service_time_end, providers.service_date1, providers.service_date2,
		providers.incr_spend_limit, providers.offer_expiration_date, providers.created_date, 
		providers.price_model,providers.total_labor, providers.parts_materials, providers.total_hours, 
		providers.email_sent, providers.spn_id, providers.tier_id,providers.routed_date,providers.routed_time_perf_score,
		providers.routed_time_firm_perf_score,
		contact.contact_id AS contact_contact_id,
		contact.last_name AS contact_last_name,
		contact.first_name AS contact_first_name,
		contact.title AS contact_title,
		contact.phone_no AS contact_phone_no,
		contact.fax_no AS contact_fax_no,
		contact.mobile_no AS contact_mobile_no,
		contact.email AS contact_email,
		contact.created_date AS contact_created_date,
		location.locn_id as location_locn_id,
		location.street_1 as location_street_1,
		location.street_2 as location_street_2,
		location.state_cd as location_state_cd,
		location.apt_no as location_apt_no,
		location.zip as location_zip,
		location.zip4 as location_zip4,
		location.country as location_country,
		location.locn_type_id as location_locn_type_id,
		location.gis_latitude as location_gis_latitude,
		location.gis_longitude as location_gis_longitude,
		location.created_date as location_created_date,
		location.modified_date as location_modified_date,
		location.modified_by as location_modified_by,
		providerResp.descr as provider_resp_descr,
		ssps.perf_level as perf_level,
		lspl.descr as perf_descr,
		vh.business_name AS firmName,
		sh.spn_name as spn_name
		FROM
		so_routed_providers AS providers
		left join lu_so_provider_resp providerResp
			on providers.provider_resp_id = providerResp.provider_resp_id
		left join spnet_serviceprovider_state ssps
			on ssps.spn_id = providers.spn_id and ssps.service_provider_id =
			providers.resource_id
		left join lu_spnet_performance_level lspl
			on ssps.perf_level = lspl.performance_id
		left join spnet_hdr sh
			on sh.spn_id = providers.spn_id,
			vendor_resource vendorResource
		left join contact contact on vendorResource.contact_id =
			contact.contact_id
		left join location location on vendorResource.locn_id = location.locn_id
		JOIN vendor_hdr vh ON vh.vendor_id = vendorResource.vendor_id AND vh.wf_state_id IN (3,26,34)
		WHERE providers.so_id = #soId#
		AND providers.resource_id = vendorResource.resource_id
	</select>
	
	<select id="tierRoutedresource.query" resultMap="tierRouted.resultsmap">
		SELECT
		providers.resource_id AS resource_id, 
		providers.so_id AS so_id, 
		providers.vendor_id AS vendor_id,
		providers.created_date AS created_date, 
		providers.spn_id AS spn_id,
		providers.routed_time_perf_score AS routed_time_perf_score,
		providers.routed_time_firm_perf_score AS routed_time_firm_perf_score,
		c.first_name AS fName,
		c.last_name AS lName,
		ssps.perf_level AS perf_level,
		lspl.descr AS descr,
		vh.business_name AS firmName,
		sh.spn_name AS spn_name
		FROM
		tier_route_eligilble_providers AS providers
		LEFT JOIN spnet_serviceprovider_state ssps
			ON ssps.spn_id = providers.spn_id AND ssps.service_provider_id =
			providers.resource_id
		LEFT JOIN lu_spnet_performance_level lspl
			ON ssps.perf_level = lspl.performance_id
		LEFT JOIN spnet_hdr sh
			ON sh.spn_id = providers.spn_id,
			vendor_resource vendorResource
		LEFT JOIN contact c ON vendorResource.contact_id=c.contact_id
		JOIN vendor_hdr vh ON vh.vendor_id = vendorResource.vendor_id AND vh.wf_state_id IN (3,26,34)
		WHERE providers.so_id = #soId# 
		AND providers.resource_id = vendorResource.resource_id
	</select>
	
	
	<select id="sogroup.routedresource.query" parameterClass="java.lang.String" resultMap="sogroup.routed.resultsmap">
	SELECT
		providers.resource_id, providers.so_group_id AS so_id, providers.vendor_id, providers.provider_resp_id,
		providers.resp_reason_id,providers.provider_resp_date, providers.provider_resp_comment,providers.service_time_start, 
		providers.service_time_end, providers.service_date1, providers.service_date2
		FROM
		so_group_routed_providers providers
		WHERE providers.so_group_id = #groupId#
	</select>
	
	<select id="marketMakerProvidersResponse.query" parameterClass="java.util.Map" resultClass="marketMakerProviderResponse">
		SELECT mmpr.so_id AS soId, mmpr.resource_id AS resourceId, 
			   mmpr.call_status_id AS callStatusId, mmpr.mkt_maker_comments AS mktMakerComments, 
			   CONCAT(c.first_name ,' ',SUBSTRING(c.last_name,1,1))  AS modifyingAdmin,
			   mmpr.modified_date_time AS modifiedDateTime, lmmcs.call_status_descr AS callStatusDesc
		FROM 
			   mkt_maker_providers_response mmpr
			   	JOIN lu_mkt_maker_call_status lmmcs ON (mmpr.call_status_id = lmmcs.call_status_id) 
				JOIN user_profile up ON up.user_name = mmpr.modified_by_user
				JOIN contact c ON c.contact_id = up.contact_id
				JOIN (SELECT so_id, resource_id, MAX(modified_date_time) AS lastchangeDate
						FROM mkt_maker_providers_response
						WHERE  so_id = #soId#
						AND resource_id IN  
						<iterate property="resourceIds" open="(" close=")" conjunction=",">
							#resourceIds[]#
						</iterate>			
						GROUP BY so_id, resource_id) 
						AS mmprtemp ON ( mmpr.so_id = mmprtemp.so_id
					 		AND mmpr.resource_id = mmprtemp.resource_id
					 		AND mmpr.modified_date_time = mmprtemp.lastchangeDate )
	</select>
	
	<select id="routedProvidersWithBasicInfo.query" resultClass="routedProvider">
		SELECT
		providers.so_id as soId,
		providers.resource_id as resourceId,
		providers.vendor_id as vendorId,
		providers.provider_resp_id providerRespId
		FROM
		so_routed_providers AS providers
		WHERE providers.so_id = #soId#
	</select>
	
	<select id="rescheduleInfo.query" resultClass="rescheduleVo">
		SELECT
		so_id as soId,
		service_date1 AS serviceDate1,
        service_date2 AS serviceDate2,
        service_time_start AS startTime,
        service_time_end AS endTime,
		resched_date_type_id as rescheduleType,
		resched_service_date1 as rescheduleServiceStartDate,
		resched_service_date2 as rescheduleServiceEndDate,
		resched_service_time_start as rescheduleServiceTime1,
		resched_service_time_end as rescheduleServiceTime2,
		service_locn_time_zone AS serviceLocnTimeZone
		FROM
		so_hdr
		WHERE so_id = #soId#
	</select>
	
	<select id="buyerRescheduleInfo.query" resultClass="rescheduleVo">
		SELECT
		sh.so_id AS soId,
		swc.buyer_preferred_date_type_id AS rescheduleType,
		swc.buyer_preferred_start_date AS rescheduleServiceStartDate,
		swc.buyer_preferred_end_date AS rescheduleServiceEndDate,
		swc.buyer_preferred_start_time AS rescheduleServiceTime1,
		swc.buyer_preferred_end_time AS rescheduleServiceTime2,
		sh.service_locn_time_zone AS serviceLocnTimeZone
		FROM
		so_hdr sh
		INNER JOIN so_workflow_controls swc ON (sh.so_id=swc.so_id)
		WHERE sh.so_id = #soId#
	</select>
	
	<select id="routedProvidersForFirm.query" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
		SELECT
		providers.resource_id as resourceId
		FROM
		so_routed_providers AS providers
		WHERE providers.so_id = #soId# and providers.vendor_id = #vendorId# AND (provider_resp_id =1 OR provider_resp_id IS NULL)
	</select>
	
	<select id="routedSoCount.query" parameterClass="java.util.List" resultClass="java.util.HashMap">
		SELECT
			vendorInfoCache.vendor_id,		
			vendorInfoCache.routed_so_count
		FROM
			vendor_info_cache as vendorInfoCache
			where vendorInfoCache.seq_id = (select latest_seq_id from cache_status
				where table_name = 'vendor_info_cache')
			and vendorInfoCache.vendor_id in
			<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate>
	</select>

	<select id="acceptedresource.query" resultMap="accepted.resultsmap">
		select vendorResource.*,
			contact.contact_id AS contact_contact_id,
			contact.last_name AS contact_last_name,
			contact.first_name AS contact_first_name,
			contact.title AS contact_title,
			contact.phone_no AS contact_phone_no,
			contact.fax_no AS contact_fax_no,
			contact.mobile_no AS contact_mobile_no,
			contact.email AS contact_email,
			contact.created_date AS contact_created_date,
			location.locn_id as location_locn_id,
			location.street_1 as location_street_1,
			location.street_2 as location_street_2,
			location.state_cd as location_state_cd,
			location.apt_no as location_apt_no,
			location.zip as location_zip,
			location.zip4 as location_zip4,
			location.country as location_country,
			location.locn_type_id as location_locn_type_id,
			location.gis_latitude as location_gis_latitude,
			location.gis_longitude as location_gis_longitude,
			location.created_date as location_created_date,
			location.modified_date as location_modified_date,
			location.modified_by as location_modified_by
		from
			vendor_resource vendorResource
				left join contact contact on vendorResource.contact_id = contact.contact_id
				left join location location on vendorResource.locn_id = location.locn_id
		where vendorResource.resource_id = #value#
	</select>

	<select id="tasks.query" resultMap="tasks.resultsmap">
		SELECT 
			st.*, lst.descr as service_type_desc, 
			skt.level, skt.parent_node,
			CASE skt.level 
				WHEN 2 THEN skt.node_name 
				WHEN 3 THEN (SELECT par.node_name FROM skill_tree par WHERE par.node_id = skt.parent_node) 
			END AS skill_category,
			CASE skt.level 
				WHEN 3 THEN skt.node_name 
			END AS skill_subcategory
		FROM 
			so_tasks st 
				left join lu_service_type_template lst on st.service_type_template_id = lst.service_type_template_id
				left join skill_tree skt on st.skill_node_id = skt.node_id
		WHERE st.so_id = #value# AND st.task_status != 'DELETED'
		ORDER BY st.sort_order ,st.sequence_number ,st.final_price desc
	</select>
	
	<!-- Started the get SO API changes -->
	<select id="getTasks.query" resultClass="task" parameterClass="java.lang.String">
	<!--  	SELECT 
			st.so_task_id AS taskId,
			st.task_name AS taskName,
			st.task_comments AS taskComments,
			lst.descr AS serviceType , 
			st.skill_node_id AS skillNodeId
		FROM so_tasks st
		LEFT JOIN lu_service_type_template lst ON st.service_type_template_id = lst.service_type_template_id
		WHERE st.so_id = #serviceOrderID# AND st.task_status != 'DELETED'
		ORDER BY st.sort_order ,st.sequence_number ,st.final_price DESC;
	-->
		SELECT 
		  st.so_task_id    AS taskId,
		  st.task_name     AS taskName,
		  st.task_comments AS taskComments,
		  lst.descr        AS serviceType,
		  st.service_type_template_id AS serviceTypeId,
		  st.skill_node_id AS skillNodeId,
		  st.sku,
		  CASE skt.level 
				WHEN 2 THEN skt.node_name 
				WHEN 3 THEN (SELECT par.node_name FROM skill_tree par WHERE par.node_id = skt.parent_node) 
			END AS categoryName,
			CASE skt.level 
				WHEN 3 THEN skt.node_name 
			END AS subCategoryName
		FROM 
			so_tasks st 
		LEFT JOIN lu_service_type_template lst ON st.service_type_template_id = lst.service_type_template_id
		LEFT JOIN skill_tree skt ON st.skill_node_id = skt.node_id
		WHERE st.so_id = #serviceOrderID# AND st.task_status != 'DELETED'
		ORDER BY st.sort_order ,st.sequence_number ,st.final_price DESC;
	</select>
	
	
	
	<select id="getServicelocation.query" resultClass="solocation" parameterClass="java.lang.String">
		SELECT 
			sl.so_locn_class_id AS locnClassId,
			sl.locn_name AS locnName,
			sl.street_1 AS street1,
			sl.street_2 AS street2,
			sl.city AS city,
			sl.state_cd AS state,
			sl.zip AS zip,
			sl.locn_notes AS locnNotes
		FROM so_location sl
			JOIN so_contact_locn scl ON sl.so_id = scl.so_id AND sl.so_locn_id = scl.so_locn_id 
			LEFT OUTER JOIN lu_so_location_class slc ON sl.so_locn_class_id = slc.so_locn_class_id 
			WHERE scl.so_contact_locn_type_id = 10 AND sl.so_id=#serviceOrderID#
	</select>
	
	<select id="getServicecontact.query" resultClass="contact" parameterClass="java.lang.String">
		SELECT 
			sc.business_name AS businessName,
			sc.first_name AS firstName,
			sc.last_name AS lastName,
			sc.email AS email,
			scp.phone_no AS phoneNo,
			scp.phone_no_ext AS phoneNoExt,
			scp.so_phone_class_id AS phoneClassId,
			scp.phone_type_id AS phoneTypeId
		FROM so_contact sc 
			JOIN so_contact_locn scl ON sc.so_id = scl.so_id AND sc.so_contact_id = scl.so_contact_id 
			LEFT OUTER JOIN so_contact_phones scp ON scp.so_contact_id = sc.so_contact_id AND sc.so_id = scp.so_id AND	scp.phone_type_id=1
			LEFT OUTER JOIN so_contact_phones scpm ON scpm.so_contact_id = sc.so_contact_id AND sc.so_id = scp.so_id AND scpm.phone_type_id=2 
		WHERE scl.so_contact_locn_type_id = 10 AND sc.so_contact_type_id=10 AND sc.so_id=#serviceOrderID# LIMIT 1
	</select>
	
	<select id="getServicecontactalt.query" resultClass="contact" parameterClass="java.lang.String">
		SELECT		
			sc.business_name AS businessName,
			sc.first_name AS firstName,
			sc.last_name AS lastName,
			sc.email AS email,
			scp.phone_no AS phoneNo,
			scp.phone_no_ext AS phoneNoExt,
			scp.so_phone_class_id AS phoneClassId,
			scp.phone_type_id AS phoneTypeId		
		FROM so_contact sc JOIN so_contact_locn scl ON sc.so_id =scl.so_id AND sc.so_contact_id = scl.so_contact_id
 			LEFT OUTER JOIN so_contact_phones scp ON scp.so_contact_id = sc.so_contact_id AND sc.so_id = scp.so_id AND
			scp.phone_type_id=2 WHERE scl.so_contact_locn_type_id = 10 AND sc.so_id=#serviceOrderID# LIMIT 1
	</select>
	
	<select id="getEndusercontact.query" resultClass="contact" parameterClass="java.lang.String">
		SELECT
			sc.business_name AS businessName,
			sc.first_name AS firstName,
			sc.last_name AS lastName,
			sc.email AS email,
			scp.phone_no AS phoneNo,
			scp.phone_no_ext AS phoneNoExt,
			scp.so_phone_class_id AS phoneClassId,
			scp.phone_type_id AS phoneTypeId	
 		FROM so_contact sc JOIN so_contact_locn scl ON sc.so_id = scl.so_id AND sc.so_contact_id = scl.so_contact_id
			LEFT OUTER JOIN so_contact_phones scp ON sc.so_contact_id = scp.so_contact_id AND sc.so_id = scp.so_id
		WHERE scl.so_contact_locn_type_id = 20 AND scp.phone_type_id=1 AND sc.so_id=#serviceOrderID# 
	</select>
	
	<select id="getAltEndusercontact.query" resultClass="contact" parameterClass="java.lang.String">
		SELECT
			sc.business_name AS businessName,
			sc.first_name AS firstName,
			sc.last_name AS lastName,
			sc.email AS email,
			scp.phone_no AS phoneNo,
			scp.phone_no_ext AS phoneNoExt,
			scp.so_phone_class_id AS phoneClassId,
			scp.phone_type_id AS phoneTypeId 
		FROM so_contact sc JOIN so_contact_locn scl ON sc.so_id = scl.so_id AND sc.so_contact_id = scl.so_contact_id
			LEFT OUTER JOIN so_contact_phones scp ON sc.so_contact_id = scp.so_contact_id AND sc.so_id = scp.so_id
		WHERE scl.so_contact_locn_type_id = 20 AND scp.phone_type_id=2 AND sc.so_id=#serviceOrderID# 
	</select>
	
	<select id="getSOaltbuyerresource.query" parameterClass="java.lang.Integer" resultMap="buyerresource.resultsmap">
		SELECT * FROM buyer_resource WHERE contact_id=#buyerContactId#;
	</select>
	
	
	<select id="getVendorResourcecontact.query" resultClass="contact" parameterClass="java.lang.String">
	SELECT 	
		sc.business_name AS businessName,
		sc.first_name AS firstName,
		sc.last_name AS lastName,
		sc.email AS email,
		scp.phone_no AS phoneNo,
		scp.phone_no_ext AS phoneNoExt,
		scp.so_phone_class_id AS phoneClassId,
		scp.phone_type_id AS phoneTypeId
	FROM so_contact sc JOIN so_contact_locn scl ON sc.so_id = scl.so_id AND sc.so_contact_id = scl.so_contact_id
		LEFT OUTER JOIN so_contact_phones scp ON sc.so_contact_id = scp.so_contact_id AND sc.so_id = scp.so_id
	WHERE scl.so_contact_locn_type_id = 50 AND scp.phone_type_id=1 AND scp.so_phone_class_id=1 AND sc.so_id=#serviceOrderID#
	ORDER BY sc.created_date DESC LIMIT 1
	</select>
	
	<select id="getServiceprovider.telephonenumbers.query" resultClass="providerTel" parameterClass="java.lang.String">
		SELECT
			c.first_name AS firstname, 
       		c.last_name AS lastname, 
       		v.bus_phone_no AS phoneno, 
       		c.phone_no AS alternatephoneno, 
       		c1.phone_no AS acceptedRsrcphoneno,
       		c1.mobile_no AS acceptedRsrcmobno
		FROM so_hdr s JOIN vendor_hdr v ON s.accepted_vendor_id = v.vendor_id 
       		JOIN vendor_resource vr ON v.vendor_id = vr.vendor_id AND vr.primary_ind = 1 
       		JOIN contact c ON vr.contact_id = c.contact_id 
			LEFT OUTER JOIN vendor_resource vr1 ON s.accepted_resource_id = vr1.resource_id
       		JOIN contact c1 ON vr1.contact_id = c1.contact_id AND s.so_id = #serviceOrderID#
	</select>
	
	<select id="getDocuments.query" resultClass="SODocument" parameterClass="java.lang.String">
	     SELECT 
			d.file_name AS fileName,
			d.doc_size AS fileSize,
			d.descr AS fileDesc,
			d.created_date AS uploadDate,
			d.doc_category_id AS docCategoryId   
		FROM so_document sd, document d
		WHERE sd.document_id = d.document_id AND sd.so_id = #serviceOrderID# AND d.delete_ind = 0
			AND d.file_name NOT LIKE '%_Thumb%'		
			AND d.title NOT IN ('Customer Signature','Provider Signature')
	</select>
	
	<select id="getParts.query" parameterClass="java.lang.String" resultMap="parts.resultsmap">
		SELECT * FROM so_parts WHERE so_id=#serviceOrderID#
	</select>
	
	<select id="getCustomReferences.query" resultClass="customRef" parameterClass="java.lang.String">
		SELECT 
			custRef.buyer_ref_type_id AS refTypeId,
			custRef.buyer_ref_value AS refValue,
			buyerRef.ref_type AS refType,
			NULL AS soStateId,
			buyerRef.pdf_ref_ind AS pdfRefInd,
			buyerRef.required AS requiredInd,
			buyerRef.private_ind AS privateInd,
			buyerRef.editable AS editable
		FROM 
			so_custom_reference custRef,
			buyer_reference_type buyerRef
		WHERE custRef.so_id=#serviceOrderID# AND custRef.buyer_ref_type_id = buyerRef.buyer_ref_type_id
	</select>
	
		<!-- SLT-3838 -->
		<!-- JobCodes -->
	 <select id="getJobCodeId.query" resultClass="JobCodeDetails" parameterClass="java.lang.String">
	 	SELECT job_code AS jobCodeId
	 	FROM lu_jobcode lu JOIN so_hdr h 
	 	ON h.so_id = #soId# AND lu.primary_skill_category_id = h.primary_skill_category_id
	</select> 
	<!-- SLT-3838 -->
	<!-- PaymentDetails -->
	<select id="getPaymentDetails.query" parameterClass="java.lang.String" resultClass="PaymentDetails">
	SELECT  
		sap.payment_type AS paymentType,
		sap.payment_amount AS amountAuthorized,
		lcc.card_type AS ccType,
		sap.card_expire_month AS cardExpireMonth,
		sap.card_expire_year AS cardExpireYear,
		sap.cc_no AS ccNumber,
		sap.masked_acc_num AS maskedAccNumber,
		sap.check_no AS checkNumber,
		sap.auth_no AS preAuthNumber 
	FROM so_additional_payment sap 
	LEFT OUTER JOIN lu_credit_card_types lcc ON lcc.card_id =sap.card_type
    WHERE so_id=#serviceOrderID# 	
    </select>
    	<!-- SLT-3838 -->
	<!-- Invoicepartdetails -->
	<select id="getinvoicedetails.query" parameterClass="java.lang.String" resultClass="InvoiceDetails">
	 SELECT 
		spip.division_number AS partDivNo,
		spip.source_number AS partPlsNo,
	 	spip.part_no AS partPartNo,
		spip.qty AS partOrderQty,
		spip.part_coverage AS partCoverageCode,
	 	spip.retail_price AS partPrice,
	 	spip.part_status AS PartStatus 
	 	FROM so_provider_invoice_parts spip
	    WHERE so_id=#serviceOrderID# 	
    </select>
	<select id="getInitialPrice.query" resultClass="initPrice" parameterClass="java.lang.String">
		SELECT
			sohdr.spend_limit_labor AS initialLaborPrice,
			sohdr.spend_limit_parts AS initialPartsPrice
		FROM
			so_hdr sohdr
		WHERE sohdr.so_id=#serviceOrderID#	
	</select>
	
	<select id="getNotes.query" parameterClass="java.lang.String" resultMap="notes.resultmap">
		SELECT * FROM so_notes WHERE so_id=#serviceOrderID#
	</select>
	
	<select id="getPrimaryResourceId.query" parameterClass="java.lang.Integer" resultClass="java.lang.String">
		SELECT resource_id FROM vendor_resource WHERE vendor_id=#acceptedVendorId# and primary_ind=1;
	</select>

	<select id="getReasoncodes.query" resultClass="lookUpVo">
	   SELECT 
	   		lu.so_substatus_id AS id, 
	   		lu.descr AS descr
	   FROM lu_so_substatus lu 
	   WHERE 
	   		lu.so_substatus_id IN (110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133)
	 </select> 

	 <select id="getCustResponseCodes.query" resultClass="lookUpVo">
	    SELECT 
	   		lu.reason_code_id AS id, 
	   		lu.reason_code AS descr,
	   		lu.reason_code_type AS type 
	   FROM lu_precall_reason_codes lu 
	   WHERE 
	   		lu.reason_code_type='CUST_RESPONSE'
	   ORDER BY lu.reason_code
	 </select> 
	 
	 <select id="getPreCallReasonCodes.query" resultClass="lookUpVo">
	  SELECT 
	   		lu.reason_code_id AS id, 
	   		lu.reason_code AS descr,
	   		lu.reason_code_type AS type
	   FROM lu_precall_reason_codes lu 
	   WHERE 
	   		lu.reason_code_type='CUST_NOT_AVAILABLE_REASON'
	  ORDER BY lu.reason_code
	 </select> 
	 
	
	    
	<select id="getRoutedresource.query" parameterClass="java.lang.String" resultMap="routed.resultsmap">
		SELECT
			providers.resource_id, providers.so_id, providers.vendor_id, providers.provider_resp_id,
			providers.resp_reason_id,providers.provider_resp_date, providers.provider_resp_comment,providers.service_time_start, 
			providers.service_time_end, providers.service_date1, providers.service_date2,
			providers.incr_spend_limit, providers.offer_expiration_date, providers.created_date, 
			providers.price_model,providers.total_labor, providers.parts_materials, providers.total_hours, 
			providers.email_sent, providers.spn_id, providers.tier_id,providers.routed_date,
			contact.contact_id AS contact_contact_id,
			contact.last_name AS contact_last_name,
			contact.first_name AS contact_first_name,
			contact.title AS contact_title,
			contact.phone_no AS contact_phone_no,
			contact.fax_no AS contact_fax_no,
			contact.mobile_no AS contact_mobile_no,
			contact.email AS contact_email,
			contact.created_date AS contact_created_date,
			location.locn_id as location_locn_id,
			location.street_1 as location_street_1,
			location.street_2 as location_street_2,
			location.state_cd as location_state_cd,
			location.apt_no as location_apt_no,
			location.zip as location_zip,
			location.zip4 as location_zip4,
			location.country as location_country,
			location.locn_type_id as location_locn_type_id,
			location.gis_latitude as location_gis_latitude,
			location.gis_longitude as location_gis_longitude,
			location.created_date as location_created_date,
			location.modified_date as location_modified_date,
			location.modified_by as location_modified_by,
			providerResp.descr as provider_resp_descr,
			ssps.perf_level as perf_level,
			lspl.descr as perf_descr,
			sh.spn_name as spn_name,
			NULL AS firmName,
			NULL AS routed_time_perf_score,
			NULL AS routed_time_firm_perf_score
		FROM
			so_routed_providers AS providers
			left join lu_so_provider_resp providerResp
				on providers.provider_resp_id = providerResp.provider_resp_id
			left join spnet_serviceprovider_state ssps
				on ssps.spn_id = providers.spn_id and ssps.service_provider_id =
				providers.resource_id
			left join lu_spnet_performance_level lspl
				on ssps.perf_level = lspl.performance_id
			left join spnet_hdr sh
				on sh.spn_id = providers.spn_id,
				vendor_resource vendorResource
			left join contact contact on vendorResource.contact_id =
				contact.contact_id
			left join location location on vendorResource.locn_id = location.locn_id
		WHERE providers.so_id = #serviceOrderID#
			AND providers.resource_id = vendorResource.resource_id
	</select>
	
	<select id="getAcceptedresource.query" parameterClass="java.lang.Integer" resultMap="accepted.resultsmap">
		select vendorResource.*,
			contact.contact_id AS contact_contact_id,
			contact.last_name AS contact_last_name,
			contact.first_name AS contact_first_name,
			contact.title AS contact_title,
			contact.phone_no AS contact_phone_no,
			contact.fax_no AS contact_fax_no,
			contact.mobile_no AS contact_mobile_no,
			contact.email AS contact_email,
			contact.created_date AS contact_created_date,
			location.locn_id as location_locn_id,
			location.street_1 as location_street_1,
			location.street_2 as location_street_2,
			location.state_cd as location_state_cd,
			location.apt_no as location_apt_no,
			location.zip as location_zip,
			location.zip4 as location_zip4,
			location.country as location_country,
			location.locn_type_id as location_locn_type_id,
			location.gis_latitude as location_gis_latitude,
			location.gis_longitude as location_gis_longitude,
			location.created_date as location_created_date,
			location.modified_date as location_modified_date,
			location.modified_by as location_modified_by
		from
			vendor_resource vendorResource
				left join contact contact on vendorResource.contact_id = contact.contact_id
				left join location location on vendorResource.locn_id = location.locn_id
		where vendorResource.resource_id = #acceptedResourceId#
	</select>
	
	    
    <resultMap class="providerFirmContact" id="providerFirmContact.resultmap">
		<result property="firmName" column="firmName"/>
        <result property="number" column="number" />
        <result property="extension" column="extension" />
        <result property="adminName" column="adminName" />
        <result property="adminPrimaryPhone" column="adminPrimaryPhone" />
        <result property="adminAlternatePhone" column="adminAlternatePhone" />
        <result property="email" column="email" />
        <result property="vendorId" column="vendorId" />
        <result property="firmLocation.address1" column="street_1" />
        <result property="firmLocation.address2" column="street_2" />
        <result property="firmLocation.city" column="city" />
        <result property="firmLocation.state" column="state_cd" />
        <result property="firmLocation.zip" column="zip" />
    </resultMap>
	
	<!-- SL-19206: Added to include provider firm contact details in get service order api(v1.3) -->
	<select id="getAcceptedVendor.query" parameterClass="java.lang.String" resultMap = "providerFirmContact.resultmap">
	      SELECT  vh.business_name AS firmName,
       			  vh.bus_phone_no AS number,
                  vh.bus_phone_no_ext AS  extension,
        		  COALESCE(CONCAT(c.first_name,' ',c.last_name),c.first_name,c.last_name) AS adminName,
        		  c.phone_no AS adminPrimaryPhone,
        		  c.mobile_no AS adminAlternatePhone,
                  c.email AS email,
                  vh.vendor_id as vendorId,
                  l.street_1,
                  l.street_2,
                  l.city,
                  l.state_cd,
                  l.zip
		 FROM vendor_hdr vh 
         JOIN vendor_resource vr ON vh.vendor_id = vr.vendor_id
         LEFT OUTER JOIN contact c ON vr.contact_id=c.contact_id
         LEFT OUTER JOIN so_hdr h ON h.accepted_vendor_id = vh.vendor_id
         <!-- SL-21592: Added to include firm location details in get service order api(v1.3) -->
         JOIN vendor_location vl ON vl.vendor_id = vh.vendor_id
         JOIN location l ON l.locn_id = vl.locn_id
         AND l.locn_type_id = 1
         WHERE h.so_id = #serviceOrderID# AND vr.primary_ind=1
	</select>
	<!-- End of Get SO API changes -->
	
	
	<select id="priceHistory.query" resultMap="priceHistory.resultsmap">
		SELECT tph.*
			FROM so_task_price_history tph
			WHERE tph.so_task_id = #taskId# order by created_date desc
	</select>
	
    <select id="task.price" parameterClass="java.lang.Integer" resultClass="java.util.HashMap">
        SELECT price,auto_injected_ind,sort_order,primary_task FROM so_tasks WHERE so_task_id= #taskId#
    </select> 

	<select id="parts.query" resultMap="parts.resultsmap">
		select so_id,part_id,part_descr,serial_number,order_number,purchase_order_number,part_status_id,manufacturer,ship_carrier_id,ship_carrier_other,ship_track_no,return_carrier_id,return_carrier_other,return_track_no,core_return_carrier_id,core_return_carrier_other,
		core_return_track_no,provider_bring_part_ind,created_date,modified_date,modified_by,model_no,measurement_standard,length,width,height,weight,quantity,so_contact_id,so_locn_id,reference_part_id,ship_date,return_track_date,additional_part_info,vendor_part_number,
		manufacturer_part_number,product_line,alt_part_ref1,alt_part_ref2
		from so_parts where so_id=#soId#
	</select>	
	
	<select id="invoiceParts.query" resultMap="invoiceParts.resultmap">
		select * from so_provider_invoice_parts where so_id=#soId#
	</select>
	
	<select id="soPartLaborPriceReason.query" resultMap="soPartLaborPriceReason.resultmap">
		select * from so_part_labor_price_reason where so_id=#soId#
	</select>
		
	<select id="customReferences.query"
		resultMap="customReferences.resultsmap">
		SELECT custRef.*,buyerRef.ref_type,null as wf_state_id,buyerRef.pdf_ref_ind,buyerRef.required,buyerRef.private_ind,buyerRef.editable FROM so_custom_reference
		custRef, buyer_reference_type buyerRef WHERE so_id=#soId# AND
		custRef.buyer_ref_type_id = buyerRef.buyer_ref_type_id
	</select>
	
	<select id="customReferenceObject.query" parameterClass="java.util.Map"
		resultMap="customReferences.resultsmap">
		SELECT custRef.*, buyerRef.ref_type,null as wf_state_id, buyerRef.pdf_ref_ind,buyerRef.private_ind FROM so_custom_reference custRef
		 join buyer_reference_type  buyerRef 
		 on custRef.buyer_ref_type_id = buyerRef.buyer_ref_type_id
 		WHERE custRef.so_id=#soId# AND buyerRef.ref_type = #customRefKey#
	</select>
	
	
	<select id="getCustomReference.query" parameterClass="java.util.Map"
		resultMap="customReferences.resultsmap">
		SELECT custRef.*, buyerRef.ref_type,null as wf_state_id, buyerRef.pdf_ref_ind,buyerRef.private_ind,buyerRef.editable,buyerRef.required FROM so_custom_reference custRef
		 join buyer_reference_type  buyerRef 
		 on custRef.buyer_ref_type_id = buyerRef.buyer_ref_type_id
 		WHERE custRef.so_id=#soId# AND buyerRef.ref_type = #customRefKey#
	</select>
	
	<select id="customReferenceList.query" parameterClass="java.util.Map"
		resultMap="customReferences.resultsmap">
    	SELECT custRef.*, buyerRef.ref_type, so_hdr.wf_state_id, buyerRef.pdf_ref_ind,buyerRef.private_ind FROM so_custom_reference custRef
		join buyer_reference_type  buyerRef on custRef.buyer_ref_type_id = buyerRef.buyer_ref_type_id
		join so_hdr on so_hdr.so_id = custRef.so_id
 		WHERE custRef.buyer_ref_value= #customRefValue# AND buyerRef.ref_type = #customRefType#
 		<isNotNull property="soId">
			and so_hdr.so_id != #soId#
		</isNotNull> 
 		<isNotNull property="statusIds" prepend="and so_hdr.wf_state_id not in ">
				<iterate property="statusIds" open="(" close=")"  conjunction=",">
					#statusIds[]#
				</iterate>
			</isNotNull>
 		</select>
	
	<select id="notes.query" resultMap="notes.resultmap">
		select * from so_notes where so_id=#soId#
	</select>
	<select id="lu_so_parts_supplied_by.query"
		resultClass="java.lang.String">
		select descr from lu_so_parts_supplied_by sup where
		sup.parts_supplied_by_id = #parts_supplied_by_id#
	</select>
	<select id="skill_by_so_id.query" resultClass="skill">
		select node_id as nodeId ,node_name as nodeName from skill_tree
		st where node_id = #primary_skill_category_id#
	</select>

	<!-- SO Status Desc -->
	<select id="sostatusdesc.query" resultClass="java.lang.String"  cacheModel="wfStatusCache">
		select wf_state from wf_states where wf_state_id = #wf_state_id#
	</select>

	<!-- Product Availability -->
	<select id="product.query" resultClass="product" parameterClass="java.lang.String">
		SELECT loc1.street_1 AS productStreet1,
		loc1.street_2 AS productStreet2,
		loc1.city AS city,
		loc1.state_cd AS state,
		loc1.zip AS zip
		FROM so_location loc1
        WHERE loc1.so_id = #so_id#
        AND loc1.so_locn_type_id = 40
	</select>
	
	<!-- SO Status Desc -->
	<select id="solaststatusdesc.query" resultClass="java.lang.String"  cacheModel="wfStatusCache">
		select wf_state from wf_states where wf_state_id = #last_status_id#
	</select>
	<!-- SO Sub Status Desc -->
	<select id="sosubstatusdesc.query" resultClass="java.lang.String" cacheModel="wfSubStatusCache">
		select descr from lu_so_substatus where so_substatus_id =
		#wf_substate_id#
	</select>

	<!-- SO Terms & Cond -->
	<!-- This is the buyer terms and condition needs to be refactoredafter 15th dec  -->
	<select id="sotermscond.query" resultClass="java.lang.String">
		select terms_cond_content from lu_terms_cond where terms_cond_id
		= #buyer_so_terms_cond_id#
	</select>
	
	<select id="soProvidertermscond.query" resultClass="java.lang.String">
		select terms_cond_content from lu_terms_cond where terms_cond_id=#provider_so_terms_cond_id#
	</select>

	<!-- SO associated Order reason -->
	<select id="soassocreason.query" resultClass="java.lang.String">
		select descr from lu_so_assoc_reasons where id = #reason_id#
	</select>

	<!-- Accepted Vendor Name -->
	<select id="acceptedvendorname.query"
		resultClass="java.lang.String">
		select business_name from vendor_hdr where vendor_id =
		#vendor_id#
	</select>
	
		
	<resultMap class="price" id="soPrice.resultmap">
		<result property="soId" column="so_id" />
		<result property="origSpendLimitLabor" column="original_spend_limit_labor" />
		<result property="origSpendLimitParts" column="original_spend_limit_parts" />
		<result property="discountedSpendLimitLabor" column="discounted_spend_limit_labor" />
		<result property="discountedSpendLimitParts" column="discounted_spend_limit_parts" />
		<result property="conditionalOfferPrice" column="condl_offer_accepted_price" />
		<result property="finalServiceFee" column="final_service_fee" />
		<result property="createdDate" column="created_date" />
		<result property="modifiedDate" column="modified_date" />
		<result property="partsDiscount" column="discount_percent_parts_spend_limit" />
		<result property="laborDiscount" column="discount_percent_labor_spend_limit" />
		<result property="partsTax" column="tax_percent_parts_spend_limit" />
		<result property="laborTax" column="tax_percent_labor_spend_limit" />
		
	</resultMap>
	
	<resultMap class="buyerPendingCancelPrice" id="soBuyerPendingCancelPrice.resultmap">
		<result property="soId" column="so_id" />
		<result property="price" column="price" />
		<result property="comments" column="comments" />
		<result property="entryDate" column="created_date" />
	</resultMap>
	
	<resultMap class="buyerPendingCancelPreviousPrice" id="soBuyerPrevPendingCancelPrice.resultmap">
		<result property="soId" column="so_id" />
		<result property="price" column="price" />
	</resultMap>
	
	<resultMap class="providerPendingCancelPrice" id="soProviderPendingCancelPrice.resultmap">
		<result property="soId" column="so_id" />
		<result property="price" column="price" />
		<result property="comments" column="comments" />
		<result property="entryDate" column="created_date" />
	</resultMap>
	
	<resultMap class="upsellInfo" id="soAddon.resultsmap">
		<result property="soId" column="so_id"/>
		<result property="sku" column="sku" />
		<result property="description" column="description" />
		<result property="scopeOfWork" column="scope_of_work"/>
		<result property="retailPrice" column="retail_price" />
		<result property="margin" column="margin" />
		<result property="miscInd" column="misc_ind" />
		<result property="quantity" column="qty" />
		<result property="coverage" column="coverage" />
		<result property="autoGenInd" column="auto_gen_ind" />
		<result property="taxPercentage" column="tax_percentage"/>
	</resultMap>
	
	<select id="soPrice.query" resultMap="soPrice.resultmap">
		select * from so_price where so_id=#soId#
	</select>
	
	<select id="soBuyerPendingCancelPrice.query" resultMap="soBuyerPendingCancelPrice.resultmap">
		SELECT so_id,price,created_date,comments FROM so_cancel_request_history
	WHERE so_id=#soId# AND role_id=3 ORDER BY created_date DESC LIMIT 1
	</select>
	
	<select id="soBuyerPrevPendingCancelPrice.query" resultMap="soBuyerPrevPendingCancelPrice.resultmap">
		SELECT so_id,price FROM so_cancel_request_history 
	WHERE role_id=3 AND  so_id=#soId# ORDER BY cancellation_hist_id DESC LIMIT  1,1
	</select>
	
	
	<select id="soProviderPendingCancelPrice.query" resultMap="soProviderPendingCancelPrice.resultmap">
		SELECT so_id,price,created_date,comments FROM so_cancel_request_history
	WHERE so_id=#soId# AND role_id=1 ORDER BY created_date DESC LIMIT 1
	</select>
	
	<select id="upsellAddons.query" resultMap="soAddon.resultsmap">
		select *,coverage='CC' sortorder from so_addon where so_id = #soId# order by sortorder desc
	</select>   	
   <select id="documents.query" resultClass="SODocument">
		select d.file_name as fileName, d.doc_size as fileSize, d.descr as fileDesc, d.created_date as uploadDate,
        d.doc_category_id as docCategoryId,
        d.title as docTitle      
		from so_document sd, document d
		where sd.document_id = d.document_id and sd.so_id = #soId#
		and d.delete_ind = 0
		and d.file_name not like '%_Thumb%'	
		AND d.title NOT IN ('Customer Signature','Provider Signature')	
	</select>
	
	<resultMap class="so" id="getSOAPI.resultsmap">
	 <result property="soId" column="so_id"/>
	 <result property="createdDate" column="created_date" />
	 <result property="routedDate" column="routed_date" />
	 <result property="status" column="wf_state_id"
			select="sostatusdesc.query" />
	 <result property="buyerSoId" column="buyer_so_id" />
	 <result property="subStatus" column="so_substatus_id"
			select="sosubstatusdesc.query" />
	 <result property="buyerTermsCond" column="buyer_terms_cond" />
	 <result property="sowDs" column="sow_descr" />
	 <result property="providerInstructions" column="provider_instr" />
	 <result property="sowTitle" column="sow_title" />
	 <result property="lastStatus" column="last_status_id"
			select="solaststatusdesc.query" />
	 <result property="primarySkillCatId"
			column="primary_skill_category_id" />
	 <result property="tasks" column="so_id" select="tasks.query" />
	 <result property="serviceLocation" column="so_id"
			select="servicelocation.query" />
	 <result property="providerServiceConfirmInd"
			column="provider_service_confirm_ind" />
	 <result property="serviceDateTypeId"
			column="service_date_type_id" />
	 <result property="serviceDate1" column="service_date1" />
	 <result property="serviceDate2" column="service_date2" />
	 <result property="serviceTimeStart" column="service_time_start" />
	 <result property="serviceTimeEnd" column="service_time_end" />
	 <result property="rescheduleServiceDate1"
			column="resched_service_date1" />
	 <result property="rescheduleServiceDate2"
			column="resched_service_date2" />
	 <result property="rescheduleServiceTimeStart"
			column="resched_service_time_start" />
	 <result property="rescheduleServiceTimeEnd"
			column="resched_service_time_end" />
	 <result property="rescheduleServiceDateTypeId"
			column="resched_date_type_id" />
	 <result property="spendLimitLabor" column="spend_limit_labor" />
	 <result property="spendLimitParts" column="spend_limit_parts" />
	 <result property="partsFinalPrice" column="final_price_parts" />
	 <result property="laborFinalPrice" column="final_price_labor" />
	 <result property="priceModel" column="price_model" />
	 <result property="serviceContact" column="so_id"
			select="servicecontact.query" />
	 <result property="serviceContactAlt" column="so_id"
			select="servicecontactalt.query" />
	 <result property="endUserContact" column="so_id"
			select="endusercontact.query" />
	 <result property="altEndUserContact" column="so_id"
			select="altendusercontact.query" />
	 <result property="altBuyerResource" column="buyer_contact_id"
			select="soaltbuyerresource.query" />
	 <result property="vendorResourceContact" column="so_id"
			select="vendorresourcecontact.query" />
	 <result property="serviceproviderContactOnQuickLinks" column="so_id"
			select="serviceprovider.telephonenumbers.query"/>
	 <result property="parts" column="so_id" select="parts.query" />
	 <result property="soDocuments" column="so_id" select="documents.query"/>
	 <result property="customRefs" column="so_id"
			select="customReferences.query" />
	 <result property="soNotes" column="so_id" select="notes.query" />
	 <result property="routedResources" column="so_id"
			select="routedresource.query" />
	 <result property="firmContact" column="so_id" 
	         select="getAcceptedVendor.query"/>
	 <result property="acceptedResource"
			column="accepted_resource_id" select="acceptedresource.query" />
	 <result property="serviceLocationTimeZone" column="service_locn_time_zone"/>
	 <result property="buyer" column="buyer_id"
			select="sobuyer.query" />
	<result property="estimateList" column="so_id"
			select="getEstimates.query" />		
	<result property="review" column="so_id"
			select="getReview.query" />	
	<result property="soPrice" column="so_id"
			select="soPrice.query" />
	<result property="upsellInfo" column="so_id" select="upsellAddons.query" />
	 </resultMap>
	 
	 <!-- This data is taken from the so_hdr table  --> 
	 <resultMap class="so" id="getReducedDetails.resultsmap">
	 	<result property="soId" column="so_id"/>
		<result property="createdDate" column="created_date" />
		<result property="routedDate" column="routed_date" />
		<!-- SLT-4147 -->
		<result property="completedDate" column="completed_date" />
		<!-- SLT-4177 -->
		<result property="resolutionDs" column="resolution_descr" />
	 	<result property="status" column="wf_state_id" select="sostatusdesc.query" />
	 	<result property="buyerSoId" column="buyer_so_id" />
	 	<result property="subStatus" column="so_substatus_id" select="sosubstatusdesc.query" />
		<result property="buyerTermsCond" column="buyer_terms_cond" />
		<result property="sowDs" column="sow_descr" />
		<result property="providerInstructions" column="provider_instr" />
		<result property="sowTitle" column="sow_title" />
		<result property="lastStatus" column="last_status_id" select="solaststatusdesc.query" />
		<result property="primarySkillCatId" column="primary_skill_category_id" />
		<result property="providerServiceConfirmInd" column="provider_service_confirm_ind" />
		<result property="serviceDateTypeId" column="service_date_type_id" />
		<result property="serviceDate1" column="service_date1" />
	 	<result property="serviceDate2" column="service_date2" />
	 	<result property="postingFee" column="posting_fee" />
	 	<result property="tasks" column="so_id" select="tasks.query" />
	 	<result property="serviceTimeStart" column="service_time_start" />
	 	<result property="serviceTimeEnd" column="service_time_end" />
	 	<result property="rescheduleServiceDate1" column="resched_service_date1" />
	 	<result property="rescheduleServiceDate2" column="resched_service_date2" />
		<result property="rescheduleServiceTimeStart" column="resched_service_time_start" />
		<result property="rescheduleServiceTimeEnd" column="resched_service_time_end" />
	 	<result property="rescheduleServiceDateTypeId" column="resched_date_type_id" />
	 	<result property="spendLimitLabor" column="spend_limit_labor" />
	 	<result property="spendLimitParts" column="spend_limit_parts" />
	 	<result property="partsFinalPrice" column="final_price_parts" />
	 	<result property="laborFinalPrice" column="final_price_labor" />
	 	<result property="priceModel" column="price_model" />
	 	<result property="soPartLaborPriceReason" column="so_id" select="soPartLaborPriceReason.query" />
	 	<result property="serviceLocationTimeZone" column="service_locn_time_zone"/>
	 	<result property="serviceDateTimezoneOffset" column="service_date_timezone_offset"/>
		<result property="buyer" column="buyer_id" select="sobuyer.query" />
		<result property="buyerResourceId" column="buyer_resource_id" />
		<result property="buyerContactId" column="buyer_contact_id" />
		<result property="acceptedResourceId" column="accepted_resource_id" />
		<result property="product" column="so_id" select="product.query"/>
		<result property="soPrice" column="so_id" select="soPrice.query" />
	 </resultMap>
	 
	 <resultMap class="task" id="taskLevelPriceHistory.resultsmap">
	 	<result property="taskId" column="so_task_id" />
		<result property="taskName" column="task_name" />
		<result property="price" column="price" />
		<result property="soId" column="so_id" />
		<result property="sku" column="sku" />
		<result property="taskType" column="task_type" />
		<result property="taskStatus" column="task_status" />
		<result property="priceHistoryList" column="taskId = so_task_id" select="priceHistory.query" />
	 </resultMap>	 
	
	 <resultMap class="soPriceChangeHistory" id="soLevelPriceHistory.resultsmap">
		<result property="soId" column="so_id" />
		<result property="soLabourPrice" column="so_labour_price" />
		<result property="soMaterialsPrice" column="so_materials_price" />
		<result property="soPermitPrice" column="so_permit_price" />
		<result property="soAddonPrice" column="so_addon_price" />
		<result property="soPartsInvoicePrice" column="so_parts_invoice_price" />
		<result property="soTotalPrice" column="so_total_price" />
		<result property="action" column="action" />
		<result property="reasonComment" column="reason_comment"/>
		<result property="createdDate" column="created_date" />
	 	<result property="modifiedDate" column="modified_date" />
	 	<result property="modifiedBy" column="modified_by" />
	 	<result property="modifiedByName" column="modified_by_name" />
	 </resultMap>
	 
	 <resultMap class="so" id="soDuplicate.resultsmap">
		<result property="soId" column="so_id" />
		<result property="wfStateId" column="wf_state_id" />
		<result property="status" column="wf_state_id"
			select="sostatusdesc.query" />
		<result property="createdDate" column="created_date" />
	 </resultMap>
	
	<resultMap class="so" id="so.resultsmap">
		<result property="soId" column="so_id" />
		<result property="assocSoId" column="assoc_so_id" />
		<result property="assocReasonId" column="assoc_reason_id" />
		<result property="assocReasonDesc" column="assoc_reason_id"
			select="soassocreason.query" />
		<result property="creatorUserName" column="creator_user_name" />
		<result property="closerUserName" column="closer_user_name" />
		<result property="createdDate" column="created_date" />
		<result property="initialRoutedDate" column="initial_routed_date" />
		<result property="routedDate" column="routed_date" />
		<result property="acceptedDate" column="accepted_date" />
		<result property="cancelledDate" column="cancelled_date" />
		<result property="voidedDate" column="voided_date" />
		<result property="completedDate" column="completed_date" />
		<result property="closedDate" column="closed_date" />
		<result property="actArrivalStartDate"
			column="act_arrival_start_date" />
		<result property="actArrivalEndDate"
			column="act_arrival_end_date" />
		<result property="pricingTypeId" column="pricing_type_id" />
		<result property="initialPrice" column="initial_price" />
		<result property="sowTitle" column="sow_title" />
		<result property="sowDs" column="sow_descr" />
		<result property="spendLimitIncrComment"
			column="spend_limit_incr_comment" />
		<result property="accessFee" column="access_fee" />
		<result property="providerServiceConfirmInd"
			column="provider_service_confirm_ind" />
		<result property="providerInstructions" column="provider_instr" />
		<result property="buyerTermsCond" column="buyer_terms_cond" />
		<result property="providerTermsCondResp"
			column="provider_terms_cond_resp" />
		<result property="providerTermsCondDate"
			column="provider_terms_cond_date" />
		<result property="soTermsCondId" column="so_terms_cond_id" />
		<result property="soTermsCondContent" column="buyer_so_terms_cond_id"
			select="sotermscond.query" />
		<result property="soProviderTermsCondContent" column="provider_so_terms_cond_id"
			select="soProvidertermscond.query" />
		<result property="partsSupplier" column="parts_supplied_by_id" />
		<result property="partsSupplierDesc"
			column="parts_supplied_by_id" select="lu_so_parts_supplied_by.query" />
		<result property="skill" column="primary_skill_category_id"
			select="skill_by_so_id.query" />
		<result property="resolutionDs" column="resolution_descr" />
		<result property="modifiedDate" column="modified_date" />
		<result property="modifiedBy" column="modified_by" />
		<result property="wfStateId" column="wf_state_id" />
		<result property="status" column="wf_state_id"
			select="sostatusdesc.query" />
		<result property="primarySkillCatId"
			column="primary_skill_category_id" />
		<result property="wfSubStatusId" column="so_substatus_id" />
		<result property="subStatus" column="so_substatus_id"
			select="sosubstatusdesc.query" />
		<result property="spendLimitLabor" column="spend_limit_labor" />
		<result property="spendLimitParts" column="spend_limit_parts" />
		<result property="partsFinalPrice" column="final_price_parts" />
		<result property="laborFinalPrice" column="final_price_labor" />
		<result property="loctEditInd" column="lock_edit_ind" />
		
    	<result property="serviceDate1" column="service_date1" />
		<result property="serviceDate2" column="service_date2" />
		<result property="serviceTimeStart" column="service_time_start" />
		<result property="serviceTimeEnd" column="service_time_end" />
		<result property="serviceLocationTimeZone" column="service_locn_time_zone"/>
		<result property="actualServiceLocationTimeZone" column="service_locn_time_zone"/>
		<result property="serviceDateTypeId"
			column="service_date_type_id" />
		<result property="rescheduleServiceDate1"
			column="resched_service_date1" />
		<result property="rescheduleServiceDate2"
			column="resched_service_date2" />
		<result property="rescheduleServiceTimeStart"
			column="resched_service_time_start" />
		<result property="rescheduleServiceTimeEnd"
			column="resched_service_time_end" />
		<result property="rescheduleServiceDateTypeId"
			column="resched_date_type_id" />
		<result property="logoDocumentId"
			column="logo_document_id" />			
		<result property="acceptedVendorId" column="accepted_vendor_id" />
		<result property="acceptedVendorName"
			column="accepted_vendor_id" select="acceptedvendorname.query" />
		<result property="lastChngStateId" column="last_status_id" />
		<result property="lastStatus" column="last_status_id"
			select="solaststatusdesc.query" />
		<result property="fundingTypeId" column="funding_type_id" />
		<result property="accountId" column="account_id" />
		<result property="postingFee" column="posting_fee" />
		<result property="cancellationFee" column="cancellation_fee" />
		<result property="buyerResourceId" column="buyer_resource_id" />
		<result property="buyerContactId" column="buyer_contact_id" />
		<result property="retailPrice" column="retail_price" />
		<result property="retailCancellationFee" column="retail_cancellation_fee" />
		<result property="spnId" column="spn_id" />
		<result property="priceModel" column="price_model" />
		<result property="shareContactInd" column="share_contact_ind" />
		
		<result property="routedResources" column="so_id"
			select="routedresource.query" />
		<result property="tierRoutedResources" column="so_id"
			select="tierRoutedresource.query" />
		<result property="acceptedResourceId"
			column="accepted_resource_id" />
		<result property="acceptedResource"
			column="accepted_resource_id" select="acceptedresource.query" />
		<result property="soNotes" column="so_id" select="notes.query" />
		<result property="tasks" column="so_id" select="tasks.query" />
		<result property="parts" column="so_id" select="parts.query" />
		<result property="invoiceParts" column="so_id" select="invoiceParts.query" />
		<result property="soPartLaborPriceReason" column="so_id" select="soPartLaborPriceReason.query" />
		<result property="selectedAltBuyerContact" column="so_id"
			select="buyercontactalt.query" />
		<result property="buyerTermsCond" column="buyer_terms_cond"/>
		<result property="customRefs" column="so_id"
			select="customReferences.query" />
		<result property="mandatoryBuyerRefs" column="buyer_id"
			select="mandatoryBuyerReferences.query" />
		<result property="soDocuments" column="so_id" select="documents.query"/>

		<!--result property="buyerSupportLocation" column="so_id"
			select="buyersupportlocation.query" /-->
		<!--result property="serviceLocation" column="so_id"
			select="servicelocation.query" /-->
		<!--result property="serviceContact" column="so_id"
			select="servicecontact.query" /-->
		<!--result property="serviceContactAlt" column="so_id"
			select="servicecontactalt.query" /-->
		<!--result property="serviceContactFax" column="so_id"
			select="servicecontactfax.query" /-->
		<!--result property="endUserContact" column="so_id"
			select="endusercontact.query" /-->
		<!--result property="altEndUserContact" column="so_id"
			select="altendusercontact.query" /-->
		<!--result property="altEndUserFax" column="so_id"
			select="altenduserfax.query" /-->
		<!--result property="buyerSupportContact" column="so_id"
			select="buyersupportcontact.query" /-->
		<result property="buyerId" column="buyer_id"/>	
		<result property="buyer" column="buyer_id"
			select="sobuyer.query" />
		<result property="buyerResource" column="buyer_resource_id"
			select="sobuyerresource.query" />
		<result property="altBuyerResource" column="buyer_contact_id"
			select="soaltbuyerresource.query" />

		<!--result property="buyerAssociateLocation" column="so_id"
			select="buyerassociatelocation.query" /-->
		<!--result property="buyerAssociateContact" column="so_id"
			select="buyerassociatecontact.query" /-->
		<!--result property="vendorResourceLocation" column="so_id"
			select="vendorresourcelocation.query" /-->
		<!--result property="vendorResourceContact" column="so_id"
			select="vendorresourcecontact.query" /-->

		<result property="serviceproviderContactOnQuickLinks" column="so_id"
			select="serviceprovider.telephonenumbers.query"/>
		<!--result property="vendorResourceContactFax" column="so_id"
			select="vendorresourcecontactfax.query" /-->
		<result property="buyerToProviderResults" column="so_id"
			select="buyerToProviderResults.query" />
		<result property="providerToBuyerResults" column="so_id"
			select="providerToBuyerResults.query" />

		<result property="docSizeTotal" column="doc_size_total" />
		<result property="groupId" column="so_group_id" />
		<result property="orignalGroupId" column="so_orig_group_id" />
		<result property="soPrice" column="so_id"
			select="soPrice.query" />
		<result property="upsellInfo" column="so_id" select="upsellAddons.query" />
		
		<result property="contactInfo" column="so_id" select="contactinfo.query" />
		<result property="locationInfo" column="so_id" select="locationinfo.query" />
		<result property="sealedBidInd" column="so_id" select="sealedBidInd.query" />	
		<result property="carRuleId" column="so_id" select="assocCarRules.query" />	
		<result property="buyerPendingCancelPrice" column="so_id"
			select="soBuyerPendingCancelPrice.query" />
		<result property="providerPendingCancelPrice" column="so_id"
			select="soProviderPendingCancelPrice.query" />
		<result property="priceType" column="price_type" />
		<result property="assignmentType" column="assignment_type" />
		<result property="schedule" column="so_id" select="schedule.query"/>
		<result property="soWrkFlowControls" column="so_id" select="soWrkFlowControls.query"/>
	</resultMap>
	
	<resultMap class="so" id="so.group.resultsmap">
		<result property="soId" column="so_id" />
		<result property="priceModel" column="price_model" />
		<result property="groupId" column="so_group_id" />
		<result property="wfStateId" column="wf_state_id" />
		<result property="sowTitle" column="sow_title" />
		<result property="buyerId" column="buyer_id"/>	
		<result property="serviceDateTypeId" column="service_date_type_id" />
		<result property="buyer" column="buyer_id" select="sobuyer.query" />
		<result property="spendLimitLabor" column="spend_limit_labor" />
		<result property="spendLimitParts" column="spend_limit_parts" />
    	<result property="serviceDate1" column="service_date1" />
		<result property="serviceDate2" column="service_date2" />
		<result property="serviceTimeStart" column="service_time_start" />
		<result property="serviceTimeEnd" column="service_time_end" />
		<result property="serviceLocationTimeZone" column="service_locn_time_zone"/>
		<result property="actualServiceLocationTimeZone" column="service_locn_time_zone"/>
		<result property="routedResources" column="so_group_id" select="sogroup.routedresource.query" />
	</resultMap>
	
	<resultMap class="soCancelVO" id="socancellation.resultsmap">
		<result property="id" column="so_id" />
		<result property="status" column="wf_state_id" />
		<result property="primaryStatus" column="wf_state_id"
			select="sostatusdesc.query" />
		<result property="spendLimitLabor" column="spend_limit_labor" />
		<result property="spendLimitParts" column="spend_limit_parts" />
		<result property="serviceDate1" column="service_date1" />
		<result property="serviceDate2" column="service_date2" />
		<result property="serviceTimeStart" column="service_time_start" />
		<result property="serviceTimeEnd" column="service_time_end" />
		<result property="serviceLocationTimeZone" column="service_locn_time_zone"/>
		<result property="serviceDateTypeId"
			column="service_date_type_id" />
		<result property="soPricing" column="price_type" />
		
	</resultMap>
	<!-- Result Map definition for SO UPLOAD ERROR TABLE -->
	
	<resultMap class="soDetails" id="so.grouped.resultsmap">
		<result property="soId" column="so_id" />
		<result property="buyerID" column="buyer_id" />
		<result property="createdDate" column="created_date" />
		<result property="routedDate" column="routed_date" />
		<result property="soTitle" column="sow_title" />
		<result property="soTitleDesc" column="sow_descr" />
		<result property="soStatus" column="wf_state_id" />
		<result property="primarySkillCategoryId"
			column="primary_skill_category_id" />
		<result property="soSubStatus" column="so_substatus_id" />
		<result property="spendLimitLabor" column="spend_limit_labor" />
		<result property="spendLimitParts" column="spend_limit_parts" />
	   	<result property="appointStartDate" column="service_date1" />
		<result property="appointEndDate" column="service_date2" />
		<result property="serviceTimeStart" column="service_time_start" />
		<result property="serviceTimeEnd" column="service_time_end" />
		<result property="serviceLocationTimezone" column="service_locn_time_zone"/>
		<result property="serviceDateTypeId" column="service_date_type_id" />
		<result property="spnId" column="spn_id" />
		<result property="acceptedResourceId" column="accepted_resource_id" />
		<result property="groupId" column="so_group_id" />
		<result property="parentGroupId" column="so_group_id" />
		<result property="orignalGroupId" column="so_orig_group_id" />
	</resultMap>

<resultMap class="uploadAuditErrorVO" id="uploadError.resultMap">
    <result property="fileId" column="file_id" />
	<result property="errorNotes" column="error_notes" />
	<result property="rowId" column="record_id" />
	<result property="mainServiceCategory" column="main_service_category" />
	<result property="taskOneName" column="task_one_name" />
	<result property="taskOneCategory" column="task_one_category" />
	<result property="taskOneSubCategory" column="task_one_sub_category" />
	<result property="taskOneSkill"	column="task_one_skill" />
	<result property="taskOneComments" column="task_one_comments" />
	<result property="taskTwoName" column="task_two_name" />
	<result property="taskTwoCategory" column="task_two_category" />
	<result property="taskTwoSubCategory" column="task_two_sub_category" />
	<result property="taskTwoSkill"	column="task_two_skill" />
	<result property="taskTwoComments" column="task_two_comments" />
	<result property="taskThreeName" column="task_three_name" />
	<result property="taskThreeCategory" column="task_three_category" />
	<result property="taskThreeSubCategory" column="task_three_sub_category" />
	<result property="taskThreeSkill"	column="task_three_skill" />
	<result property="taskThreeComments" column="task_three_comments" />
	<result property="partOneManufacturer" column="part_one_manufacturer" />
    <result property="partOneName" column="part_one_name" />
    <result property="partOneModel" column="part_one_model" />
    <result property="partOneDesc" column="part_one_desc" />
    <result property="partOneQuantity" column="part_one_quantity" />
    <result property="partOneInboundCarrier" column="part_one_inbound_carrier" />
    <result property="partOneInboundTrackingId" column="part_one_inbound_tracking_id" />
	<result property="partOneOutboundCarrier" column="part_one_outbound_carrier" />
    <result property="partOneOutboundTrackingId" column="part_one_outbound_tracking_id" />
	<result property="partTwoManufacturer" column="part_two_manufacturer" />
    <result property="partTwoName" column="part_two_name" />
    <result property="partTwoModel" column="part_two_model" />
    <result property="partTwoDesc" column="part_two_desc" />
    <result property="partTwoQuantity" column="part_two_quantity" />
    <result property="partTwoInboundCarrier" column="part_two_inbound_carrier" />
    <result property="partTwoInboundTrackingId" column="part_two_inbound_tracking_id" />
	<result property="partTwoOutboundCarrier" column="part_two_outbound_carrier" />
    <result property="partTwoOutboundTrackingId" column="part_two_outbound_tracking_id" />
	<result property="partThreeManufacturer" column="part_three_manufacturer" />
    <result property="partThreeName" column="part_three_name" />
    <result property="partThreeModel" column="part_three_model" />
    <result property="partThreeDesc" column="part_three_desc" />
    <result property="partThreeQuantity" column="part_three_quantity" />
    <result property="partThreeInboundCarrier" column="part_three_inbound_carrier" />
    <result property="partThreeInboundTrackingId" column="part_three_inbound_tracking_id" />
	<result property="partThreeOutboundCarrier" column="part_three_outbound_carrier" />
    <result property="partThreeOutboundTrackingId" column="part_three_outbound_tracking_id" />
	<result property="partMaterial" column="part_material" />
    <result property="locationType" column="location_type" />
    <result property="businessName" column="business_name" />
    <result property="firstName" column="first_name" />
    <result property="lastName" column="last_name" />
    <result property="street1" column="street1" />
    <result property="street2" column="street2" />    
    <result property="aptNo" column="apt_no" />
    <result property="city" column="city" />
    <result property="state" column="state" />
	<result property="zip" column="zip" />
    <result property="email" column="email" />
    <result property="phone" column="phone" />
    <result property="phoneType" column="phone_type" />
    <result property="altPhone" column="alt_phone" />
    <result property="altPhoneType" column="alt_phone_type" />
    <result property="fax" column="fax" />
	<result property="soLocNotes" column="so_loc_notes" />
	<result property="title" column="title" />  
	<result property="overview" column="overview" />
    <result property="buyerTc" column="buyer_tc" />
	<result property="specialInst" column="special_inst" />
	<result property="serviceDateType" column="service_date_type" />
    <result property="serviceDate" column="service_date" />
	<result property="serviceTime" column="service_time" />
    <result property="serviceEndDate" column="service_end_date" />
	<result property="serviceEndTime" column="service_end_time" />
    <result property="provConfTimeInd" column="prov_conf_time_ind" />
	<result property="attachment1" column="attachment1" />
    <result property="desc1" column="desc1" />
	<result property="attachment2" column="attachment2" />
    <result property="desc2" column="desc2" />
	<result property="attachment3" column="attachment3" />
    <result property="desc3" column="desc3" />
	<result property="brandingInfo" column="branding_info" />
	<result property="custRef1Value" column="cust_ref_1_value" />
	<result property="custRef2Value" column="cust_ref_2_value" />
	<result property="custRef3Value" column="cust_ref_3_value" />
	<result property="custRef4Value" column="cust_ref_4_value" />
	<result property="custRef5Value" column="cust_ref_5_value" />
	<result property="custRef6Value" column="cust_ref_6_value" />
	<result property="custRef7Value" column="cust_ref_7_value" />
	<result property="custRef8Value" column="cust_ref_8_value" />
	<result property="custRef9Value" column="cust_ref_9_value" />
	<result property="custRef10Value" column="cust_ref_10_value" />
	<result property="laborSpendLimit" column="labor_spend_limit" />
	<result property="partSpendLimit" column="part_spend_limit" />
	<result property="templateId" column="template_id" />
</resultMap>

<resultMap class="so" id="so.statusandcompletddate">
	<result property="wfStateId" column="wf_state_id" />
	<result property="completedDate" column="completed_date" />
</resultMap>
 <resultMap class="preCallHistory" id="preCallHistory.resultsmap"> 
         <result property="date" column="date" /> 
         <result property="scheduleStatus" column="scheduleStatus" />
         <result property="modifiedBy" column="modifiedBy" />
         <result property="reason" column="reason" />
     </resultMap>
	
	<select id="zipCode.query" parameterClass="java.lang.String" resultClass="java.lang.String">
		select time_zone from zip_geocode where zip=#serviceLocnZipCode#
	</select>
	
	<select id="stateTimeZone.query" parameterClass="java.lang.String" resultClass="java.lang.String">
		select time_zone  from zip_geocode where state_cd=#serviceLocnStateCd#
	</select>
	
	<select id="so.query" parameterClass="so" resultMap="so.resultsmap">
		select * from so_hdr where so_id = #soId#
	</select> 
	
	<select id="so.getQuery" parameterClass="so" resultMap="getSOAPI.resultsmap">
		select * from so_hdr where so_id = #soId#
	</select> 
	
	<select id="so.getReducedQuery" parameterClass="so" resultMap="getReducedDetails.resultsmap">
		select * from so_hdr where so_id = #soId#
	</select> 
	
	<select id="socancellation.query" parameterClass="soCancelVO" resultMap="socancellation.resultsmap">
		select * from so_hdr where so_id = #id#
	</select>
	
	<select id="so.group.query" parameterClass="java.lang.String" resultMap="so.group.resultsmap">
		SELECT 
		s.so_id AS so_id,
		s.buyer_id AS buyer_id,
		s.price_model AS price_model,
		s.service_date_type_id AS service_date_type_id,
		s.wf_state_id AS wf_state_id,
		s.so_group_id AS so_group_id,
		sg.group_title AS sow_title,
		IF (sgp.final_group_spend_limit_labor IS
		NULL,sgp.original_group_spend_limit_labor,sgp.final_group_spend_limit_labor)
		AS spend_limit_labor,
		IF (sgp.final_group_spend_limit_labor IS
		NULL,sgp.original_group_spend_limit_parts,sgp.final_group_spend_limit_parts)
		AS spend_limit_parts,
		s.service_date1 AS service_date1,
		s.service_date2 AS service_date2,
		s.service_time_start AS service_time_start,
		s.service_time_end AS service_time_end,
		s.service_locn_time_zone AS service_locn_time_zone
		FROM
		so_hdr s
		JOIN so_group sg ON sg.so_group_id = s.so_group_id
		JOIN so_group_price sgp ON sgp.so_group_id = s.so_group_id
		WHERE s.so_group_id = #parentGroupId# LIMIT 1;
	</select>

	
	<select id="so.group_resultVO.query" parameterClass="java.lang.String" resultMap="so.grouped.resultsmap">
		select * from so_hdr where so_group_id = #parentGroupId#
	</select>
	
	<select id="so.group.childIds.query" parameterClass="java.lang.String" resultClass="java.lang.String">
		select so_id from so_hdr where so_group_id = #parentGroupId#
	</select>
	
	<select id="so.service_locn_time_zone.query" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		select service_locn_time_zone from so_hdr where so_id = #soId#
	</select>
	
	<select id="so.modfied_date.query" parameterClass="java.lang.String"
		resultClass="java.util.Date">
		select modified_date from so_hdr where so_id = #soId#
	</select>
	
	<select id="so.statusquery" parameterClass="so" resultMap="so.statusandcompletddate">
		select wf_state_id, completed_date from so_hdr where so_id = #soId#
	</select>

	<select id="buyerToProviderResults.query"
		parameterClass="java.lang.String" resultClass="surveyResponseSO">
		select so_id as soId, response_hdr_id as responseHdrId,
		entity_type_id as entityTypeId, entity_id as entityId,
		created_date as createdDate from survey_response_so where
		so_id=#so_id# and entity_type_id=10 group by so_id order by createdDate desc
	</select>
	<select id="providerToBuyerResults.query"
		parameterClass="java.lang.String" resultClass="surveyResponseSO">
		select so_id as soId, response_hdr_id as responseHdrId,
		entity_type_id as entityTypeId, entity_id as entityId,
		created_date as createdDate from survey_response_so where
		so_id=#so_id# and entity_type_id=20 group by so_id order by createdDate desc
	</select>

	<!-- End of SO Object Model queries SELECT-->

	<!-- INSERT START-->
	<insert id="sohdr.insert" parameterClass="so">
		INSERT into so_hdr (so_id, buyer_id, accepted_resource_id,
		buyer_contact_id 
		<isNotNull prepend=", " property="priceModel">
			price_model
		</isNotNull>
		, creator_user_name, closer_user_name,
		assoc_so_id, assoc_reason_id, created_date, routed_date,
		accepted_date, cancelled_date, voided_date, completed_date,
		closed_date, act_arrival_start_date, act_arrival_end_date,
		pricing_type_id, initial_price, spend_limit_labor,
		spend_limit_incr_comment, access_fee, sow_title, sow_descr,
		provider_instr, buyer_terms_cond, provider_terms_cond_resp,
		provider_terms_cond_date, resolution_descr, modified_date,
		wf_state_id, so_substatus_id, primary_skill_category_id,
		last_status_chg, service_date_type_id, service_date1,
		service_date2, service_time_start, service_time_end,
		provider_service_confirm_ind, spend_limit_parts,
		accepted_vendor_id, parts_supplied_by_id, 
		funding_type_id, posting_fee, cancellation_fee, retail_price, retail_cancellation_fee, buyer_resource_id,
		service_locn_time_zone, service_date_timezone_offset,logo_document_id, spn_id,account_id,share_contact_ind)
		VALUES (#soId#,
		#buyer.buyerId#, #acceptedResource.resourceId#,
		#buyerContactId#
		<isNotNull prepend=", " property="priceModel">
			 #priceModel#
		</isNotNull>, #creatorUserName#,
		#closerUserName#, #assocSoId#, #assocReasonId#, #createdDate#,
		#routedDate#, #acceptedDate#, #cancelledDate#, #voidedDate#,
		#completedDate#, #closedDate#, #actArrivalStartDate#,
		#actArrivalEndDate#, #pricingTypeId#, #initialPrice#,
		#spendLimitLabor#, #spendLimitIncrComment#, #accessFee#,
		#sowTitle#, #sowDs#, #providerInstructions#, #buyerTermsCond#,
		#providerTermsCondResp#, #providerTermsCondDate#,
		#resolutionDs#, #modifiedDate#, #wfStateId#, #wfSubStatusId#,
		#primarySkillCatId#, #lastStatusChange#, #serviceDateTypeId#,
		#serviceDate1#, #serviceDate2#, #serviceTimeStart#,
		#serviceTimeEnd#, #providerServiceConfirmInd#,
		#spendLimitParts#, #acceptedVendorId#, #partsSupplier#,
		#fundingTypeId#, #postingFee#, #cancellationFee#, #retailPrice#, #retailCancellationFee#, #buyerResourceId#,
		#serviceLocationTimeZone#, #serviceDateTimezoneOffset#, #logoDocumentId#, #spnId#,#accountId#,#shareContactInd#)
	</insert>

	<!-- INSERT END -->


	<insert id="note.insert" parameterClass="note">
		insert into so_notes(
				so_id,
				created_date,
				note_subject, 
				role_id, 
				note, 
				created_by_name, 
				modified_date,
				modified_by,
				read_ind, 
				note_type_id,
				<dynamic>
			  	  <isGreaterThan property="privateId" compareValue="-1">private_ind,</isGreaterThan>
			  	</dynamic>
				entity_id) 
		values(
				#soId#,
				#createdDate#, 
				#subject#, 
				#roleId#, 
				#note#, 
				#createdByName#,
				null, 
				#modifiedBy#,
				#readInd#,
				#noteTypeId#,
				<dynamic>
					<isGreaterThan property="privateId" compareValue="-1">#privateId#,</isGreaterThan>
				</dynamic>
				#entityId#
				)
		<selectKey resultClass="int" > 
			select LAST_INSERT_ID() as value
		</selectKey>

	</insert>
	
	<select id="note.select.all" parameterClass="note"
		resultClass="note">
		select 	so_id 			as soId, 
				note_id 	 	as noteId, 
				created_date 	as createdDate, 
				note_subject 	as subject, 
				role_id 	 	as roleId, 
				note 			as note, 
				created_by_name as createdByName, 
				modified_date 	as modifiedDate, 
				modified_by 	as modifiedBy,
				note_type_id    as noteTypeId,
				private_ind     as privateId,
				entity_id 		as entityId,
				read_ind		as readInd,
				(select count(*) FROM vendor_resource vr WHERE vr.resource_id=so_notes.entity_id limit 1) AS providerInd
				
		from 	so_notes where so_id = #soId# 
		<isEqual prepend="AND" property="noteTypeId" compareValue="1">
				note_subject !='Market Maker Response'
		</isEqual>
		order by createdDate desc
	</select>
	
	<select id="note.select.deleted.all" parameterClass="note"
		resultClass="note">
		select 	so_id 			as soId, 
				note_id 	 	as noteId, 
				created_date 	as createdDate, 
				note_subject 	as subject, 
				role_id 	 	as roleId, 
				note 			as note, 
				created_by_name as createdByName, 
				modified_date 	as modifiedDate, 
				modified_by 	as modifiedBy,
				note_type_id    as noteTypeId,
				deleted_date	as deletedDate
		from 	so_notes_deleted
		order by deletedDate desc
	</select>

	<select id="note.select" parameterClass="note"
		resultClass="note">
		select 	
		so_notes.so_id 		as soId, 
		note_id 	 	as noteId, 
		so_notes.created_date 	as createdDate, 
		note_subject 		as subject, 
		role_id 	 	as roleId, 
		note 			as note, 
		created_by_name 	as createdByName, 
		so_notes.modified_date 	as modifiedDate, 
		so_notes.modified_by 	as modifiedBy,
		note_type_id    	as noteTypeId,
		private_ind     	as privateId,
		so_notes.entity_id	as entityId,
		read_ind as readInd,
		a.buyer_id as buyerId,
		(select count(*) FROM vendor_resource vr WHERE vr.resource_id=so_notes.entity_id limit 1) AS providerInd
	from 	
		so_notes,
		so_hdr a
	where   
		so_notes.so_id=#soId# 
		and   
		so_notes.so_id =a.so_id
		and   
		note_type_id in
			<iterate property="noteTypeIds" open="(" close=")" conjunction=", ">
				#noteTypeIds[]#
			</iterate>
		and 
		(	
			(private_ind = 1 
			and 
			(	
				(so_notes.role_id in (1,2,3,5)
				and 
				#roleId#  = 2
				)
				or
				(so_notes.role_id in (3,5)
				and 
				#roleId#  in (3,5)
				)
			) 
		)
		or 
		(private_ind=0
		and 
		#roleId#  in (2,3,5)
		)
	)
		<isEqual property="noteTypeId" compareValue="1">
			AND note_subject !='Market Maker Response'
		</isEqual>
		
	union
	
	select 	
		so_notes.so_id 		as soId, 
		note_id 	 	as noteId, 
		so_notes.created_date 	as createdDate, 
		note_subject 		as subject, 
		role_id 	 	as roleId, 
		note 			as note, 
		created_by_name 	as createdByName, 
		so_notes.modified_date 	as modifiedDate, 
		so_notes.modified_by 	as modifiedBy,
		note_type_id    	as noteTypeId,
		private_ind     	as privateId,
		so_notes.entity_id 	as entityId,
		read_ind as readInd,
		a.buyer_id as buyerId,
		(select count(*) FROM vendor_resource vr WHERE vr.resource_id=so_notes.entity_id limit 1) AS providerInd
	from 	
		so_notes,
		so_hdr a
	where   
		so_notes.so_id=#soId# 
		and   
		so_notes.so_id =a.so_id
   		and   
   		note_type_id in
			<iterate property="noteTypeIds" open="(" close=")" conjunction=", ">
				#noteTypeIds[]#
			</iterate>
		and 
		#roleId# = 1 
		and 
		((a.accepted_resource_id is not null 
		and 
		(
			(
				(select 
					vendor_id 
				from 
					vendor_resource 
				where 
					so_notes.entity_id = vendor_resource.resource_id 
					and 
					vendor_id in 
					(select vendor_id from vendor_resource where a.accepted_resource_id = vendor_resource.resource_id)
				)
				and( 
					(private_ind=0 
					)
					or
					( 
					private_ind=1 
					and 
					so_notes.role_id = 1 
					)
				)
			)
			or (
				private_ind=0 
				and 
				so_notes.role_id IN (2,3,5)
			) 
		
		
		)
		)
		or ((a.assignment_type='FIRM')
                AND
                (
                        (
                                (so_notes.entity_id IN(SELECT resource_id FROM vendor_resource WHERE vendor_id=a.accepted_vendor_id))
                                AND(
                                        (private_ind=0
                                        )
                                        OR
                                        (
                                        private_ind=1
                                        AND
                                        so_notes.role_id = 1
                                        )
                                )
                        )
                        OR (
                                private_ind=0
                                AND
                                so_notes.role_id IN (2,3,5)
                        )
               
               
                )
                )
		)
		<isEqual property="noteTypeId" compareValue="1">
			AND note_subject !='Market Maker Response'
		</isEqual>
	order by 
		createdDate desc
	</select>

	<insert id="socustomRef.insert" parameterClass="customRef">
		insert into so_custom_reference(so_id, buyer_ref_type_id,
		buyer_ref_value ) values (#soId#, #refTypeId#, #refValue#)
	</insert>	

	<insert id="task.insert" parameterClass="task">
		insert into so_tasks (so_id, created_date,
		modified_date, modified_by, skill_node_id,
		service_type_template_id, task_name,task_comments, price,auto_injected_ind,sort_order) VALUES
		(#soId#, #createDate#, NULL, #modifiedBy#,
		#skillNodeId#, #serviceTypeId#, #taskName#, #taskComments#, #price#, #autoInjectedInd#,#sortOrder#)
		 <selectKey resultClass="java.lang.Integer" > 
		   select LAST_INSERT_ID() as value
		 </selectKey>
	</insert>

	<update id="sowcustomRef.update" parameterClass="customRef">
		update so_custom_reference set buyer_ref_value=#refValue# where
		so_id = #soId# and buyer_ref_type_id = #refTypeId#
	</update>
	
	<delete id="sowcustomRef.delete" parameterClass="so">
		delete sc.* 
		from so_custom_reference sc inner join buyer_reference_type br on br.buyer_ref_type_id = sc.buyer_ref_type_id 
		where sc.so_id=#soId# and br.buyer_input = true
	</delete>

	<insert id="sowcustomRef.insert" parameterClass="customRef">
		insert into so_custom_reference(so_id, buyer_ref_type_id,
		buyer_ref_value ) values (#soId#, #refTypeId#, #refValue#)
	</insert>
		<insert id="part.insert" parameterClass="part">
		INSERT into so_parts ( so_id, part_descr,
		ship_carrier_id, ship_track_no, return_carrier_id,
		return_track_no, core_return_carrier_id, core_return_track_no, provider_bring_part_ind, created_date,
		modified_date, modified_by, manufacturer, model_no,
		measurement_standard, length, width, height, weight, quantity,
		ship_carrier_other, return_carrier_other, core_return_carrier_other, reference_part_id,ship_date,
		return_track_date,serial_number,manufacturer_part_number,vendor_part_number,
		product_line,order_number,purchase_order_number,part_status_id,alt_part_ref1,alt_part_ref2,additional_part_info,
		so_contact_id ,so_locn_id) VALUES
		(#soId#, #partDs#, #shippingCarrier.carrierId#,
		#shippingCarrier.trackingNumber#, #returnCarrier.carrierId#,
		#returnCarrier.trackingNumber#, #coreReturnCarrier.carrierId#,
		#coreReturnCarrier.trackingNumber#, #providerBringPartInd#,
		#createdDate#, #modifiedDate#, #modifiedBy#, #manufacturer#,
		#modelNumber#, #measurementStandard#, #length#, #width#,
		#height#, #weight#, #quantity#, #shipCarrierOther#, #returnCarrierOther#,#coreReturnCarrierOther#,
		#referencePartId#,#shipDate#,#returnTrackDate#,#serialNumber#,#manufacturerPartNumber#,
		#vendorPartNumber#,#productLine#,#orderNumber#,#purchaseOrderNumber#,#partStatusId#,#altPartRef1#,#altPartRef2#,#additionalPartInfo#
			<dynamic prepend=",">
				<isNotEqual  prepend="," property="pickupContact.contactId" compareValue="-1">
					#pickupContact.contactId#
				</isNotEqual>
				<isEqual  prepend="," property="pickupContact.contactId" compareValue="-1">
					null
				</isEqual>
				<isNotEqual  prepend="," property="pickupLocation.locationId" compareValue="-1">
					#pickupLocation.locationId#
				</isNotEqual>
				<isEqual  prepend="," property="pickupLocation.locationId" compareValue="-1">
					null
				</isEqual>
			</dynamic>)
		<selectKey resultClass="int"  > 
		   select LAST_INSERT_ID() as value
		 </selectKey>
	</insert>
	<delete id="sowpart.delete" parameterClass="so">
		delete from so_parts where so_id=#soId#
		<isNotNull property='parts'>
			<iterate property='parts'>
				and part_id!=#parts[].partId#
			</iterate>
		</isNotNull>
	</delete>
	
	<delete id="soparts.delete" parameterClass="java.lang.String">
		delete from so_parts where so_id=#soId#
	</delete>
	
	<select id="wspart.select" parameterClass="part" resultClass="java.lang.Integer">
		select part_id from so_parts where so_id=#soId# and reference_part_id=#referencePartId#
	</select>
	<update id="sowpart.update" parameterClass="part">
		update so_parts 
		<dynamic prepend="SET">
			<isNotNull prepend=", " property="partDs">
				part_descr=#partDs#
			</isNotNull>
			<isNotEmpty prepend=", " property="shippingCarrier.carrierId">
				ship_carrier_id =#shippingCarrier.carrierId# 
			</isNotEmpty>
			<isNotNull prepend=", " property="shippingCarrier.trackingNumber">
				ship_track_no =	#shippingCarrier.trackingNumber#
			</isNotNull>
			<isNotNull prepend=", " property="returnCarrier.carrierId">
				return_carrier_id =	#returnCarrier.carrierId# 
			</isNotNull>	
			<isNotNull prepend=", " property="returnCarrier.trackingNumber">
				return_track_no =	#returnCarrier.trackingNumber# 
			</isNotNull>
			<isNotNull prepend=", " property="coreReturnCarrier.carrierId">
				core_return_carrier_id =	#coreReturnCarrier.carrierId# 
			</isNotNull>	
			<isNotNull prepend=", " property="coreReturnCarrier.trackingNumber">
				core_return_track_no =	#coreReturnCarrier.trackingNumber# 
			</isNotNull>
			<isNotNull prepend=", " property="providerBringPartInd">
				provider_bring_part_ind =	#providerBringPartInd# 
			</isNotNull>
			<isNotNull prepend=", " property="manufacturer">
				manufacturer = #manufacturer# 
			</isNotNull>
			<isNotNull prepend=", " property="modelNumber">
				model_no = #modelNumber#
			</isNotNull>		
			<isNotNull prepend=", " property="measurementStandard">
				 measurement_standard	=#measurementStandard# 
			</isNotNull>
			<isNotNull prepend=", " property="length">
				length =#length# 
			</isNotNull>
			<isNotNull prepend=", " property="width">
				width = #width# 
			</isNotNull>																			
			<isNotNull prepend=", " property="height">
				height = #height# 
			</isNotNull>	
			<isNotNull prepend=", " property="weight">
				weight = #weight#
			</isNotNull>	
			<isNotNull prepend=", " property="quantity">
				quantity = #quantity#
			</isNotNull>
			<isNotNull prepend=", " property="shipCarrierOther">
				ship_carrier_other =#shipCarrierOther#
			</isNotNull>
			<isNotNull prepend=", " property="returnCarrierOther">
				return_carrier_other =#returnCarrierOther# 
			</isNotNull>
			<isNotNull prepend=", " property="coreReturnCarrierOther">
				core_return_carrier_other =#coreReturnCarrierOther# 
			</isNotNull>													
			<isNull prepend=", " property="pickupContact.contactId">
				so_contact_id =#pickupContact.contactId#
			</isNull>	
			<isNotNull prepend=", " property="referencePartId">
				reference_part_id=#referencePartId#
			</isNotNull>	
			<isNotNull prepend=", " property="shipDate">
				ship_date=#shipDate#
			</isNotNull>
			<isNull prepend=", " property="pickupLocation.locationId">
				so_locn_id=#pickupLocation.locationId#
			</isNull>
			<isNotNull prepend=", " property="serialNumber">
				serial_number=#serialNumber#
			</isNotNull>
			<isNotNull prepend=", " property="manufacturerPartNumber">
				manufacturer_part_number=#manufacturerPartNumber#
			</isNotNull>
			<isNotNull prepend=", " property="vendorPartNumber">
				vendor_part_number=#vendorPartNumber#
			</isNotNull>
			<isNotNull prepend=", " property="productLine">
				product_line=#productLine#
			</isNotNull>
			<isNotNull prepend=", " property="altPartRef1">
				alt_part_ref1=#altPartRef1#
			</isNotNull>
			<isNotNull prepend=", " property="altPartRef2">
				alt_part_ref2=#altPartRef2#
			</isNotNull>
			<isNotNull prepend=", " property="additionalPartInfo">
				additional_part_info=#additionalPartInfo#
			</isNotNull>
			<isNotNull prepend=", " property="orderNumber">
				order_number=#orderNumber#
			</isNotNull>
			<isNotNull prepend=", " property="purchaseOrderNumber">
				purchase_order_number=#purchaseOrderNumber#
			</isNotNull>
			<isNotNull prepend=", " property="returnTrackDate">
				return_track_date=#returnTrackDate#
			</isNotNull>
			<isGreaterThan prepend="," property="pickupLocation.locationId" compareValue="0">
				so_locn_id=#pickupLocation.locationId#
			</isGreaterThan>		
			<isGreaterThan prepend="," property="pickupContact.contactId" compareValue="0">
				so_contact_id =#pickupContact.contactId#
			</isGreaterThan>							
		</dynamic>	
		<!-- allow part status to update to null -->
		,part_status_id=#partStatusId#
		where so_id = #soId# and part_id = #partId#
	</update>
	<update id="sowtask.update" parameterClass="task">
		update so_tasks set skill_node_id =#skillNodeId#,
		service_type_template_id =#serviceTypeId#, task_name=#taskName#,
		task_comments = #taskComments#, sort_order = #sortOrder# 
		where so_task_id = #taskId# and
		so_id=#soId#
	</update>
	<delete id="sowtask.delete" parameterClass="so">
		delete from so_tasks where so_id=#soId#
		<isNotNull property='tasks'>
			<iterate property='tasks'>
				and so_task_id!=#tasks[].taskId#
			</iterate>
		</isNotNull>
	</delete>

	<delete id="sotask.delete" parameterClass="java.lang.Integer">
		delete from so_tasks where so_task_id = #taskId#
	</delete>

	<update id="so.update" parameterClass="so">
		UPDATE so_hdr
		<dynamic prepend="SET">
			<isNotNull prepend=", " property="priceModel">
				price_model = #priceModel#
			</isNotNull>
			<isNotNull prepend=", " property="createdDate">
				created_date = (SELECT IF(wf_state_id IS NULL,NOW(),created_date))
			</isNotNull>
			<isNotNull prepend=", " property="wfStateId">
				wf_state_id = #wfStateId#
			</isNotNull>
			<isNotNull prepend=", " property="wfSubStatusId">
				so_substatus_id = #wfSubStatusId#
			</isNotNull>
			<isNotNull prepend=", " property="lastStatusChange">
				last_status_chg = #lastStatusChange#
			</isNotNull>
			<isNotNull prepend=", " property="routedDate">
				routed_date = #routedDate#
			</isNotNull>
			<isEqual property="updateSoPriceFlag" compareValue="true">
				<isNotNull prepend=", " property="laborFinalPrice">
					final_price_labor = #laborFinalPrice#
				</isNotNull>
				<isNotNull prepend=", " property="partsFinalPrice">
					final_price_parts = #partsFinalPrice#
				</isNotNull>
			</isEqual>
			<isNotNull prepend=", " property="initialPrice">
				initial_price = #initialPrice#
			</isNotNull>
			<isNotNull prepend=", " property="resolutionDs">
				resolution_descr = #resolutionDs#
			</isNotNull>
			<isNotNull prepend=", " property="sowTitle">
				sow_title = #sowTitle#
			</isNotNull>
			<isNotNull prepend=", " property="sowDs">
				sow_descr = #sowDs#
			</isNotNull>
			<isNotNull prepend=", " property="buyerTermsCond">
				buyer_terms_cond = #buyerTermsCond#
			</isNotNull>
			<isNotNull prepend=", " property="primarySkillCatId">
				primary_skill_category_id = #primarySkillCatId#
			</isNotNull>
			<isNotNull prepend=", " property="serviceDateTypeId">
				service_date_type_id = #serviceDateTypeId#
			</isNotNull>
			<isNotNull prepend=", " property="serviceDate1">
				service_date1 = #serviceDate1#
			</isNotNull>
			<isNotNull prepend=", "
				property="providerServiceConfirmInd">
				provider_service_confirm_ind =
				#providerServiceConfirmInd#
			</isNotNull>
			<isNotNull prepend=", " property="providerInstructions">
				provider_instr = #providerInstructions#
			</isNotNull>
			<isNotNull prepend=", " property="buyerTermsCond">
				buyer_terms_cond = #buyerTermsCond#
			</isNotNull>
			<isNotNull prepend=", " property="logoDocumentId">
				logo_document_id = #logoDocumentId#
			</isNotNull>
			<isNotNull prepend=", " property="spendLimitLabor">
				spend_limit_labor = #spendLimitLabor#
			</isNotNull>
			<isNotNull prepend=", " property="spendLimitParts">
				spend_limit_parts = #spendLimitParts#
			</isNotNull>
			<isNotNull prepend=", " property="retailPrice">
				retail_price = #retailPrice#
			</isNotNull>
			<isNotNull prepend=", " property="partsSupplier">
				parts_supplied_by_id = #partsSupplier#
			</isNotNull>
			<isNotNull prepend=", " property="completedDate">
				completed_date = #completedDate#
			</isNotNull>
			<isNotNull prepend=", " property="lastChngStateId">
				last_status_id = #lastChngStateId#
			</isNotNull>
			<isNotNull prepend=", " property="soTermsCondId">
				buyer_so_terms_cond_id = #soTermsCondId#
			</isNotNull>
			<isNotNull prepend=", " property="buyerSOTermsCondInd">
				buyer_so_terms_cond_ind= #buyerSOTermsCondInd#
			</isNotNull>
			<isNotNull prepend=", " property="buyerTermsCondDate">
				buyer_so_terms_cond_date= #buyerTermsCondDate#
			</isNotNull>
			<isNotEqual property="buyerContactId" compareValue="0">
				<isNotNull prepend=", " property="buyerContactId">
					buyer_contact_id= #buyerContactId#
				</isNotNull>
			</isNotEqual>
		
			<isNotNull prepend=", " property="serviceLiveBuckAgrementId">
				servicelive_bucks_ind = #serviceLiveBuckAgrementId#
			</isNotNull>
			<isNotNull prepend=", " property="serviceLiveBuckAgrementAcceptedDt">
				servicelive_bucks_date_accepted = #serviceLiveBuckAgrementAcceptedDt#
			</isNotNull>
			<isNotNull prepend=", " property="spnId">
				<!--  isEqual property="spnId" compareValue="0">
					spn_id = null
				</isEqual -->
				<isNotEqual property="spnId" compareValue="0">
					spn_id = #spnId#
				</isNotEqual>
			</isNotNull>
			<isNotNull prepend=", " property="shareContactInd">
				share_contact_ind = #shareContactInd#
			</isNotNull>
		</dynamic>
		<!--  Don't include it under isNotNull tag it should have to allow null values when Date type is in fixed mode -->
		, service_time_start = #serviceTimeStart#
		, service_date2 = #serviceDate2# 
		, service_time_end = #serviceTimeEnd#
		, modified_date = null , service_locn_time_zone=(select time_zone from zip_geocode where zip=#serviceLocation.zip#)
		, service_date_timezone_offset = #serviceDateTimezoneOffset#
		WHERE so_id = #soId#
	</update>

	<select id="task.query" parameterClass="task" resultClass="task">
		select so_task_id as taskId, so_id as soId, created_date as
		createDate, modified_date as modifiedDate, modified_by as
		modifiedBy, skill_node_id as skillNodeId,
		service_type_template_id as serviceTypeId, task_name as
		taskName, task_comments as taskComments from so_tasks where
		so_id = #soId#
		order by sort_order
	</select>
	<insert id="contactPhone.insert" parameterClass="contactPhone">
		insert into so_contact_phones (so_id, so_contact_id,
		phone_type_id, so_phone_class_id, phone_no,
		phone_no_ext, created_date, modified_date, modified_by,
		primary_contact_ind ) values (#soId#, #soContactId#,
		#phoneType#, #classId#, #phoneNo#,
		#phoneExt#, #createdDate#, #modifiedDate#, #modifiedBy#,
		#primaryContactInd#)
		<selectKey resultClass="int" > 
		   select LAST_INSERT_ID() as value
		 </selectKey>
	</insert>
	<update id="socontactphone.update" parameterClass="contactPhone">
		update so_contact_phone
		<dynamic prepend="SET">
			<isNotNull prepend=", " property="phoneType">
				phone_type_id = #phoneType#
			</isNotNull>
			<isNotNull prepend=", " property="classId">
				so_phone_class_id = #classId#
			</isNotNull>
			<isNotNull prepend=", " property="phoneNo">
				phone_no = #phoneNo#
			</isNotNull>
			<isNotNull prepend=", " property="phoneExt">
				phone_no_ext = #phoneExt#
			</isNotNull>
			<isNotNull prepend=", " property="primaryContactInd">
				primary_contact_ind = #primaryContactInd#
			</isNotNull>
        	where so_contact_phone_id = #soContactPhoneId#
		</dynamic>
	</update>
	<insert id="socontactlocn.insert" parameterClass="contact">
		insert into so_contact_locn (so_id,so_contact_locn_type_id,
		so_contact_id,created_date, so_locn_id ) values
		(#soId#,#contactTypeId#, #contactId#,#createdDate#, #locationId#
		)
	</insert>

	<insert id="socontact.insert" parameterClass="contact">
		insert into so_contact (so_id, business_name,
		last_name, first_name, mi, suffix, email, so_contact_type_id,
		created_date, modified_date, modified_by, honorific,
		entity_type_id, entity_id) values (#soId#, #businessName#, 
		#lastName#, #firstName#, #mi#, #suffix#, #email#, #contactTypeId#, 
		#createdDate#, #modifiedDate#, #modifiedBy#, #honorific#, 
		#entityTypeId#, #entityId#)
		<selectKey resultClass="int" > 
		   select LAST_INSERT_ID() as value
		 </selectKey>
	</insert>
	
	<update id="socontact.update" parameterClass="contact">
		update so_contact
		<dynamic prepend="SET">
			<isNotNull prepend=", " property="businessName">
				business_name = #businessName#
			</isNotNull>
			<isNotNull prepend=", " property="lastName">
				last_name = #lastName#
			</isNotNull>
			<isNotNull prepend=", " property="firstName">
				first_name = #firstName#
			</isNotNull>
			<isNotNull prepend=", " property="mi">
				mi = #mi#
			</isNotNull>
			<isNotNull prepend=", " property="suffix">
				suffix = #suffix#
			</isNotNull>
			<isNotNull prepend=", " property="email">
				email = #email#
			</isNotNull>
			<isNotNull prepend=", " property="honorific">
				honorific = #honorific#
			</isNotNull>
			<isNotNull prepend=", " property="entity_type_id">
				entity_type_id = #entityTypeId#
			</isNotNull>
			<isNotNull prepend=", " property="entity_id">
				entity_id = #entityId#
			</isNotNull>			
        	where so_contact_id = #contactId#
		</dynamic>
	</update>
	
	<insert id="solocation.insert" parameterClass="solocation">
		insert into so_location (so_id, street_1, street_2,
		city, state_cd, zip, zip4, apt_no, country, locn_name,
		locn_notes, created_date, modified_date, modified_by,
		so_locn_type_id, so_locn_class_id) values (#soId#, #street1#, #street2#, 
		#city#, #state#, #zip#, #zip4#, #aptNo#, #country#, #locnName#, 
		#locnNotes#, #createdDate#, #modifiedDate#, #modifiedBy#, 
		#locnTypeId#, #locnClassId#)
		<selectKey resultClass="int" > 
		   select LAST_INSERT_ID() as value
		 </selectKey>
	</insert>
	
	<insert id="solocationgis.insert" parameterClass="java.lang.Integer">
		insert into so_location_gis (so_locn_id, so_id, so_locn_type_id, latitude, longitude, location, created_date, modified_date)
		select loc.so_locn_id, loc.so_id, loc.so_locn_type_id, geo.latitude, geo.longitude, geomfromwkb(point(geo.latitude, geo.longitude)), now(), now()
		from so_location loc join zip_geocode geo on geo.zip = loc.zip
		where loc.so_locn_id = #soLocnId#
	</insert>
	
	<update id="solocation.update" parameterClass="solocation">
		update so_location 
		<dynamic prepend="SET">
			<isNotNull prepend=", " property="street1">
				street_1 = #street1#
			</isNotNull>
			<isNotNull prepend=", " property="street2">
				street_2 = #street2# 
			</isNotNull>
			<isNotNull prepend=", " property="city">
				city = #city#
			</isNotNull>
			<isNotNull prepend=", " property="state">
				state_cd = #state# 
			</isNotNull>
			<isNotNull prepend=", " property="zip">
				zip = #zip#
			</isNotNull>
			<isNotNull prepend=", " property="zip4"> 
				zip4 = #zip4#
			</isNotNull>
			<isNotNull prepend=", " property="aptNo"> 
				apt_no = #aptNo#
			</isNotNull>
			<isNotNull prepend=", " property="country"> 
				country = #country#
			</isNotNull>
			<isNotNull prepend=", " property="locnName"> 
				locn_name = #locnName#
			</isNotNull>
			<isNotNull prepend=", " property="locnNotes"> 
				locn_notes = #locnNotes#
			</isNotNull>
			<isNotNull prepend=", " property="modifiedBy">
				modified_by = #modifiedBy#
			</isNotNull>
			<isNotNull prepend=", " property="locnTypeId">
				so_locn_type_id = #locnTypeId#
			</isNotNull> 
			<isNotNull prepend=", " property="locnClassId">
				so_locn_class_id = #locnClassId#
			</isNotNull>
		</dynamic>
		where so_locn_id = #locationId#
	</update>

	<insert id="socontactlocation.insert"
		parameterClass="java.util.HashMap">
		insert into so_contact_locn (so_id, so_contact_locn_type_id,
		so_contact_id, so_locn_id, created_date) values (#soId#,
		#ContactLocTypeId#, #contactId#, #locationId#, #createdDate#)

	</insert>
	
	<insert id="socontactlocation.update"
		parameterClass="java.util.HashMap">
		UPDATE so_contact_locn 
		SET  so_contact_locn_type_id = #ContactLocTypeId#,
		so_contact_id = #contactId#, 
		so_locn_id = #locationId#
		WHERE so_id = #so_id#;

	</insert>
	
	<update id="soProviderInstr.update" parameterClass="java.util.HashMap">
		update so_hdr
		set provider_instr = #newinst#
		where so_id = #soID#
	</update>
	

		<insert id="errorInsert" parameterClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.UploadAuditErrorVO">
    insert into so_upload_error(file_id,error_notes,record_id,main_service_category,task_one_name,task_one_category,task_one_sub_category,task_one_skill,task_one_comments,
    task_two_name,task_two_category,task_two_sub_category,task_two_skill,task_two_comments,task_three_name,task_three_category,task_three_sub_category,
    task_three_skill,task_three_comments,part_one_manufacturer,part_one_name,part_one_model,part_one_desc,part_one_quantity,part_one_inbound_carrier,part_one_inbound_tracking_id,part_one_outbound_carrier,part_one_outbound_tracking_id,
    part_two_manufacturer,part_two_name,part_two_model,part_two_desc,part_two_quantity,part_two_inbound_carrier,part_two_inbound_tracking_id,part_two_outbound_carrier,part_two_outbound_tracking_id,
    part_three_manufacturer,part_three_name,part_three_model,part_three_desc,part_three_quantity,part_three_inbound_carrier,part_three_inbound_tracking_id,part_three_outbound_carrier,part_three_outbound_tracking_id,
    part_material,location_type,business_name,first_name,last_name,street1,street2,apt_no,city,zip,email,phone,phone_type,alt_phone,alt_phone_type,fax,so_loc_notes,template_id,
    overview,buyer_tc,special_inst,service_date,service_time,service_end_date,service_end_time,prov_conf_time_ind,attachment1,desc1,attachment2,desc2,attachment3,desc3,
    branding_info,cust_ref_1_value,cust_ref_2_value,cust_ref_3_value,cust_ref_4_value,cust_ref_5_value,cust_ref_6_value,cust_ref_7_value,cust_ref_8_value,cust_ref_9_value,cust_ref_10_value,labor_spend_limit,part_spend_limit,state,service_date_type)       
    values (
      #fileId#,#errorNotes#,#rowId#,#mainServiceCategory#,#taskOneName#,#taskOneCategory#,#taskOneSubCategory#,#taskOneSkill#,#taskOneComments#,
      #taskTwoName#,#taskTwoCategory#,#taskTwoSubCategory#,#taskTwoSkill#,#taskTwoComments#,
      #taskThreeName#,#taskThreeCategory#,#taskThreeSubCategory#,#taskThreeSkill#,#taskThreeComments#,
      #partOneManufacturer#,#partOneName#,#partOneModel#,#partOneDesc#,#partOneQuantity#,#partOneInboundCarrier#,#partOneInboundTrackingId#,#partOneOutboundCarrier#,#partOneOutboundTrackingId#,
      #partTwoManufacturer#,#partTwoName#,#partTwoModel#,#partTwoDesc#,#partTwoQuantity#,#partTwoInboundCarrier#,#partTwoInboundTrackingId#,#partTwoOutboundCarrier#,#partTwoOutboundTrackingId#,
      #partThreeManufacturer#,#partThreeName#,#partThreeModel#,#partThreeDesc#,#partThreeQuantity#,#partThreeInboundCarrier#,#partThreeInboundTrackingId#,#partThreeOutboundCarrier#,#partThreeOutboundTrackingId#,
      #partMaterial#,#locationType#,#businessName#,#firstName#,#lastName#,#street1#,#street2#,#aptNo#,#city#,#zip#,#email#,#phone#,#phoneType#,#altPhone#,#altPhoneType#,
      #fax#,#soLocNotes#,#templateId#,#overview#,#buyerTc#,#specialInst#,#serviceDate#,#serviceTime#,#serviceEndDate#,#serviceEndTime#,#provConfTimeInd#,
      #attachment1#,#desc1#,#attachment2#,#desc2#,#attachment3#,#desc3#,#brandingInfo#,#custRef1Value#,#custRef2Value#,#custRef3Value#,#custRef4Value#,#custRef5Value#,#custRef6Value#,#custRef7Value#,#custRef8Value#,#custRef9Value#,#custRef10Value#,
      #laborSpendLimit#,#partSpendLimit#,#state#,#serviceDateType#)
</insert>

<insert id="successUpload" parameterClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.UploadAuditSuccessVO">
    insert into so_upload_success(file_id,so_id)       
    values (
      #fileId#,#soId#)
 </insert>

	
	
	<insert id="soroutedproviders.insert"
		parameterClass="routedProvider">
		INSERT INTO so_routed_providers (so_id, resource_id,
		provider_resp_id, resp_reason_id, provider_resp_comment,
		provider_resp_date, created_date, modified_date, modified_by
		<isNotNull prepend=", " property="spnId">
			spn_Id
		</isNotNull>
		<isNotNull prepend=", " property="tierId">
			tier_Id
		</isNotNull>
		<isNotNull prepend=", " property="routedDate">
			routed_date
		</isNotNull>
		<isNotNull prepend=", " property="priceModel">
			price_model
		</isNotNull>
		<isNotNull prepend=", " property="totalLaborBid">
			total_labor
		</isNotNull>
		<isNotNull prepend=", " property="partsAndMaterialsBid">
			parts_materials
		</isNotNull>
		<isNotNull prepend=", " property="totalHoursBid">
			total_hours
		</isNotNull>
		, vendor_id) SELECT #soId#, #resourceId#, #providerRespId#,
		#providerRespReasonId#, #providerRespComment#,
		#providerRespDate#, #createdDate#, #modifiedDate#, #modifiedBy#
		<isNotNull prepend=", " property="spnId">
			#spnId#
		</isNotNull>
		<isNotNull prepend=", " property="tierId">
			#tierId#
		</isNotNull>
		<isNotNull prepend=", " property="routedDate">
			#routedDate#
		</isNotNull>
		<isNotNull prepend=", " property="priceModel">
			#priceModel#
		</isNotNull>
		<isNotNull prepend=", " property="totalLaborBid">
			#totalLaborBid#
		</isNotNull>
		<isNotNull prepend=", " property="partsAndMaterialsBid">
			#partsAndMaterialsBid#
		</isNotNull>
		<isNotNull prepend=", " property="totalHoursBid">
			#totalHoursBid#
		</isNotNull>
		, vr.vendor_id FROM vendor_resource vr WHERE vr.resource_id =
		#resourceId# 		
	</insert>
	
	<update id="sowroutedproviders.update"
		parameterClass="routedProvider">
		update so_routed_providers SET provider_resp_id =
		#providerRespId#, resp_reason_id=#providerRespReasonId#,
		provider_resp_comment=#providerRespComment#,
		provider_resp_date=#providerRespDate#, modified_date=#modifiedDate#,
		modified_by=#modifiedBy#
		<isNotNull prepend=", " property="spnId">
			spn_id=#spnId#
		</isNotNull>
		<isNotNull prepend=", " property="tierId">
			tier_id=#tierId#
		</isNotNull>
		<isNotNull prepend=", " property="routedDate">
			routed_date=#routedDate#
		</isNotNull>
		<isNotNull prepend=", " property="priceModel">
			price_model=#priceModel#
		</isNotNull>
		<isNotNull prepend=", " property="totalLaborBid">
			total_labor=#totalLaborBid#
		</isNotNull>
		<isNotNull prepend=", " property="partsAndMaterialsBid">
			parts_materials=#partsAndMaterialsBid#
		</isNotNull>
		<isNotNull prepend=", " property="totalHoursBid">
			total_hours=#totalHoursBid#
		</isNotNull>
		<isNotNull prepend=", " property="emailSent">
			email_sent=#emailSent#
		</isNotNull>
		WHERE so_id=#soId# and resource_id=#resourceId#
	</update>

	
	<update id="error_audit_update" parameterClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.UploadAuditErrorVO">
	update so_upload_audit set no_of_error=(select count(*) from so_upload_error where file_id=#fileId#) where file_id=#fileId#
	</update>
	<update id="success_audit_update" parameterClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.UploadAuditSuccessVO">
	update so_upload_audit set no_of_success=(select count(*) from so_upload_success where file_id=#fileId#) where file_id=#fileId#
	</update>
	
	<delete id="soroutedproviders.delete" parameterClass="so">
		delete from so_routed_providers where so_id =#soId#
		<isNotNull property='routedResources'>
			<iterate property='routedResources'>
				and resource_id!=#routedResources[].resourceId#
			</iterate>
		</isNotNull>
	</delete>

	<!-- SO Object model queries end -->

	<resultMap class="soDetail" id="so.soMap">
		<result property="soId" column="so_id" />
		<result property="buyerSupportContact" column="so_id"
			select="buyersupportcontact.query" />
		<result property="vendorResourceContact" column="so_id"
			select="vendorresourcecontact.query" />
		<result property="buyerDetails" column="buyer_contact_id"
			select="buyerContact.query" />
		<result property="buyerResourceSupportContact" column="buyer_contact_id"	
			select="altBuyerContactInsert.query" />
		<result property="buyer" column="buyer_id"
			select="sobuyer.query" />
		<result property="acceptedProvider"
			column="accepted_resource_id" select="acceptedVendor.query" />

	</resultMap>

	<select id="acceptedVendor.query" resultClass="providerDetail">
		SELECT c.last_name lastName, c.first_name firstName, c.title as
		title, c.phone_no as phoneNo, c.fax_no as faxNo, c.mobile_no as
		mobileNo, c.email as email,c.email_alt as altEmail,c.contact_id as contactId FROM contact c, vendor_resource vr
		where vr.contact_id = c.contact_id and vr.resource_id=#value#
	</select>

	<select id="buyerContact.query" resultClass="buyerDetail">
		SELECT c.last_name lastName, c.first_name firstName, c.title as
		title, c.phone_no as phoneNo, c.fax_no as faxNo, c.mobile_no as
		mobileNo, c.email as email FROM buyer b, contact c where
		b.contact_id = c.contact_id and b.contact_id=#value#
	</select>
	<select id="soId.query" parameterClass="java.lang.String"
		resultMap="so.soMap">
		SELECT * FROM so_hdr s where s.so_id=#serviceOrderId#
	</select>
	<update id="routedProvider.update"
		parameterClass="java.lang.String">
		update so_routed_providers set provider_resp_id=null,
		resp_reason_id=null, provider_resp_comment=null,
		provider_resp_date=null, modified_by=null, service_date1=null,
		service_date2=null, offer_expiration_date=null,
		incr_spend_limit=null, service_time_start=null,
		service_time_end=null where so_id=#soId#
	</update>
	
<!-- 	code change for SLT-2112 -->
	<update id="removeConditional.update"
		parameterClass="java.util.HashMap">
		update 	so_routed_providers 
		set 	provider_resp_id=null,
				resp_reason_id=null, 
				provider_resp_comment=null,
				provider_resp_date=null, 
				modified_by=null, 
				service_date1=null,
				service_date2=null, 
				offer_expiration_date=null,
				incr_spend_limit=null, 
				service_time_start=null,
				service_time_end=null 
		where	so_id=#soId#
		and		provider_resp_id = 2
	</update>
	
	<!-- <update id="withdrawConditionalAcceptance.update"
		parameterClass="routedProvider">
		update so_routed_providers set provider_resp_id=null,
		resp_reason_id=null, provider_resp_comment=null,
		provider_resp_date=null, service_date1=null, service_date2=null,
		offer_expiration_date=null, incr_spend_limit=null,service_time_start=null,service_time_end=null
		where so_id=#soId# and resource_id=#resourceId# and
		provider_resp_id=#providerRespId#
	</update> -->
	
	<update id="withdrawConditionalAcceptance.update"
		parameterClass="routedProvider">
		update so_routed_providers set provider_resp_id='6',
		resp_reason_id=null
		where so_id=#soId# and resource_id=#resourceId# and
		provider_resp_id=#providerRespId#
	</update>

	<update id="withdrawGroupedConditionalAcceptance.update"
		parameterClass="routedProvider">
		update so_routed_providers set provider_resp_id=null,
		resp_reason_id=null, provider_resp_comment=null,
		provider_resp_date=null, service_date1=null, service_date2=null,
		offer_expiration_date=null, incr_spend_limit=null,service_time_start=null,service_time_end=null
		where so_id in 
		<iterate property="soIds" open="(" close=")"
			conjunction=",">
			#soIds[]#
		</iterate> 
		and resource_id=#resourceId# and
		provider_resp_id=#providerRespId#
	</update>

	<resultMap class="serviceOrderStatusVO"
		id="statusSubstatus.resultMap">
		<result property="serviceOrderSubStatusVO" column="wf_state_id"
			select="subStatus.query" />
		<result property="statusName" column="wf_state" />
		<result property="statusId" column="wf_state_id" />
	</resultMap>
	<resultMap class="serviceOrderStatusVO"
		id="statusProblemSubstatus.resultMap">
		<result property="serviceOrderSubStatusVO" column="wf_state_id"
			select="subProblemStatus.query" />
		<result property="statusName" column="wf_state" />
		<result property="statusId" column="wf_state_id" />
	</resultMap>
	
	<select id="statusProblemSubstatus.query"
		parameterClass="serviceOrderStatusInput"
		resultMap="statusProblemSubstatus.resultMap">
		Select * from wf_states where wf_state_id in
		<iterate property="statusIds" open="(" close=")"
			conjunction=",">
			#statusIds[]#
		</iterate>
	</select>
	<select id="statusSubstatus.query"
		parameterClass="serviceOrderStatusInput"
		resultMap="statusSubstatus.resultMap">
		Select * from wf_states where wf_state_id in
		<iterate property="statusIds" open="(" close=")"
			conjunction=",">
			#statusIds[]#
		</iterate>
	</select>

	<select id="subStatus.query"
		resultClass="serviceOrderSubStatusVO">
		select lo_substatus.so_substatus_id as subStatusId,
		lo_substatus.descr as subStatusName, lo_substatus.sort_order as
		sortOrder from lu_so_substatus lo_substatus, so_wf_substatus
		wf_substatus where
		lo_substatus.so_substatus_id=wf_substatus.so_substatus_id and
		wf_substatus.wf_state_id = #statusId# order by
		lo_substatus.sort_order
	</select>
	<select id= "getAllSoStatus.query" resultClass = "serviceOrderStatusVO">
	       SELECT lws.wf_state_id AS statusId,lws.descr AS statusName FROM lu_wf_states_alias lws WHERE lws.role_id=3
	</select>
	<select id="subProblemStatus.query"
		resultClass="serviceOrderSubStatusVO">
		select lo_substatus.so_substatus_id as subStatusId,
		lo_substatus.descr as subStatusName, lo_substatus.sort_order as
		sortOrder from lu_so_substatus lo_substatus, so_wf_substatus
		wf_substatus where
		lo_substatus.so_substatus_id=wf_substatus.so_substatus_id and
		wf_substatus.wf_state_id = #statusId# order by
		lo_substatus.descr
	</select>

	<!-- Update SO Sub Status -->
	<update id="so.updateSubStatus"
		parameterClass="java.util.HashMap">
		UPDATE so_hdr SET so_substatus_id = #subStatusId# WHERE so_id =
		#soId#
	</update>
	
	<update id="so.updateCustomReference"
		parameterClass="java.util.HashMap">
		UPDATE so_custom_reference sc 
       	JOIN	 buyer_reference_type bt 
         	ON bt.buyer_ref_type_id = sc.buyer_ref_type_id 
		SET    sc.buyer_ref_value = #referenceValue# 
		WHERE  sc.so_id = #soId# 
      	 AND 	bt.ref_type = #referenceType# 
	</update>

	<update id="so.createConditionalOffer"
		parameterClass="routedProvider">
		UPDATE so_routed_providers SET provider_resp_id =
		#providerRespId#, resp_reason_id = #providerRespReasonId#,
		provider_resp_comment = #providerRespComment#,
		provider_resp_date = #providerRespDate#, modified_date =
		#modifiedDate#, modified_by = #modifiedBy#, service_date1 =
		#conditionalChangeDate1#, service_date2 =
		#conditionalChangeDate2#, offer_expiration_date =
		#conditionalExpirationDate#, incr_spend_limit =
		#conditionalSpendLimit#, service_time_start =
		#conditionalStartTime#, service_time_end = #conditionalEndTime#,
		total_labor = #totalLaborBid#, parts_materials = #partsAndMaterialsBid#,
		total_hours = #totalHoursBid#
		<dynamic prepend="WHERE">
			<isNotNull property="soId" prepend="AND">
				so_id = #soId#
			</isNotNull>
			<isNotNull property="resourceId" prepend="AND">
				resource_id = #resourceId#
			</isNotNull>
			<isNotNull property="vendorId" prepend="AND">
				vendor_id = #vendorId#
			</isNotNull>
		</dynamic>
	</update>

	<update id="so.updateSODateTime" parameterClass="rescheduleData">
		UPDATE so_hdr
		<dynamic prepend="SET">
			<isNotNull prepend=", " property="newDateStart">
				resched_service_date1 = #newDateStart#
			</isNotNull>
			<isNotEmpty prepend=", " property="newDateEnd">
				resched_service_date2 = #newDateEnd#
			</isNotEmpty>
			<isNotNull prepend=", " property="newTimeStart">
				resched_service_time_start = #newTimeStart#
			</isNotNull>
			<isNotEmpty prepend=", " property="newTimeEnd">
				resched_service_time_end = #newTimeEnd#
			</isNotEmpty>
			<isNotNull prepend=", " property="scheduleType">
				resched_date_type_id = #scheduleType#
			</isNotNull>
		</dynamic>
		WHERE so_id = #soId#
	</update>

	<update id="so.updateSODateTimeFinal"
		parameterClass="rescheduleData">
		UPDATE so_hdr SET service_date1 = #oldDateStart#, service_date2
		= #oldDateEnd#, service_time_start = #oldTimeStart#,
		service_time_end = #oldTimeEnd#, service_date_type_id = #scheduleType#,
		resched_service_date1 = null, resched_service_date2 = null, 
		resched_service_time_start = null,
		resched_service_time_end = null, resched_date_type_id = null
		<isNotNull prepend=", " property="lastStatusChange">
			last_status_chg = #lastStatusChange#
		</isNotNull>
		<isNotNull prepend=", " property="lastWfStateId">
			last_status_id = #lastWfStateId#
		</isNotNull>
		<isNotNull prepend=", " property="wfStateId">
			wf_state_id = #wfStateId#
		</isNotNull>
		, so_substatus_id = #wfSubStateId# WHERE so_id = #soId#
	</update>

	<select id="so.querySODateTimeRequest"
		parameterClass="java.lang.String" resultClass="rescheduleData">

		SELECT s.so_id AS soId, 
		s.wf_state_id AS wfStateId,
		s.resched_service_date1 AS newDateStart, 
		s.resched_service_date2 AS newDateEnd, 
		s.resched_service_time_start AS newTimeStart,
		s.resched_service_time_end AS newTimeEnd, 
		s.resched_date_type_id AS scheduleType, 
		s.service_date1 AS oldDateStart, 
		s.service_date2 AS oldDateEnd,
		s.service_time_start AS oldTimeStart, s.service_time_end AS oldTimeEnd, 
		(
		select sl.role_id from so_logging sl
		where action_id = 36 <!--  action_id 36 is the Reschedule SO action from lu_action_master-->
		and sl.so_id = s.so_id 
		order by created_date desc limit 1
		) AS userRole
		FROM so_hdr s
		WHERE s.so_id = #soId#
	</select>
	
	<select id ="so.assignmentType" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT assignment_type FROM so_hdr WHERE so_id=#soId#
	</select>

	<update id="so.updateCancelReschedule"
		parameterClass="java.lang.String">
		UPDATE so_hdr SET resched_service_date1 = null,
		resched_service_date2 = null, resched_service_time_start = null,
		resched_service_time_end = null, resched_date_type_id = null  WHERE so_id = #soId#
	</update>

	<delete id="so.deleteContactPhoneBySoId"
		parameterClass="java.lang.String">
		DELETE FROM so_contact_phones WHERE so_id = #soId#
	</delete>
	<delete id="so.deleteContactPhoneByContactId"
		parameterClass="java.lang.Integer">
		DELETE FROM so_contact_phones WHERE so_contact_id = #soContactId#
	</delete>

	<delete id="so.deleteSOById" parameterClass="java.lang.String">
		DELETE FROM so_hdr WHERE so_id = #soId#
	</delete>

	<delete id="so.deleteLogEntry" parameterClass="java.lang.String">
		DELETE FROM so_logging WHERE so_id = #soId#
	</delete>

	<select id="so.checkconditionaloffer"
		parameterClass="routedProvider" resultClass="java.lang.Integer">
		select provider_resp_id from so_routed_providers
		<dynamic prepend="where">
			<isNotNull prepend="AND" property="soId">
				so_id=#soId#
			</isNotNull>

			<isNotNull prepend="AND" property="resourceId">
				resource_id=#resourceId#
			</isNotNull>
			<!-- provider_resp_id = 4 is Withdraw counter offer flag -->
			<isNotNull prepend="AND" property="soId">
				provider_resp_id IS NOT NULL And provider_resp_id != 4
			</isNotNull>
		</dynamic>

	</select>

	<update id="so.updateDocSizeTotal" parameterClass="so">
		UPDATE so_hdr SET doc_size_total = #docSizeTotal# WHERE so_id =
		#soId#
	</update>

	<update id="so.updateLockEditMode" parameterClass="so">
		UPDATE so_hdr a
		   SET a.lock_edit_ind = #loctEditInd#, a.modified_date = a.modified_date
         WHERE a.so_id = #soId#
	</update>

	<!-- Update SO logodocumentId	-->
	<update id="so.updateLogoDocument" parameterClass="so">
		UPDATE so_hdr SET logo_document_id = #logoDocumentId# WHERE
		so_id=#soId#
	</update>


	<update id="so.releaseSO" parameterClass="so">
		UPDATE so_hdr SET accepted_resource_id = null,
		accepted_vendor_id = null, resched_service_date1 = null,
		resched_service_date2 = null, resched_service_time_start = null,
		resched_service_time_end = null, resched_date_type_id = null,
		accepted_date = null,
		act_arrival_start_date = null, act_arrival_end_date = null,
		provider_terms_cond_resp = null, provider_terms_cond_date =
		null, wf_state_id = #wfStateId#, expired_date=#expiredDate#,
		routed_date=#routedDate# WHERE so_id = #soId#
	</update>

	<update id="so.releaseSOroutedProvider"
		parameterClass="routedProvider">
		UPDATE so_routed_providers SET provider_resp_id =
		#providerRespId#, resp_reason_id = #providerRespReasonId#,
		provider_resp_comment = #providerRespComment#,
		provider_resp_date = #providerRespDate#
		<dynamic prepend="WHERE">
			<isNotNull property="soId" prepend="AND">
				so_id = #soId#
			</isNotNull>
			<isNotNull property="resourceId" prepend="AND">
				resource_id = #resourceId#
			</isNotNull>
		</dynamic>
	</update>
	<delete id="so.deleteCustomReference"
		parameterClass="java.lang.String">
		delete from so_custom_reference where so_id= #soId#
	</delete>
	<delete id="soRefDeleteByTypeID.delete" parameterClass="customRef">
		delete from so_custom_reference
			where so_id = #soId#
				and buyer_ref_type_id= #refTypeId#
	</delete>
	<delete id="so.deleteContactLocnBySoId"
		parameterClass="java.lang.String">
		delete from so_contact_locn where so_id= #soId#
	</delete>
	<delete id="so.deleteLocationBySoId"
		parameterClass="java.lang.String">
		delete from so_location where so_id= #soId# 
	</delete>
	<delete id="so.deleteContactBySoId"
		parameterClass="java.lang.String">
		delete from so_contact where so_id= #soId#
	</delete>
	<delete id="so.deleteTasksBySoId"
		parameterClass="java.lang.String">
		delete from so_tasks where so_id=#soId#
	</delete>
	<delete id="so.deletePartsSoId" parameterClass="java.lang.String">
		delete from so_parts where so_id=#soId#
	</delete>
	<delete id="so.deleteNotesBySoId"
		parameterClass="java.lang.String">
		delete from so_notes where so_id=#soId#
	</delete>
	<delete id="so.deleteSurveyResponseBySoId"
		parameterClass="java.lang.String">
		delete from survey_response_so where so_id=#soId#
	</delete>
	<delete id="so.deleteRoutedProviderBySoId"
		parameterClass="java.lang.String">
		delete from so_routed_providers where so_id=#soId#
	</delete>
	<delete id="so.deleteEventsBySoId"
		parameterClass="java.lang.String">
		delete from so_events where so_id=#soId#
	</delete>
	<delete id="so.deleteDocumentsBySoId"
		parameterClass="java.lang.String">
		delete from so_document where so_id=#soId#
	</delete>
	<delete id="so.deleteSoPrice"
		parameterClass="java.lang.String">
		delete from so_price where so_id= #soId# 
	</delete>

	<update id="so.deleteServiceOrder" parameterClass="java.util.Map">
		UPDATE so_hdr 
		SET wf_state_id = #status#,
		deleted_date = #deletedDate#,
		so_group_id = null,
		so_orig_group_id = #groupId#,
		so_substatus_id = #subStatus#
		WHERE
		so_id = #soId#		
	</update>

	<select id="so.selectContactInfo" parameterClass="java.lang.String" resultClass="soContact">
		SELECT 	so_contact_id AS soContactId, 
				so_locn_id AS soLocationId,
				so_id AS soId
		FROM 	so_contact_locn
		WHERE	so_id = #soId#
		AND 	so_contact_locn_type_id = 50
	</select>
	
	<delete id="so.deleteOldServiceOrders" parameterClass="java.lang.Integer">
		DELETE FROM so_hdr 
		WHERE 		created_date <![CDATA[ < ]]> date_format((CURRENT_DATE()-#numberDaysOld#), '%Y-%m-%d %T') 
		AND  		wf_state_id is null
	</delete>
	
	<delete id="so.deleteSOContactLocation" parameterClass="soContact">
		DELETE FROM 	so_contact_locn
		WHERE			so_id = #soId#
		AND				so_contact_locn_type_id = 50
		AND				so_contact_id = #soContactId#
		AND				so_locn_id = #soLocationId# 
	</delete>
	
	<delete id="so.deleteSOContact" parameterClass="soContact">
		DELETE FROM 	so_contact 
		WHERE 			so_id = #soId# 
		AND 			so_contact_id = #soContactId#
	</delete>
	
	<delete id="so.deleteSOContactPhone" parameterClass="soContact">
		DELETE FROM 	so_contact_phones 
		WHERE 			so_id = #soId# 
		AND 			so_contact_id = #soContactId#
	</delete>
	<delete id="so.deleteSOLocation" parameterClass="soContact">
		DELETE FROM 	so_location 
		WHERE 			so_id = #soId# 
		AND 			so_locn_id = #soLocationId#
	</delete>

	<select id="count.primarycategory" parameterClass="java.lang.Integer" resultClass="java.lang.Integer">
		select count(*) from lu_primary_industry where primary_industry_id=#mainCategoryId#
	</select>
	
	<select id="count.uniqueSo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select so_id from so_hdr where buyer_id =#buyerId# and buyer_so_id=#soUniqueId#
	</select>
	
	<select id="user.logo" parameterClass="java.lang.Integer" resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.UploadFileVO">
		select doc.document_id as documentId, doc.file_name as name_of_file
			from document doc, buyer_document bdoc
			where bdoc.buyer_id = #buyerId#
				and bdoc.doc_category_id = 1
				and doc.document_id  = bdoc.document_id
			limit 1
	</select>
	
	<select id="running.history" parameterClass="java.lang.Integer" resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.RunningHistoryVO">
		select
			audit.file_id as fileId,
			audit.name_of_file as fileName,
			audit.created_date as createdDate,
			if (audit.injected_flag is null, 'Processing', (if(audit.no_of_success is null,0,audit.no_of_success)+if(audit.no_of_error is null,0,audit.no_of_error))) as successNo,
			if (audit.injected_flag is null, 'Processing', audit.no_of_error) as errorNo,
			br.user_name as buyerName
		from
			so_upload_audit audit, (select resource_id, user_name from buyer_resource) br
		where
			audit.buyer_resource_id = #buyerResourceId# and br.resource_id = audit.buyer_resource_id
			and ( audit.created_date + interval 45 day)>now()
            order by audit.created_date desc
	</select>
	
	<select id="soRoutedResources.queryList" parameterClass="java.util.Map" resultClass="contact">
		select srp.resource_id as resourceId,ct.email,ct.first_name as firstName,last_name as lastName from so_routed_providers srp,contact ct, so_hdr sh ,vendor_resource vr where
		srp.resource_id = vr.resource_id and ct.contact_id = vr.contact_id and vr.vendor_id = #companyId# and sh.so_id = srp.so_id and sh.so_id=#soId# and srp.resource_id != sh.accepted_resource_id
	</select>
	
	<select id="soRoutedResourceIds.queryList" parameterClass="java.lang.String" resultClass="routedProResponseVO">
		select srp.resource_id as resourceId,
		       srp.provider_resp_id  as responseId,
		       srp.resp_reason_id as reasonId,
		       srp.provider_resp_date as responseDate,
		       srp.so_id  as soId
		from so_routed_providers srp where srp.so_id=#soId#
	</select>
	
	<select id="select.soRoutedProvider.routedDate" parameterClass="java.util.Map" resultClass="java.util.Date">
	     select srp.routed_date as routedDate
		       from so_routed_providers srp 
		       where srp.so_id=#soId# 
		       and srp.resource_id = #resourceId#
	</select>
	
	<select id="select.soRoutedProvider.routedDateForFirmAccept" parameterClass="java.util.Map" resultClass="java.util.Date">
	     select MAX(srp.routed_date) as routedDate
		       from so_routed_providers srp 
		       where srp.so_id=#soId# 
		       and srp.vendor_id = #vendorId#
	</select>
	
	<select id="count.serviceorder" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(*) from so_hdr where so_id = #so_id#
	</select>
	
	<select id="query.acceptedResourceId" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select accepted_resource_id from so_hdr where so_id = #so_id#
	</select>
	
	
	<parameterMap id="ifindValidServiceOrders-param" class="java.util.Map">
        <parameter property="so_id"/>
		<parameter property="accepted_resource_id"/>
    </parameterMap>
	<select id="query.findValidServiceOrders" parameterMap="ifindValidServiceOrders-param" resultClass="java.lang.String">
		select so_id from so_hdr where so_id like ? and accepted_resource_id = ?
	</select>
	
	<parameterMap id="buyerRefValue-param" class="java.util.Map">
        <parameter property="buyer_ref_value"/>
		<parameter property="buyer_id"/>
    </parameterMap>
	<select id="query.findByReference" parameterMap="buyerRefValue-param" resultMap="so.resultsmap">
		select so.*
		from so_hdr so, so_custom_reference soref, buyer_reference_type bref
		where so.so_id = soref.so_id
			and soref.buyer_ref_type_id = bref.buyer_ref_type_id
			and soref.buyer_ref_value = ?
			and bref.buyer_id = ?
			and bref.so_identifier = 1
		order by so.created_date desc
		limit 1	
	</select>
	<parameterMap id="buyerRefTypeValue-param" class="java.util.Map">
        <parameter property="buyer_ref_value"/>
		<parameter property="ref_type"/>
		<parameter property="buyer_id"/>
    </parameterMap>
	<select id="query.findByReferenceValue" parameterMap="buyerRefTypeValue-param" resultClass="java.lang.String">
		select so_id as soID
		from vw_so_by_reference_type_value
		where ref_type = ? 
		and buyer_ref_value = ? 
		and buyer_id = ?
	</select>
	
	<update id="soCancellationFee.update" parameterClass="java.util.Map">
		UPDATE so_hdr SET cancellation_fee = #cancellationFee# WHERE so_id = #soId#
	</update>
	
	<delete id="soContactLocation.delete" parameterClass="java.util.HashMap">
		delete from so_contact_locn where so_contact_id = #contactId# and so_locn_id = #locationId# and so_id = #soID#
	</delete>
	
	<delete id="soPartPickupLocation.delete" parameterClass="java.util.HashMap">
		delete from so_location where so_locn_id = #locationId# and so_id = #soID#
	</delete>
	
	<delete id="soPartPickupPhone.delete" parameterClass="java.util.HashMap">
		delete from  so_contact_phones where so_contact_id = #contactId# and so_id = #soID#
	</delete>
	
	<delete id="soPartPickupContact.delete" parameterClass="java.util.HashMap">
		delete from  so_contact where so_contact_id = #contactId# and so_id = #soID#
	</delete>
	
	<delete id="soRoutedProvidersNoResourceCheck.delete" parameterClass="java.lang.String">
		delete from so_routed_providers where so_id = #soId#
	</delete>
	
	<insert id="insertfiletodb" parameterClass="uploadAuditVO">
    insert into so_upload_audit(buyer_id,buyer_first_name,buyer_second_name,name_of_file,no_of_so,file_content,buyer_resource_id,buyer_resource_contact_id,injected_flag)       
    values (
      #buyerId#, #firstName#,#lastName#,#uploadFileName#,#soId#,#fileContent#,#buyerResourceId#,#buyerResContactId#,#injectedFlag#)
    <selectKey resultClass="int" > 
			select LAST_INSERT_ID() as value
	</selectKey>
  </insert>
  
  <select id="getvalidzip" parameterClass="java.lang.String" resultClass="java.lang.Integer">   select count(zip) from zip_geocode where zip=#zip# </select>
  
  <select id="getstateforzip" parameterClass="java.lang.String" resultClass="java.lang.String">   select state_name from lu_state_cds
   where state_cd=(select state_cd from zip_geocode where zip=#zip#)</select>
  
   <select id="gettheskilltree"  resultClass="java.lang.String">
   select node_name from skill_tree where level=1
  </select>
  
  <select id="getAllEntriesFromAudit"  resultClass="java.lang.String">
   select file_content from so_upload_audit where status=0
  </select>
  
   <select id="getFileForCreateSo"   resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.UploadFileVO">
   		select sua.file_id as file_id, 
   		sua.buyer_id as buyer_id,
   		sua.buyer_resource_id as buyer_resource_id,
   		sua.buyer_resource_contact_id as buyer_resource_contact_id,
   		sua.file_content as file_content,
   		sua.name_of_file as name_of_file,
   		br.user_name as creatorUserName ,
   		c.first_name as buyer_first_name,
   		c.last_name as buyer_second_name 
   		from so_upload_audit sua, buyer_resource br,contact c
   		where 
   		sua.buyer_resource_id = br.resource_id 
   		and br.contact_id = c.contact_id
   		and injected_flag is null   
  </select>  
	
	<select id="getSkillMap"  resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.ServiceTypeTemplateVO">
   select node_id,descr,service_type_template_id from lu_service_type_template
  </select>      
	
	
   <select id="getSubCategoryMap"   resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.SkillTreeVO" >
 select node_name,node_id from skill_tree where level in(2,3) 
  </select>	
  
	
   <select id="getMainCategoryMap"  resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.SkillTreeVO" >
   select node_name,node_id from skill_tree where level=1 and parent_node=0
  </select>
  
  <select id="getShippingInfo"  resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.LookupShippngCarrierVO" >
   select shipping_carrier_id,descr from lu_shipping_carrier 
  </select>
  
	 <select id="getUserEmail"  resultClass="java.lang.String" parameterClass="java.lang.Integer" >
   select email from contact where contact_id=(select contact_id from buyer where buyer_id=#buyerId#)
  </select>
  
  <select id="getBuyerReferences" parameterClass="java.lang.Integer" resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.BuyerRefTypeVO">
	select buyer_ref_type_id, buyer_id, ref_type
	from buyer_reference_type
	where buyer_id = #buyerId# and active_ind = 1
  </select>
  
  <select id="getPartsSuppliedBy"  resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.LookUpPartsSuppliedVO"  >
   select parts_supplied_by_id,descr from lu_so_parts_supplied_by
  </select>
  <select id="getAllPhoneTypes"  resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.PhoneTypeVO"  >
   select phone_type_id,descr from lu_phone_type
  </select>
  <select id="getPhoneClass"  resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.PhoneClassVO"  >
   select so_phone_class_id,descr from lu_so_phone_class
  </select>
  <select id="getBuyerContactId"  resultClass="java.lang.Integer" parameterClass="java.lang.Integer" >
   select contact_id from buyer where buyer_id=#buyerId#
  </select>
  
  <select id="getDocumentLookUp"  resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.OrgDocumentVO" >
   select document_id,descr from document
  </select>
  
   <select id="getLocationLookUp"  resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.LocationClassVO" >
   select so_locn_class_id,descr from lu_so_location_class
  </select>
  <!--  <select id="selectDocId" parameterClass="com.newco.marketplace.dto.vo.DocumentVO" resultClass="java.lang.Integer" >
   select document_id from document where descr=#description# and title=#title#
  </select>-->
  
  <select id="selectDocId" parameterClass="com.newco.marketplace.dto.vo.DocumentVO" resultClass="java.lang.Integer" >
	 	  	select doc.document_id from document doc, buyer_document b_doc where doc.document_id=b_doc.document_id and b_doc.buyer_id=#buyerId# and doc.title=#title#
 </select>
 
  <select id="selectLogoId" parameterClass="com.newco.marketplace.dto.vo.DocumentVO" resultClass="java.lang.Integer" >
	 	  	select doc.document_id from document doc, buyer_document b_doc where doc.document_id=b_doc.document_id and b_doc.buyer_id=#buyerId# and doc.title=#title# and doc.doc_category_id=1
 </select>
 	 	
 <select id="docIdVal" parameterClass="java.lang.Integer" resultClass="com.newco.marketplace.dto.vo.DocumentVO" >
	 	  	select doc.document_id as documentId , doc.title as title from document doc, buyer_document b_doc where doc.document_id=b_doc.document_id and b_doc.buyer_id=#buyerId#
 </select>
  
 <select id="logoIdVal" parameterClass="java.lang.Integer" resultClass="com.newco.marketplace.dto.vo.DocumentVO" >
 	 	  	select doc.document_id as documentId , doc.title as title from document doc, buyer_document b_doc where doc.document_id=b_doc.document_id and b_doc.buyer_id=#buyerId# and doc.doc_category_id=1
 </select>
 	 	
  <update id="markFileAsRead" parameterClass="java.lang.String">
		update so_upload_audit set injected_flag=1 where
		name_of_file=#fileName#
	</update>
	
	<select id="getUploadFilesAtEsb"   resultClass="com.newco.marketplace.dto.vo.buyerUploadScheduler.UploadFileVO">
   		select sua.file_id as file_id, 
   		sua.buyer_id as buyer_id,
   		sua.buyer_resource_id as buyer_resource_id,
   		sua.buyer_resource_contact_id as buyer_resource_contact_id,
   		sua.file_content as file_content,
   		sua.name_of_file as name_of_file
   		from so_upload_audit sua
   		where 
   		sua.file_in_esb = 1
  </select>
	
	<update id="so.auditSentToEsb_update" parameterClass="java.lang.Integer">
		update so_upload_audit set file_in_esb=1 where
		file_id=#fileId#
	</update>
	
	<update id="so.auditRetrievedFromEsb_update" parameterClass="java.lang.Integer">
		update so_upload_audit set file_in_esb=0 where
		file_id=#fileId#
	</update>
	
	<insert id="insertDocDetails" parameterClass="com.newco.marketplace.dto.vo.DocumentVO">
    insert into so_document(document_id,so_id) values(#documentId#,#soId#)  
    </insert>
    
    <update id="so.updateLaborFinalPrice" parameterClass="java.util.HashMap">
		update so_hdr set final_price_labor = #cancellationFee# WHERE so_id=#soID#
	</update>
    
    <!-- To fetch error records from SO UPLOAD ERROR TABLE -->

	<select id="so.getUploadErrorRecords" parameterClass="java.lang.Integer" resultMap="uploadError.resultMap">
  		select * from so_upload_error where file_id = #fileId#
	</select>
	
	<insert id="soprice.insert" parameterClass="com.newco.marketplace.dto.vo.price.ServiceOrderPriceVO">
    	insert into so_price(so_id, original_spend_limit_labor, original_spend_limit_parts,
    	                     discounted_spend_limit_labor, discounted_spend_limit_parts, created_date) 
    	values(#soId#, #origSpendLimitLabor#, #origSpendLimitParts#, 
    	       #discountedSpendLimitLabor#, #discountedSpendLimitParts#, #createdDate#)  
    </insert>
	<!--  Inserting market maker comments for a provider on a particular SO on response status page -->
	<insert id="mktmakercomments.insert" parameterClass="marketMakerProviderResponse">
    		Insert into mkt_maker_providers_response (so_id,resource_id,call_status_id,mkt_maker_comments,modified_by_user,modified_date_time)
			values
			( #soId#,#resourceId#,#callStatusId#,#mktMakerComments#,#modifyingAdmin#,#modifiedDateTime#)
    </insert>
    
    <update id="soSowDs.update" parameterClass="java.util.HashMap">
		update so_hdr
		set sow_descr = #newDs#
		where so_id = #soId#
	</update>
	
	<update id="soSowTitle.update" parameterClass="java.util.HashMap">
		update so_hdr
		set sow_title = #newTitle#
		where so_id = #soId#
	</update>
		
	<update id="soFinalPrice.update" parameterClass="so">
		update so_hdr 
		set final_price_labor = #laborFinalPrice# , final_price_parts = #partsFinalPrice#
		WHERE so_id = #soId#
	</update>
	
	<!-- For Associated Incidents -->
	<procedure id="so.queryAssociatedIncidents.storeproc" resultClass="com.newco.marketplace.dto.vo.incident.AssociatedIncidentVO" parameterClass="java.lang.String">
        {call sp_IncidentTracker(#soId#)}
    </procedure>
	
	<select id="customRefSoIdList" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
				SELECT DISTINCT soc.so_id as soId
					FROM  buyer_reference_type bref 
    				JOIN so_custom_reference soc ON soc.buyer_ref_type_id = bref.buyer_ref_type_id
    				WHERE bref.ref_type=#customRefType#  and soc.buyer_ref_value = #customRefValue#
	</select>
	
    <!-- For Search API -->
	<select id="searchSO" parameterClass="com.newco.marketplace.dto.vo.serviceorder.SearchRequestVO" resultClass="soSearchResult" >
 	 	  SELECT DISTINCT s.so_id as soId, 
		s.created_date as createdDate, 
		s.routed_date as routedDate,
		s.accepted_date as acceptedDate,
		s.completed_date as completedDate,
		s.closed_date as closedDate,
		s.activated_date as activatedDate,
		wf_alias.descr as status,
		lu_sub.descr as subStatus
		from so_hdr s
		join lu_wf_states_alias wf_alias on s.wf_state_id = wf_alias.wf_state_id and wf_alias.role_id = #roleId#
		left outer join lu_so_substatus lu_sub on s.so_substatus_id=lu_sub.so_substatus_id  
		<dynamic>
		<isNotNull property='serviceLocZipcode'>
			join so_contact_locn scl on s.so_id = scl.so_id and scl.so_contact_locn_type_id = 10
			join so_location sl on scl.so_id = sl.so_id and scl.so_locn_id = sl.so_locn_id and sl.zip = #serviceLocZipcode#
		</isNotNull>
		<isNotNull property='serviceLocPhone'>
		join so_contact sc on s.so_id = sc.so_id and sc.so_contact_type_id in (10,20)
		join so_contact_phones scp on sc.so_id = scp.so_id and sc.so_contact_id = scp.so_contact_id and scp.phone_no = #serviceLocPhone#
		</isNotNull>
		<isNotNull property='customerName'>
		<isNull property='serviceLocPhone'>
		join so_contact sc on s.so_id = sc.so_id and sc.so_contact_type_id in (10,20)
		</isNull>
		<isNull property='serviceLocZipcode'>
		join so_contact_locn scl on s.so_id = scl.so_id
		</isNull>
		and scl.so_contact_locn_type_id IN (10,20) and scl.so_contact_id = sc.so_contact_id
		and ( lower(sc.first_name) like concat(#customerName#,'%') or
		lower(sc.last_name) like concat(#customerName#,'%') )			
		</isNotNull>
		<isNotNull property='customRefSoIds'>
			and s.so_id in
			<iterate property="customRefSoIds" open="("	close=")" conjunction=", ">
				#customRefSoIds[]#
			</iterate>
		</isNotNull>
		</dynamic>
		and s.wf_state_id is not null and s.buyer_id=#buyerId# order by s.created_date desc
		<isNotNull property='maxresults'>
		 limit #maxresults#
		</isNotNull> 
 	</select>
 	 	
 	<select id="searchSOPaged" parameterClass="com.newco.marketplace.dto.vo.serviceorder.SearchRequestVO" resultClass="soSearchResult" >
 	 	  SELECT DISTINCT s.so_id as soId, 
		s.created_date as createdDate, 
		s.routed_date as routedDate,
		s.accepted_date as acceptedDate,
		s.completed_date as completedDate,
		s.closed_date as closedDate,
		s.activated_date as activatedDate,
		s.sow_title as sowTitle,
		s.price_model as priceModel,
		wf_alias.descr as status,
		lu_sub.descr as subStatus
		from so_hdr s
		join lu_wf_states_alias wf_alias on s.wf_state_id = wf_alias.wf_state_id and wf_alias.role_id = #roleId# 
		<isNotNull property='status' prepend=" and wf_alias.descr in ">		 		
		<iterate property="status" open="("
			close=")" conjunction=", ">
			#status[]#
		</iterate>
		</isNotNull>
		<isNotNull property='buyerId'>
			<isNotEqual property="buyerId" compareValue="0">
				and s.wf_state_id is not null and s.buyer_id=#buyerId# 
			</isNotEqual>
		</isNotNull>
		<isNotNull property='customRefSoIds'>
			and s.so_id in
			<iterate property="customRefSoIds" open="("	close=")" conjunction=", ">
				#customRefSoIds[]#
			</iterate>
		</isNotNull>
		<isNotNull property='createStartDate'>
			<isNotNull property='createEndDate'>
			and   #createStartDate# &lt;=s.created_date and s.created_date&lt;=#createEndDate# 
			</isNotNull>
			<isNull property='createEndDate'>
			and   s.created_date&gt;=#createStartDate# 
			</isNull>
		</isNotNull>
		<isNotNull property='createEndDate'>
			<isNull property='createStartDate'>
			and   s.created_date&lt;=#createEndDate# 
			</isNull>
		</isNotNull>
		left outer join lu_so_substatus lu_sub on s.so_substatus_id=lu_sub.so_substatus_id
		LEFT OUTER JOIN so_routed_providers srp ON s.so_id = srp.so_id AND (srp.provider_resp_id IS NULL OR srp.provider_resp_id != 3) AND s.wf_state_id=110
		<dynamic>
		<isNotNull property='serviceLocZipcode'>
			join so_contact_locn scl on s.so_id = scl.so_id and scl.so_contact_locn_type_id = 10
			join so_location sl on scl.so_id = sl.so_id and scl.so_locn_id = sl.so_locn_id and sl.zip = #serviceLocZipcode# 
		</isNotNull>
		
		<isNotNull property='serviceLocPhone'>
		join so_contact sc on s.so_id = sc.so_id and sc.so_contact_type_id in (10,20)
		join so_contact_phones scp on sc.so_id = scp.so_id and sc.so_contact_id = scp.so_contact_id and scp.phone_no = #serviceLocPhone# 
		</isNotNull>
		<isNotNull property='customerName'>
		<isNull property='serviceLocPhone'>
		join so_contact sc on s.so_id = sc.so_id and sc.so_contact_type_id in (10,20) 
		</isNull>
		<isNull property='serviceLocZipcode'>
		join so_contact_locn scl on s.so_id = scl.so_id 
		</isNull>
		and scl.so_contact_locn_type_id IN (10,20) and scl.so_contact_id = sc.so_contact_id
		and ( lower(sc.first_name) like concat(#customerName#,'%') or
		lower(sc.last_name) like concat(#customerName#,'%') ) 
			
		</isNotNull>
		</dynamic>
		WHERE
		(s.accepted_resource_id = #vendorResouceId# OR srp.resource_id = #vendorResouceId#)
		 order by s.created_date desc 
		<isNotNull property='pageLimit'>
		<isNotNull property='pageSize'>
		 limit #pageLimit#,#pageSize#
		</isNotNull> 
		</isNotNull> 
 	</select>
 	 <!-- For Post API -->
 	<select id="so.selectlanguage" parameterClass="com.newco.marketplace.dto.vo.providerSearch.ProviderLanguageVO" resultClass="java.lang.Integer" >
 	select id from lu_languages_spoken where descr in
 	<iterate property="languageNames" open="("
			close=")" conjunction=", ">
			#languageNames[]#
		</iterate>
 	</select>
    
    <procedure id="spStageShcOrder.storeproc"  parameterClass="java.lang.String">
       {call sp_stageShcOrder(#soId#)} 
	</procedure>
	
	<update id="so.updateInitalPostedPriceSO" parameterClass="so">
		UPDATE so_price
		<dynamic prepend="SET">
			<isNotNull prepend=", " property="spendLimitLabor">
				initial_posted_labor_spend_limit = #initialPostedLaborSpendLimit#
			</isNotNull>
			<isNotNull prepend=", " property="spendLimitParts">
				initial_posted_parts_spend_limit = #initialPostedPartsSpendLimit#
			</isNotNull>
		</dynamic>
		WHERE so_id=#soId#
	</update>
	
	<select id="so.getInitalPostedPricesSO" parameterClass="java.lang.String" resultClass="so" >
 	select so_id as soId,
 		   initial_posted_labor_spend_limit as initialPostedLaborSpendLimit,
 		   initial_posted_parts_spend_limit as initialPostedPartsSpendLimit
 	from so_price 
 	where so_id=#soId#
 	</select>
 	<select id="so_substatus_id.query" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
		SELECT substat.so_substatus_id
		FROM lu_so_substatus substat ,so_wf_substatus state WHERE
		substat.descr = #subStatus# and state.so_substatus_id=substat.so_substatus_id 
		and state.wf_state_id=#status#
	</select>
 	
 	<!-- 
 	<select id="spnNameUsingSpnId.query" parameterClass="java.lang.Integer" resultClass="java.lang.String">
		SELECT sh.spn_name from spnet_hdr sh where
		sh.spn_id = #value#
	</select>
	
	<select id="performanceIdUsingSpnIdAndResourceId.query" resultClass="java.lang.Integer">
		SELECT perf_level from spnet_serviceprovider_state ssps where
		ssps.spn_id = #spnId# and
		ssps.service_provider_id = #resourceId#
	</select>
	
	<select id="performanceDescUsingSpnIdAndResourceId.query" resultClass="java.lang.String">
		SELECT lspl.descr FROM lu_spnet_performance_level lspl
		JOIN spnet_serviceprovider_state ssps ON ssps.perf_level = lspl.performance_id WHERE
		ssps.spn_id = #spnId# AND
		ssps.service_provider_id = #resourceId#
	</select>
 	 -->
 	<select id="getReasonsForCounterOffer.query" parameterClass="int" resultClass="counterOfferReasons" cacheModel="counterOfferReasonsCache" >
		select provider_resp_reason_id as providerRespReasonId, counter_offer_reason_id as counterOfferReasonId, counter_offer_reason_desc as counterOfferReasonDesc
		from lu_so_counter_offer_reasons 
		where provider_resp_reason_id=#providerRespId#
	</select>
 	
	<insert id="insertReasonCdForCounterOffer" parameterClass="routedProvider">
		insert into so_providers_counter_offer_reasons (so_id,resource_id,provider_resp_id,provider_resp_reason_id,counter_offer_resp_reason_id,created_date,modified_date, so_routed_provider_id)
		values (#soId#, #resourceId#,#providerRespId#,#providerRespReasonId#,#selectedCounterOfferReasonId#,now(),now(), (SELECT so_routed_provider_id FROM so_routed_providers WHERE so_id=#soId# AND resource_id=#resourceId#))
	</insert>
	
	<delete id="deleteReasonCdForCounterOffer" parameterClass="routedProvider">
		DELETE FROM so_providers_counter_offer_reasons
		WHERE so_id = #soId# and resource_id=#resourceId#
	</delete>
 	 
 	 <insert id="so.insertSoOutFileTracking" parameterClass="soOutFileTrackingVO">
		INSERT INTO so_outfile_tracking (so_id,modified_date,created_date,modified_by,transaction_type,out_file_name,out_file_fragment)
		VALUES (#soId#, #modifiedDate#,now(),now(),#transactionType#,#outFileName#,#outFileFragment#)
	</insert>
	
		
	<select id="so.getSoOutFileTracking.query" parameterClass="soOutFileTrackingVO" resultClass="soOutFileTrackingVO"  >
		SELECT so_outfile_track_id AS soOutfileTrackId,
			   so_id AS soId,
			   modified_date AS modifiedDate,
			   created_date AS createdDate,
			   modified_by AS modifiedBy,
			   transaction_type AS transactionType,
			   out_file_name AS outFileName,
			   out_file_fragment AS outFileFragment
		FROM so_outfile_tracking 
		WHERE so_id=#soId#
	</select>
	
	<select id="so.getSoCustomReferencesWS"  parameterClass="java.lang.String" resultMap="ivrDetails.resultsmap">
		SELECT so_id, buyer_id  FROM so_hdr  WHERE so_id = #soId#
	</select>
	<!-- fetching  spendlimitincrease -->
	<select id="so.getSpendLimitHistorylist.query"  parameterClass="java.lang.String" resultClass="spendLimitHistoryVO">
	    SELECT maximum_price AS updatedPrice, 
               modify_reason AS reason,
               modified_date AS modifiedDate,
               created_by_name AS userName,
               created_by AS userId,
               old_price as oldPrice,
               so_id as soId
               FROM so_spend_limit_history 
               WHERE so_id=#value#
               ORDER BY modifiedDate DESC
   </select>
	<select id="so.getSpendLimitHistory.query"  parameterClass="java.util.HashMap" resultMap="soSpendLimitHistoryVO.resultMap">
	    SELECT * from so_hdr where so_id in 
		<iterate property="soIdList" open="("
			close=")" conjunction=", ">
			#soIdList[]#
		</iterate>
               
	</select>
	<select id="soCustRefForIvr.query"  parameterClass="java.lang.String" resultClass="customRef">
	SELECT hdr.so_id as soId,
		   buyRef.ref_type as refType,
		   buyRef.buyer_ref_type_id as refTypeId,
		   cusRef.buyer_ref_value as refValue
	FROM so_hdr hdr 	
		JOIN so_custom_reference cusRef ON cusRef.so_id = hdr.so_id
		JOIN buyer_reference_type buyRef ON buyRef.buyer_id = hdr.buyer_id AND buyRef.buyer_ref_type_id = cusRef.buyer_ref_type_id
	WHERE hdr.so_id = #soId#
		AND buyRef.ref_type IN  ('UNIT NUMBER','ORDER NUMBER')
	</select>
	
	<select id="soPhoneDetailsForIvr.query"  parameterClass="java.lang.String" resultClass="contactPhone">
	SELECT ph.phone_no as phoneNo,
		   ph.phone_type_id as phoneType,
		   ph.so_contact_id as soContactId,
		   ph.so_contact_phone_id as soContactPhoneId,
		   ph.phone_no_ext as phoneExt,
		   ph.so_phone_class_id as classId,
		   con.entity_type_id as entityTypeId
	FROM so_hdr hdr 
		JOIN so_contact con ON hdr.so_id = con.so_id AND con.so_contact_type_id = 10
		JOIN so_contact_phones ph ON ph.so_id = con.so_id AND ph.so_contact_id = con.so_contact_id
	WHERE hdr.so_id = #soId#
		AND ph.phone_type_id =1
		AND (con.entity_type_id NOT IN (20,30) OR con.entity_type_id IS NULL)
	</select>
	
	<select id="subStatusDesc.query" parameterClass="java.util.List" resultClass="lookUpVo">
	select so_substatus_id as id,descr as type from lu_so_substatus where so_substatus_id in 
	<iterate  open="(" close=")"  conjunction=",">
				#[]#
	</iterate>
	</select>
	
	<select id="rescheduleReasonCodes.query" parameterClass="java.lang.Integer" resultClass="lookUpVo">
		SELECT res_reason_id AS id,descr AS TYPE FROM lu_reschedule_reason_codes 
		WHERE role_id = #roleId#
	</select>
	
	<select id="assocCarRules.query" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT routing_rule_hdr_id FROM so_routing_rule_assoc WHERE so_id = #soId# ORDER BY created_date DESC LIMIT 1
	</select>
	
	<select id="schedule.query" parameterClass="java.lang.String" resultClass="soSchedule">
		SELECT lusch.schedule_status AS scheduleStatus,
		sh.customer_appt_confirm_ind AS confirmInd,sh.expected_time_of_arrival AS eta
		FROM so_schedule sh  JOIN lu_schedule_status lusch 
		ON lusch.schedule_status_id =  sh.schedule_status_id 
		WHERE sh.so_id = #soId#;	
	</select>
	
	<select id="scheduleHistory.query" parameterClass="java.util.HashMap" resultMap="preCallHistory.resultsmap">
		SELECT
		  soproresp.reason_code     AS reason,
		  soschhist.modified_date   AS DATE,
		  schstatus.schedule_status AS scheduleStatus,
		  CASE 
			WHEN  soschhist.modified_by = "SYSTEM" THEN 'SYSTEM'
		  ELSE 		
			CONCAT(cont.first_name,' ', cont.last_name) 
		  END AS modifiedBy			
		FROM so_schedule_history soschhist
				JOIN lu_schedule_status schstatus FORCE INDEX (PRIMARY) ON soschhist.schedule_status_id = schstatus.schedule_status_id
				LEFT OUTER JOIN vendor_resource resource ON resource.user_name = soschhist.modified_by
				LEFT OUTER JOIN contact cont ON cont.contact_id = resource.contact_id 
				LEFT OUTER JOIN lu_precall_reason_codes soproresp ON soschhist.resp_reason_id = soproresp.reason_code_id
		WHERE soschhist.so_id =  #soId# AND soschhist.vendor_id =#vendorId#
		    AND soschhist.source IN ('PRE_CALL','CONFIRM_APPOINTMENT', 'REVISIT_NEEDED') 
		ORDER BY soschhist.modified_date DESC;
	</select>
	
	
	<select id="mandatoryBuyerReferences.query" resultClass="buyerRefVO">
		 SELECT
	        buyer_ref_type_id as buyerRefTypeId,
	        buyer_id as buyerId,
	        ref_type as referenceType,
	        ref_descr as referenceDescription
	    FROM
	        buyer_reference_type
	    WHERE buyer_id = #buyerId# and	required = 1;
	</select>
	
	<select id="permitTypes.query"  resultClass="lookUpVo">
	select id as id,type as type from lu_permit_type
	</select>
	
	
	
	<select id="so.reasonExists.query" parameterClass="reasoncodeVO" resultClass="java.lang.Integer">
	SELECT rc.reason_code_id
	FROM reason_codes rc
	WHERE rc.reason_code = #reasonCode# 
	AND rc.reason_code_status = #reasonCodeStatus#             
	AND rc.reason_code_type = #reasonCodeType#       
	AND ((rc.general_ind = 1  AND rc.reason_code_id 
	NOT IN(SELECT rh.reason_code_id FROM reason_code_history rh WHERE rh.buyer_id =#buyerId# AND rh.action NOT IN('Archived','Deleted') )) 
	OR (rc.general_ind =0 AND rc.buyer_id = #buyerId#)) 
	</select>
	
	<!-- updated so_workflow_controls table to identify the type of service order -->
	<update id="skuIndicator.update" parameterClass="java.lang.String">
	 	UPDATE so_workflow_controls SET sku_service_order_indicator=1 WHERE so_id = #soId#
	 </update>

	<!-- fetching sku indicator from so_workflow_controls table to identify the type of service order -->
	<select id="skuIndicator.fetch" resultClass="java.lang.Boolean">
	select  sku_service_order_indicator from so_workflow_controls where so_id = #soId#
	</select>

	<select id="assocCarSo.query" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(routing_rule_hdr_id) from so_routing_rule_assoc where so_id = #soId#
	</select>
	
	<select id="so.isProviderAuthToViewSO.query" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
 		SELECT COUNT(srp.so_id)
		FROM so_hdr h
			JOIN so_routed_providers srp ON srp.so_id=h.so_id
		WHERE srp.vendor_id=#vendorId#
		AND srp.so_id=#soId#
		AND h.wf_state_id NOT IN (100,105,125,130)
	</select>
	<!-- SL-18007 query added for fetching SO Price Details - CurrentPriceDetails
	<select id="getCurrentPriceDetails.query" resultClass="solocation" parameterClass="java.lang.String">
	</select> -->
	
	<!-- SL-18007 query added for fetching SO Price Details - SOLevelPriceHistory -->
	<select id="getSOLevelPriceHistory.query" resultMap="soLevelPriceHistory.resultsmap" parameterClass="java.lang.String">
		SELECT * FROM so_price_change_history WHERE so_id=#soId# ORDER BY created_date DESC
	</select>
	
	<!-- SL-18007 query added for fetching SO Price Details - TaskLevelPriceHistory -->
	<select id="getTaskLevelPriceHistory.query" resultMap="taskLevelPriceHistory.resultsmap" parameterClass="java.lang.String">
		SELECT * FROM so_tasks WHERE so_id=#soId# ORDER BY created_date DESC
	</select>
	
	<!--  SL-18007 reason code-->
	<select id="getReason.query" resultClass="java.lang.String">
		select reason_code from reason_codes where reason_code_id = #reason_code_id#
	</select>
	<select id="so.isProviderAuthToViewGroupSO.query" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
 		SELECT COUNT(sgrp.so_group_id)
		FROM so_hdr h
			JOIN so_group_routed_providers sgrp ON sgrp.so_group_id= h.so_group_id
		WHERE sgrp.vendor_id= #vendorId#
		AND sgrp.so_group_id =#groupId#
		AND h.wf_state_id NOT IN (100,105,125,130)
	</select>
	
	<!-- SL-15642: fetching vendor business name -->
	<select id="getVendorBusinessName.query" resultClass="java.lang.String" parameterClass="java.lang.Integer">
		SELECT business_name FROM vendor_hdr WHERE vendor_id = #vendorId#
	</select>
	
	<select id="getRescheduleReason.query" resultClass="java.lang.String" parameterClass="java.lang.Integer">
		SELECT descr FROM lu_so_substatus WHERE so_substatus_id = #reasonId#
	</select>
	
	<!-- SL-18418: fetching method of routing of so in posted state -->
	<select id="getMethodOfRouting.query" resultClass="java.lang.String" parameterClass="java.lang.String">
		SELECT method_of_routing FROM so_workflow_controls WHERE  so_id= #soId#
	</select>
	
	<select id="getAcceptedFirmDetails.query" 
		parameterClass="java.lang.Integer" resultClass="firmDetails">
		SELECT
			vendor_id as vendorID,
			business_name as businessName,
			bus_phone_no as businessPhoneNumber
		FROM vendor_hdr WHERE vendor_id = #vendorId#
	</select>
	<select id="getAcceptedFirmDetailsSoId.query" 
		parameterClass="java.lang.String" resultClass="firmDetails">
		SELECT   
			vh.vendor_id AS vendorID,
			business_name AS businessName,
			bus_phone_no AS businessPhoneNumber
		FROM vendor_hdr vh, so_routed_providers  srp 
		WHERE  vh.vendor_id = srp.vendor_id
		AND srp.provider_resp_id = 1
		AND srp.so_id = #soId# ;
	</select>
	<select id="soWrkFlowControls.query" resultClass="soWrkFlowControls" parameterClass="java.lang.String">
		SELECT tier_route_ind AS tierRouteInd,
		performance_score_filter_value AS performanceScore,
		final_price_labor AS finalPriceLabor,
		final_price_parts AS finalPriceParts,
		non_funded_ind AS nonFundedInd,
		invoice_parts_ind AS invoicePartsInd,
		invoice_parts_pricing_model AS invoicePartsPricingModel,
		original_so_id AS originalSoId,
		warranty_provider_firm AS warrantyProvider,
		invalid_model_serial_ind AS invalidModelSerialInd,
		labor_tax_percentage AS laborTaxPercentage,
		materials_tax_percentage AS materialsTaxPercentage
		FROM so_workflow_controls 
		WHERE so_id= #soId#
	</select>
	<select id="soWrkFlowControlsOriginalOrderWarrantyProvider.query" resultClass="soWrkFlowControls" parameterClass="java.lang.String">
		SELECT original_so_id AS originalSoId,
		       warranty_provider_firm AS warrantyProvider
		FROM so_workflow_controls 
		WHERE so_id= #soId#
	</select>
	
	<select id="checkTierRoute.query" resultClass="java.lang.Integer" parameterClass="java.lang.String">
		SELECT tier_route_ind FROM so_workflow_controls WHERE  so_id= #soId#
	</select>
	
	<select id="checkNonFunded.query" resultClass="java.lang.Integer" parameterClass="java.lang.String">
		SELECT non_funded_ind FROM so_workflow_controls WHERE  so_id= #soId#
	</select>
	
	<select id="getBuyerIdForSo" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	     SELECT buyer_id FROM so_hdr WHERE so_id=#value#
	</select>
	<select id="mobile.so.signature.documentCount"
		parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(*) as signatureDocCount FROM mobile_so_signature 
		WHERE so_id = #soId#
	</select>
	
	<select id="mobile.so.signature.documentQuery" parameterClass="documentVO"
		resultClass="java.lang.Integer">
		SELECT sd.document_id FROM so_document sd JOIN document d ON d.document_id = sd.document_id 
		WHERE d.doc_category_id = #docCategoryId# AND d.delete_ind = 0 AND 
		d.descr = #description# AND d.title = #title# AND sd.so_id = #soId#
	</select>
	<select id="getInvoiceDocumentId.query" parameterClass="java.lang.Integer" resultClass="invoiceDocIdList">
	   SELECT invoice_part_id AS invoicePartId,invoice_document_id AS documentId
       FROM so_provider_invoice_doc WHERE invoice_part_id = #value#;
	</select>
	<delete id="mobile.so.documentMapping.delete" parameterClass="documentVO">
		delete from so_document where so_id=#soId# and document_id=#documentId#
	</delete>
	
	<update id="mobile.so.pdf.batch.parameterUpdate" parameterClass="documentVO">
		update mobile_so_signature set generate_pdf_status=#pdfStatus#,
		no_of_retries=0, exception=null,
		modified_date=now() where so_id=#soId#
	</update>	
	
	
	<update id="so.updatenoteAsRead" parameterClass="java.lang.String">
		UPDATE so_notes SET read_ind = 1 WHERE note_id =
		#noteId#
	</update>
	
	<update id="so.updatenoteAsUnRead" parameterClass="java.lang.String">
		UPDATE so_notes SET read_ind = 0 WHERE note_id =
		#noteId#
	</update>
	
	<select id="so.getMethodOfClosure"	parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CAST(method_of_closure AS CHAR(50))
		FROM so_workflow_controls
		WHERE so_id = #soId#
	</select>
	 
	<select id="loadSOMSwitch.query" resultClass="java.lang.String" >
		SELECT app_value FROM application_flags WHERE app_key ='loadSOMSwitch';
	</select>
	
	<select id="duplicateSOInHome.query" parameterClass="java.util.HashMap"
		resultMap="soDuplicate.resultsmap">
		SELECT sohdr.so_id,sohdr.wf_state_id,sohdr.created_date
		FROM so_custom_reference so_custom
			JOIN so_hdr sohdr ON sohdr.so_id=so_custom.so_id
			JOIN buyer_reference_type buy_ref 
			ON ( 
				so_custom.buyer_ref_type_id=buy_ref.buyer_ref_type_id
				AND buy_ref.ref_type = 'OrderNumber' 
				AND buy_ref.buyer_id=3000 
				AND so_custom.buyer_ref_value=#customOrderNumber#)
				WHERE so_custom.so_id IN
				(SELECT so_custom2.so_id
	 			FROM so_custom_reference so_custom2
	 				JOIN buyer_reference_type buy_ref2 
	 				ON ( 
					so_custom2.buyer_ref_type_id=buy_ref2.buyer_ref_type_id
         			AND buy_ref2.ref_type = 'UnitNumber' AND buy_ref2.buyer_id=3000)
	 				WHERE so_custom2.buyer_ref_value=#customUnitNumber#
	 				   ) ORDER BY sohdr.created_date ASC LIMIT 1
	</select>
	
	<insert id="logDuplicateSORequestResponse.insert" parameterClass="java.util.HashMap">
		INSERT into sl_duplicate_so_logging(
				buyer_id,
				api_name,
 			    request,
 			    response,
			    created_date,
		        modified_date
			    ) 
		VALUES(
				#buyerId#,
				#apiName#,
				#request#,
				#response#,  
				NOW(),
				NOW()
				)	
	</insert>
	
	<!-- Priority 5B changes -->
	<update id="modelSerialInd.update" parameterClass="java.util.HashMap">
		update so_workflow_controls 
		set invalid_model_serial_ind = #ind#
		where so_id = #soId# 
	</update>
	
	<select id="getBuyerName.query" parameterClass="java.lang.Integer" resultClass="java.lang.String">
		SELECT CONCAT(c.first_name, ' ', c.last_name) 
		FROM contact c
		JOIN buyer_resource b
		ON b.contact_id = c.contact_id
		AND resource_id = #buyerResId#
	</select>
	
	<select id="getValidationRules.query" parameterClass="java.util.List" resultClass="validationVO">
		select input_field as field,
			expression as regex,
			error_message as errorMsg
		from lu_validation_rules
		where rule_status = 'ACTIVE'
		and input_field in 
		<iterate open="("	close=")" conjunction=", ">
			#[]#
		</iterate>
	</select>
		<!-- SL-21070 -->
	<select id="so.lockEditInd"	parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT lock_edit_ind FROM so_hdr WHERE so_id = #soId#
	</select>
	
	<!-- Get Estimate Details -->
	<select id="getEstimates.query" parameterClass= "java.lang.String"  resultMap="estimateDetailList.resultmap">
        SELECT * FROM so_estimation estimation WHERE estimation.so_id=#soId# AND estimation.status != 'DRAFT';
    </select>
    
    <select id="getEstimateItemDetails.query" resultMap="estimateItemDetails.resultmap">
        SELECT * FROM so_estimation_items item WHERE item.estimation_id=#estimateId#;
    </select>
    
    <select id="getEstimateTaskDetails.query" resultMap="estimateLaborDetails.resultmap">
		SELECT * FROM so_estimation_items item WHERE item.estimation_id=#estimateId# and item.type='LABOR';
	</select>
	<select id="getEstimatePartDetails.query" resultMap="estimatePartDetails.resultmap">
		SELECT * FROM so_estimation_items item WHERE item.estimation_id=#estimateId# and item.type='PART';
	</select>
	
	<select id="getEstimateOtherServicesDetails.query" resultMap="estimateOtherEstimateServices.resultmap">
		SELECT * FROM so_estimation_items item WHERE item.estimation_id=#estimateId# and item.type IN('Service Fee','Cancellation Fee','Other');
	</select>
		
	<select id="getEstimateFirmLocation.query" resultClass="estimateLocationVO">
		SELECT loc.street_1,loc.street_2,loc.city,loc.state_cd,loc.zip,loc.zip4 
		FROM location loc, vendor_location vl
		WHERE loc.locn_id=vl.locn_id AND vl.vendor_id = #vendorId# AND loc.locn_type_id = 1;
	</select>
	
	<select id="getEstimateProviderLocation.query" resultClass="estimateLocationVO">
		SELECT loc.street_1,loc.street_2,loc.city,loc.state_cd,loc.zip,loc.zip4 
		FROM location loc, vendor_resource vr 
		WHERE loc.locn_id=vr.locn_id AND vr.resource_id = #resourceId#;
	</select>
	
	<!-- Get reviews -->
	<select id="getReview.query" resultClass="reviewVO">
		SELECT srh.overall_score AS reviewRatingObj,
		srh.comments AS reviewComment,
		srh.created_date AS reviewDateObj,
		lsq.question_txt  AS question,
		lsa.score AS score
	    FROM survey_response_so srs,survey_response_hdr srh, survey_response sr, 
	    lu_survey_answers lsa, lu_survey_questions lsq
	    WHERE srs.so_id = #soId#
		AND srh.response_hdr_id=srs.response_hdr_id AND sr.response_hdr_id= srh.response_hdr_id AND 
		lsq. question_id = sr.question_id AND lsa.answer_id = sr.answer_id AND
		srh.entity_type_id = 10;
    </select>
	
	<!-- Get Estimate History Details -->
	<select id="getEstimateHistory.query" resultMap="estimateHistoryList.resultmap">
        SELECT * FROM so_estimation_history estimation WHERE estimation.estimation_id=#estimationId#;
    </select>
    
    <select id="getEstimateTaskHistoryDetails.query" resultMap="estimateLaborHistoryDetails.resultmap">
		SELECT * FROM so_estimation_items_history item WHERE item.estimation_id=#estimateId# and item.type='LABOR';
	</select>
	<select id="getEstimatePartHistoryDetails.query" resultMap="estimatePartHistoryDetails.resultmap">
		SELECT * FROM so_estimation_items_history item WHERE item.estimation_id=#estimateId# and item.type='PART';
	</select>
	
	<select id="getEstimateOtherServicesHistoryDetails.query" resultMap="estimateOtherServicesHistory.resultmap">
		SELECT * FROM so_estimation_items_history item WHERE item.estimation_id=#estimateId# and item.type IN('Service Fee','Cancellation Fee','Other');
	</select>
	
	
	<select id="validateEstimate.query"	parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(estimation_id) from so_estimation where so_id = #soId# and estimation_id = #estimateId#
	</select>
	
	<update id="updateEstimation.update" parameterClass="java.util.HashMap">
		update so_estimation 
			set status = #status#, 
			status_update_comments = #comments#,
			accept_source = #source#,
			response_date = NOW(),
			modified_date= NOW(),
			modified_by = #modifiedBy#,
			responded_customer_name = #customerName#		
		where so_id = #soId# and estimation_id = #estId#
	</update>
	
	 <insert id="saveEstimationHistoryMain.insert" parameterClass="estimateVO"> 
	    INSERT INTO so_estimation_history(
	            estimation_id,
			    so_id,
			    reference_no,
			    description,
			    comments,
			    created_date,
			    modified_date,
			    created_by,
			    modified_by,
			    total_parts_price,
			    total_labor_price,
			    total_other_service_price,
			    discount_type,
			    discounted_amount,
			    discounted_percentage,
			    tax_rate,
			    tax_type,
			    tax,
			    total_price,
			    logo_doc_id,
			    vendor_id,
			    resource_id,
			    estimation_date,
			    status,
			    action,
			    status_update_comments,
			    accept_source,
			    response_date,
			    responded_customer_name
			     )
	    VALUES (
	    #estimationId#,
			    #soId#,
			    #estimationRefNo#,
			    #description#,
			    #comments#,
			    NOW(),
			    NOW(),
			    #createdBy#,
			    #modifiedBy#,
			    #totalPartsPrice#,
			    #totalLaborPrice#,
			    #totalOtherServicePrice#,
			    #discountType#,
			    #discountedAmount#,
				#discountedPercentage#,
				#taxRate#,
				#taxType#,
				#taxPrice#,
				#totalPrice#,
				#logoDocumentId#,
				#vendorId#,
				#resourceId#,
				#estimationDate#,
				#status#,
				#action#,
				#comments#,
				#acceptSource#,
				NOW(),
				#respondedCustomerName#
				)
	</insert>
	
	<select id="getEstimationDetails.query"	parameterClass="java.util.HashMap" resultClass="estimateVO">
		select 
			estimation_id as estimationId,
			reference_no as estimationRefNo,
			status as status,
			response_date as responseDate,
			estimation_expiry_date as estimationExpiryDate
		 from so_estimation 
		 	where so_id = #soId#
		 	and vendor_id=#vendorId#
	</select>
	
	<select id="getClosedSOProvider.query"	parameterClass="closedOrdersRequestVO" resultClass="closedServiceOrderVO">
		SELECT sh.so_id AS soId,
			sh.created_date AS createdDate,
			sh.closed_date AS closedDate,
			sh.buyer_id AS buyerId,
			sh.sow_title AS sowTitle,
			sh.sow_descr AS sowDs,
			sh.provider_instr AS providerInstructions,
			sh.buyer_terms_cond AS buyerTerms,
			sh.service_date_type_id AS serviceDateTypeId,
			sh.service_date1 AS serviceDate1,
			sh.service_date2 AS serviceDate2,
			sh.service_time_start AS serviceTimeStart,
			sh.service_time_end AS serviceTimeEnd,
			sh.service_locn_time_zone AS serviceLocationTimeZone,
			sh.spend_limit_labor AS spendLimitLabor,
			sh.spend_limit_parts AS spendLimitParts,
			sh.final_price_labor AS LaborFinalPrice,
			sh.final_price_parts AS PartsFinalPrice,
			sh.price_model AS priceModel,
			sl.so_locn_class_id AS locTypeId,
			sl.locn_name AS locnName,
			sl.street_1 AS street1,
			sl.street_2 AS street2,
			sl.city AS city,
			sl.state_cd AS state,
			sl.zip AS zip,
			sl.zip4 AS zip4,
			sc.first_name AS serviceFirstName,
			sc.last_name AS serviceLastName,
			sc.email AS serviceEmail,
			scp.phone_no AS servicePhoneNo,
			scp.phone_no_ext AS servicePhoneNoExt,
			scp.so_phone_class_id AS servicePhoneClassId,
			scp.phone_type_id AS servicePhoneTypeId,
			scpm.phone_no AS serviceAltphoneNo,
			scpm.phone_no_ext AS serviceAltphoneNoExt,
			scpm.so_phone_class_id AS serviceAltphoneClassId,
			scpm.phone_type_id AS serviceAltphoneTypeId,
			co.first_name AS buyerSupportFirstName,
			co.last_name AS buyerSupportLastName,
			co.phone_no AS buyerSupportPhoneNo,
			co.phone_no_ext AS buyerSupportPhoneNoExt,
			co.mobile_no AS buyerSupportCellNo,
			co.email AS buyerSupportEmail,
			srh.overall_score AS overallRatingScore,
			srh.comments AS comments,
			srh.created_date AS reviewDate
			FROM so_hdr sh
			JOIN so_location sl ON (sh.so_id=sl.so_id)
			JOIN so_contact_locn scl ON (sl.so_id = scl.so_id AND sl.so_locn_id = scl.so_locn_id AND scl.so_contact_locn_type_id = 10)
			JOIN so_contact sc  ON (sc.so_id=sh.so_id)
			JOIN so_contact_locn sclo ON sc.so_id = sclo.so_id AND sc.so_contact_id = sclo.so_contact_id AND sclo.so_contact_locn_type_id = 10 AND sc.so_contact_type_id=10
			LEFT OUTER JOIN so_contact_phones scp ON scp.so_contact_id = sc.so_contact_id AND sc.so_id = scp.so_id AND scp.phone_type_id=1
			LEFT OUTER JOIN so_contact_phones scpm ON scpm.so_contact_id = sc.so_contact_id AND sc.so_id = scp.so_id AND scpm.phone_type_id=2
			LEFT OUTER JOIN  contact co ON  co.contact_id=sh.buyer_contact_id
			LEFT OUTER JOIN survey_response_so srs ON srs.so_id = sh.so_id
			LEFT OUTER JOIN survey_response_hdr srh ON srh.response_hdr_id=srs.response_hdr_id AND srh.entity_type_id = 10
			WHERE sh.wf_state_id = 180 AND sh.accepted_vendor_id = #providerId#
			<isNotNull property='serviceLocZipcode'>
		 	AND sl.zip = #serviceLocZipcode#
			</isNotNull>
			<isNotNull property='startDate'>
			AND sh.closed_date &gt;=#startDate# and sh.closed_date &lt;=NOW() 
			</isNotNull>
			ORDER BY sh.closed_date DESC 
			<isNotNull property='noOfOrders'>
		 	LIMIT #noOfOrders#
			</isNotNull>
	</select>
	
	<select id="getValidFirmId.query" parameterClass="java.util.ArrayList" resultClass="java.lang.String" >
	    SELECT h.vendor_id FROM vendor_hdr h WHERE h.vendor_id IN
	       <iterate open="(" close=")" conjunction=",">
				#firmIds[]#
		   </iterate>
	</select>
	<select id="getBasicDetails.query" parameterClass="java.util.List" resultClass="basicFirmDetailsVO" >
	    SELECT vh.vendor_id AS firmId,
		vh.business_name AS businessName,
		vh.business_descr AS overView,
		vh.business_start_date AS startDate,
		c.first_name AS firstName,
		c.last_name AS lastName,
		c.email_alt AS altEmail,
		c.email AS email,
		l.street_1 AS street1,
		l.street_2 AS street2,
		l.city AS city,
		l.state_cd AS state,
		l.zip AS zip,
		l.zip4 AS zip4,
		vh.bus_phone_no AS businessPhone,
		vh.bus_phone_no_ext AS businessPhoneExt,
		vh.bus_fax_no AS businessFax,
		vh.web_address AS web,
		lu_pi.descr AS primaryIndustryDesc,
		MIN(vr.hourly_rate)AS minHourlyRate,
		MAX(vr.hourly_rate) AS maxHourlyRate,
		IFNULL(k.timetoaccept,0.00) AS firmAverageTimeToAccept,
		IFNULL(k.arrivalpercentage,0.00) AS firmAverageArrivalWindow				
		FROM vendor_hdr vh 
		JOIN vendor_resource vr ON vh.vendor_id=vr.vendor_id 
		JOIN contact c ON vr.contact_id=c.contact_id 
		JOIN vendor_location vl ON vl.vendor_id=vh.vendor_id
		JOIN location l ON vl.locn_id=l.locn_id AND l.locn_type_id=1
		LEFT OUTER JOIN vendor_kpi k ON vr.vendor_id = k.vendor_id
		LEFT OUTER JOIN lu_primary_industry lu_pi ON vh.primary_industry_id = lu_pi.primary_industry_id
		WHERE vh.vendor_id IN 
			<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate> 
		GROUP BY vh.vendor_id
	</select>
	<select id="getProviderFirmRating.query" parameterClass="java.util.List" resultClass="java.util.HashMap">
		SELECT entity_id AS vendor_id,rating_score AS rating  FROM survey_entity_rating 
		WHERE entity_id IN
			<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate> 
		AND entity_type_id=40 
		AND score_type='CSAT' AND score_timeline_type='LIFETIME'
	</select>
	<select id="getFirmReviewCount.query" parameterClass="java.util.List" resultClass="java.util.HashMap">
		SELECT entity_id AS vendor_id,rating_count  AS reviewCount  FROM survey_entity_rating 
		WHERE entity_id IN 
		<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate> 
		AND entity_type_id=40 
		AND score_type='CSAT' AND score_timeline_type='LIFETIME'
	</select>
	
	
	<select id="getCompanyLogoValues.query"  resultClass="java.util.HashMap">
	SELECT app_key ,app_value  FROM application_properties a WHERE app_key
	IN('default_firm_logo_path','firm_logo_retreival_path','firm_logo_save_location')
   </select>
   
   	<select id="getParentNodeIds.query"  resultClass="java.util.HashMap" parameterClass="java.util.List">
	SELECT node_id,parent_node  FROM skill_tree WHERE node_id IN 			
	<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate> 
   </select>
   
   
    <select id="getNodeNames.query"  resultClass="java.util.HashMap" parameterClass="java.util.List">
	SELECT node_id,node_name  FROM skill_tree WHERE node_id IN 			
	<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate> 
   </select>

	<select id="getMainCategoryNames.query" resultClass="java.lang.String"
		parameterClass="java.util.HashMap">
		SELECT node_name FROM skill_tree WHERE node_id IN(
		SELECT root_node_id FROM skill_tree WHERE node_id IN
		<iterate property="nodeIds" open="(" close=")" conjunction=",">
			#nodeIds[]#
		</iterate>
		);
	</select>   
    
   	<select id="getSkillTypList.query"  resultClass="java.util.HashMap">
	SELECT node_id AS nodeId,GROUP_CONCAT(descr)AS skillTypes FROM lu_service_type_template GROUP BY node_id;
   </select>
	
	<select id="getVendorInsuranceDetails.query" parameterClass="java.util.List" resultClass="licensesAndCertVO">
		SELECT IF(lvc.cred_category='Other',CONCAT(lvc.cred_category,' - ',vc.insurance_description),lvc.cred_category)
		AS credTypeDesc,vc.cred_amount AS amount,
		vc.modified_date AS insModifiedDate,
		wf.wf_state AS wfStatus,
		vc.vendor_id AS firmId
		FROM vendor_credentials vc
		JOIN lu_vendor_credential_category lvc ON (vc.cred_category_id=lvc.cred_category_id)
		JOIN wf_states wf ON (vc.wf_state_id=wf.wf_state_id)
		WHERE vc.cred_type_id=6 AND vc.vendor_id IN 
			<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate> 
	</select>
	
	<select id="getVendorLicenseDetails.query" parameterClass="java.util.List" resultClass="licensesAndCertVO">
		SELECT  luc.cred_type_desc AS credTypeDesc,
		lucc.cred_category AS categoryTypeDesc,
		vc.cred_source AS source,
		vc.cred_name AS licenseName, 
		wf.wf_state AS wfStatus,
		vc.cred_no AS credentialNum,
		vc.cred_issue_date AS issueDate,
		vc.cred_expiration_date AS expirationDate,
		vc.vendor_id AS firmId
		FROM lu_vendor_credential_type luc,lu_vendor_credential_category lucc,vendor_credentials vc,wf_states wf 
		WHERE luc.cred_type_id=vc.cred_type_id 
		AND lucc.cred_category_id =vc.cred_category_id
		AND vc.wf_state_id=wf.wf_state_id
		AND vc.cred_type_id !=6 AND vc.vendor_id IN 
			<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate> 
	</select>	
	
	<select id="getLastClosedOrder.query" parameterClass="java.util.List" resultClass="lastClosedVo">
	SELECT
	sh.accepted_vendor_id as firmId,
  	sh.so_id       AS soId,
  	sh.sow_title   AS title,
  	sh.sow_descr   AS overView,
  	sl.city        AS city,
  	sl.state_cd    AS state,
  	sl.zip         AS zip,
  	sh.closed_date AS closedDate
	FROM so_hdr sh
  	JOIN so_location sl
    ON (sh.so_id = sl.so_id)
 	JOIN so_contact_locn scl
    ON (sl.so_id = scl.so_id
    AND sl.so_locn_id = scl.so_locn_id)
    AND scl.so_contact_locn_type_id = 10
  	JOIN (SELECT
          MAX(h1.closed_date)   AS closed_date1,
          h1.accepted_vendor_id AS acceptedVendor
        FROM so_hdr h1
        WHERE h1.accepted_vendor_id IN
	<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate>
        GROUP BY h1.accepted_vendor_id) temp
    ON sh.closed_date = temp.closed_date1
    AND sh.accepted_vendor_id = temp.acceptedVendor
    WHERE sh.wf_state_id = 180
    AND sh.accepted_vendor_id IN
	<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate>
	GROUP BY sh.accepted_vendor_id
	ORDER BY sh.closed_date DESC;
</select>
	
	<select id="getVendorServiceDetails.query" parameterClass="java.util.List"
		resultClass="firmServicesVO">
			SELECT s1.node_name AS rootCategory,
       			   sk.node_name AS project,
       		   	   vr.vendor_id AS firmId
			FROM vendor_resource vr
			JOIN vendor_hdr h ON h.vendor_id=vr.vendor_id
			JOIN resource_skill s ON s.resource_id=vr.resource_id
			JOIN skill_tree sk ON sk.node_id=s.node_id
			JOIN skill_tree s1 ON s1.node_id=sk.root_node_id
			WHERE vr.vendor_id IN 
			<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate> 
			AND vr.wf_state_id = 6
			AND sk.level IN (2,3)
			GROUP BY rootCategory, project, firmId
			ORDER BY rootCategory;
	</select>
	
	<!-- <select id="getVendorReviewDetails.query" parameterClass="java.util.List"
		resultClass="firmReviewVO">
		SELECT h.accepted_vendor_id AS firmId,
		(CONCAT(c.first_name,' ',c.last_name)) AS reviewerName,
		r.comments AS reviewComment,
		overall_score AS reviewRatingObj,
		r.created_date AS reviewDateObj
		FROM survey_response_hdr r,survey_response_so s,so_hdr h,buyer_resource
		b,contact c
		WHERE s.response_hdr_id = r.response_hdr_id
		AND r.entity_id = b.resource_id
		AND b.contact_id = c.contact_id
		AND h.accepted_vendor_id IN
		<iterate open="(" close=")" conjunction=",">
				#[]#
		</iterate> 
		AND s.so_id = h.so_id
	    AND r.entity_type_id = 10
		UNION ALL
		SELECT h.vendor_id  AS firmId,
       (CONCAT(c.first_name, ' ', c.last_name)) AS reviewerName,
       r.comments  AS reviewComment,
       overall_score AS reviewRatingObj,
       r.created_date AS reviewDateObj
	   FROM   survey_response_hdr r,
       survey_response_lead s,
       lead_matched_firm h,
       buyer_resource b,
       contact c
	   WHERE  s.response_hdr_id = r.response_hdr_id
       AND r.entity_id = b.resource_id
       AND b.contact_id = c.contact_id
       AND h.vendor_id IN
       <iterate open="(" close=")" conjunction=",">
				#[]#
		</iterate>
       AND s.sl_lead_id = h.sl_lead_id
       AND h.lead_firm_status = 4
       AND r.entity_type_id = 10
	   GROUP  BY s.sl_lead_id
	   ORDER  BY reviewDateObj DESC 
	</select> -->
	
	<!-- SL-21642 -->
	<select id="getVendorReviewDetails.query" parameterClass="java.util.List"
		resultClass="firmReviewVO">
		SELECT h.accepted_vendor_id AS firmId,
		(CONCAT(sc.first_name,' ',sc.last_name)) AS reviewerName,
		r.comments AS reviewComment,
		overall_score AS reviewRatingObj,
		r.created_date AS reviewDateObj
		FROM survey_response_hdr r, 
			 survey_response_so s,
			 so_hdr h,buyer_resource b,
			 so_contact sc,
			 so_contact_locn sl
		WHERE s.response_hdr_id = r.response_hdr_id
		AND r.entity_id = b.resource_id
		AND h.accepted_vendor_id IN
		<iterate open="(" close=")" conjunction=",">
				#[]#
		</iterate> 
		AND s.so_id = h.so_id
		AND s.so_id = sc.so_id
		AND s.so_id = sl.so_id
		AND sl.so_contact_id = sc.so_contact_id
	    AND r.entity_type_id = 10
	    AND sl.so_contact_locn_type_id = 10
	    AND r.survey_id not in(40,60)
		UNION ALL
		SELECT h.vendor_id  AS firmId,
       (CONCAT(lc.first_name, ' ', lc.last_name)) AS reviewerName,
       r.comments  AS reviewComment,
       overall_score AS reviewRatingObj,
       r.created_date AS reviewDateObj
	   FROM   survey_response_hdr r,
       		  survey_response_lead s,
       		  lead_matched_firm h,
 			  lead_contact_information lc
	   WHERE  s.response_hdr_id = r.response_hdr_id
       AND h.vendor_id IN
       <iterate open="(" close=")" conjunction=",">
				#[]#
		</iterate>
       AND s.sl_lead_id = h.sl_lead_id
       AND s.sl_lead_id = lc.sl_lead_id
       AND lc.contact_type = 1
       AND h.lead_firm_status = 4
       AND r.entity_type_id = 10
       AND r.survey_id not in(40,60)
	   GROUP  BY s.sl_lead_id
	   ORDER  BY reviewDateObj DESC 
	</select>
	
	<select id="getWarrantyDetails.query" parameterClass="java.util.List"
		resultClass="warrantyVO">
		SELECT
			MAX(vendor_id) as maxVendorID,
			vendor_id as vendorID,
			warr_period_labor as warrPeriodLabor,
			warr_offered_labor as warrOfferedLabor,
			warr_offered_parts as warrOfferedParts,
			warr_period_parts as warrPeriodParts,
			warranty_measure as warrantyMeasure,
			free_estimate as freeEstimate,
			conduct_drug_test as conductDrugTest,
			consider_drug_test as considerDrugTest,
			has_ethics_policy as hasEthicsPolicy,
			require_badge as requireBadge,
			consider_badge as considerBadge,
			require_us_doc as requireUsDoc,
			consider_impl_policy as considerImplPolicy,
			created_date as createdDate,
			modified_date as modifiedDate,
			modified_by as modifiedBy,
			consider_ethic_policy as considerEthicPolicy
			FROM 
			vendor_policy
			WHERE 
			vendor_id IN
			<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate> 
			GROUP BY vendorID
	</select>
	<select id="getNOOfEmployees.query" parameterClass = "java.util.List" resultClass = "java.util.HashMap">
	     SELECT vr.vendor_id as firmId,COUNT(vr.resource_id) as noOfEmployees FROM vendor_resource vr WHERE vr.vendor_id IN
			<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate> 
	     AND vr.wf_state_id= 6 AND vr.resource_ind=1 AND vr.mkt_place_ind=1 
	     GROUP BY vr.vendor_id
	</select>
	
	<!-- R16_1_1: SL-21270:Fetching finalLaborPrice and finalPartsPrice and priceType from so_hdr -->
	<select id="getFinalSOPrice.query"	parameterClass="java.lang.String" resultClass="price">
		SELECT final_price_labor as origSpendLimitLabor, 
		final_price_parts as origSpendLimitParts, 
		price_type as priceType,
		wf_state_id as wfState
		FROM so_hdr
		WHERE so_id = #soId#
	</select>
	
	<!-- R16_1_1: SL-21270:Fetching finalLaborPrice and finalPartsPrice and priceType from so_hdr -->
	<select id="getAddonExistsDetails.query"  parameterClass="java.lang.String" resultClass="soAdditionalPayment">
	SELECT pay.payment_type as paymentType,
	addOn.so_addon_id as addonId 
	FROM so_hdr so
	LEFT OUTER JOIN so_additional_payment pay ON(so.so_id=pay.so_id)
	LEFT OUTER JOIN so_addon addOn ON(addOn.so_id=so.so_id AND addOn.qty>0)
	WHERE so.so_id=#soId#
    GROUP BY so.so_id;
	</select>
	<select id = "getSoLogoDocumentId.query" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	   SELECT logo_document_id FROM so_hdr h WHERE h.so_id = #soId#
	</select>
	
	<select id="getCountOfBuyerSkuCategory.query" parameterClass="java.lang.Integer" resultClass= "java.lang.Integer" >
	   SELECT COUNT(1) FROM buyer_sku_category bsc WHERE bsc.buyer_id=#buyerId#;
	</select>
	
	<select id="getCountOfBuyerAndSku.query" parameterClass="java.util.HashMap" resultClass= "java.lang.Integer" >
	   SELECT COUNT(1) FROM buyer_sku bsc WHERE bsc.buyer_id=#buyerId# and sku=#sku#;
	</select>
	
	<!-- SL-21377 : Fetching Buyer Sku details for the buyer -->
	<select id = "getbuyerSkuDetails.query" parameterClass="java.lang.Integer" resultClass="skuDetailsVO" >
	       SELECT ab.skuCategory AS skuCategory,
			        a.node_name AS mainServiceCategory,
			        a.node_id AS mainServiceCategoryId,
			        IF (b.node_name = a.node_name,c.node_name,b.node_name) AS category,
			        IF (b.node_name = a.node_name,c.node_id,b.node_id) AS categoryId,
			        IF (b.node_name = a.node_name,'No-SubCategory',c.node_name) subCategory,  
			        IF (b.node_name = a.node_name,'0',c.node_id) subCategoryId,  
			        t.descr AS skill,
			        ab.sku AS sku,
			        ab.description AS description,
			        ab.template AS template,
			        ab.orderType AS orderType,
			        ab.retailPrice AS retailPrice,
			        ab.margin AS margin,
			        ab.maximumPrice AS maximumPrice,
			        ab.billingMargin AS billingMargin,
			        ab.billingPrice AS billingPrice,
			        ab.taskName AS taskName,
			        ab.taskComments AS taskComments
             FROM skill_tree a JOIN  skill_tree b JOIN skill_tree c 
        			ON(c.parent_node=b.node_id AND a.node_id = c.root_node_id)
 			 JOIN lu_service_type_template t  ON(a.node_id= t.node_id) JOIN(
                 		SELECT  skuCategory.category_name AS skuCategory,
                                buyerSku.sku AS sku,
		                        buyerSku.sku_description AS description,
		                        soTemplate.template_name AS template,
		                        buyerSku.orderitem_type AS orderType,
		                        buyerSku.retail_price AS retailPrice,
		                        buyerSku.bid_margin AS margin,
		                        buyerSku.bid_price AS maximumPrice,
		                        buyerSku.billing_margin AS billingMargin,
		                        buyerSku.billing_price AS billingPrice,
		                        skuTasks.task_name AS taskName,
		                        skuTasks.task_comments AS taskComments,
		                        skuTasks.category_node_id AS nodeId,
		                        skuTasks.service_type_template_id AS skillType 
                        FROM buyer_sku_category skuCategory
              JOIN buyer_sku buyerSku ON(skuCategory.category_id=buyerSku.sku_category)
              JOIN buyer_so_template soTemplate ON(soTemplate.template_id=buyerSku.template_id)
              JOIN buyer_sku_task skuTasks ON(skuTasks.sku_id=buyerSku.sku_id)
              WHERE skuCategory.buyer_id= #buyerId#) AS ab 
              ON(t.service_type_template_id = ab.skillType AND c.node_id = ab.nodeId)  
	</select>
	
	<!-- SL-21446-Relay Services: Fetching the company logo if available  -->
	<select id="getCompanyLogo.query" parameterClass="java.util.List" resultClass="java.util.HashMap">
		  SELECT vd.vendor_id as vendor_id, d.doc_path as companyLogo FROM vendor_document vd 
		  JOIN document d ON (vd.document_id = d.document_id)
		   WHERE vd.vendor_id IN
			<iterate open="(" close=")" conjunction=",">
				#[]#
			</iterate> 
	     GROUP BY vd.vendor_id
	</select>
	
	<select id="getDocumentByName.query" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	select d.document_id as documentId, d.created_date as uploadedTime, @@system_time_zone AS dbTimeZone, sh.service_locn_time_zone AS soTimeZone 
    	from document d
    	join so_document sd on d.document_id = sd.document_id 
    	join so_hdr sh ON sd.so_id = sh.so_id
    	where file_name = #documentName#
    	and sd.so_id = #soId#
   </select>
  <!--  SL-21645 -->
   <select id="getSOContactDetails.query" parameterClass="java.lang.String"
		resultMap="socontactext.resultsmap">
		SELECT
		sc.*,
		scp.phone_no,
		scp.phone_no_ext,
		scp.so_phone_class_id,
		scp.created_date AS phone_created_date,
		scp.phone_type_id,
		scl.so_contact_locn_type_id
		FROM so_contact sc
		JOIN so_contact_locn scl ON sc.so_id = scl.so_id AND sc.so_contact_id =
		scl.so_contact_id
		LEFT JOIN so_contact_phones scp ON sc.so_id = scp.so_id AND
		sc.so_contact_id = scp.so_contact_id
		WHERE sc.so_id = #serviceOrderID#
		ORDER BY scp.phone_type_id
	</select>
   
   <select id="getServiceDatetimeSlots.query" parameterClass="java.lang.String"
		 resultMap="soServiceDatetimeSlot.resultMap">
		select *from so_service_datetime_slot where so_id = #serviceOrderID# order by preference_ind asc 
</select>

 <select id="getServiceDatetimeSlot.query" parameterClass="java.util.Map"
		 resultMap="soServiceDatetimeSlot.resultMap">
		select *from so_service_datetime_slot where so_id = #serviceOrderID# and preference_ind  = #preferenceInd# 
</select>
<!-- This is for batch job to expire the order-->
<select id="getDatetimeSlotForBatchJob.query" parameterClass="java.lang.String"
		 resultMap="soServiceDatetimeSlot.resultMap">
		select *from so_service_datetime_slot where so_id = #serviceOrderID# order by service_start_date desc limit 1
</select>

<select id="getHomeWarrantyReasonCodesCountForSO.query" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(so_id) from so_warranty_home_reasons where so_id=#soId#
</select>

<insert id="soWarrantyHomeReason.insert" parameterClass="warrantyHomeReasonInfoVO">
	    INSERT into so_warranty_home_reasons (so_id, reason_id, comments)
	      VALUES
	         (#soId#,#reasonCode#,#comments#)
	 </insert>
 
 <select id="getProviderByAcceptedSO.query" parameterClass="java.util.Map" resultClass="providerDetailWithSOAccepted"> 
 
  SELECT so.so_id as serviceOrder, so.service_time_start as serviceStartTime, service_time_end as serviceEndTime FROM supplier_prod.so_hdr so inner join supplier_prod.vendor_resource v  on so.accepted_resource_id=v.resource_id 
        and  so.buyer_id = #buyerId# and so.wf_state_id in (150,155) and 
		Date (so.service_date1) = CURDATE() + #days#;
	
	</select>
	
<!-- SLT-4491 -->	
 <select id="getValidVendor.query" parameterClass="java.lang.Integer" resultClass="java.lang.Integer"> 
  SELECT vendor_id FROM vendor_hdr where vendor_id = #vendorId#
</select>
 
 
</sqlMap>