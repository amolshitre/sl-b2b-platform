<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
"http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap>
<typeAlias alias="teamCredentialsVO" type="com.newco.marketplace.vo.provider.TeamCredentialsVO"/>
	<typeAlias alias="teamCredentialsLookupVO" type="com.newco.marketplace.dto.vo.provider.TeamCredentialsLookupVO"/>

	<select id="teamCredentialsVO.queryAllType" resultClass="teamCredentialsLookupVO">
   			SELECT LTRIM(cred_type_desc) AS type,
   			cred_type_id AS typeId
   			FROM lu_resource_credential_type
   			ORDER BY type
	</select>
	
	<select id="teamCredentialsVO.queryType" resultClass="teamCredentialsLookupVO">
   			SELECT LTRIM(cred_type_desc) AS type,
   			cred_type_id AS typeId
   			FROM lu_resource_credential_type
   			WHERE cred_type_desc=#typeDesc#
	</select>

	<select id="teamCredentialsVO.queryCatByTypeId" resultClass="teamCredentialsLookupVO">
   			SELECT cred_category_id AS catId, LTRIM(cred_category) AS category
   			FROM lu_resource_credential_category
   			WHERE cred_type_id=#typeId#
   			ORDER BY category
	</select>
	
	<select id="teamCredentialVO.queryForExist" parameterClass="teamCredentialsVO" resultClass="java.lang.Integer">
			SELECT resource_cred_id from resource_credentials
			where resource_id = #resourceId# 
			and cred_name = #licenseName# 
			and cred_category_id = #categoryId# 
			and cred_type_id = #typeId#
			and cred_source = #issuerName#;
	</select>

	<select id="teamCredentialsVO.queryCredByResourceId" resultClass="teamCredentialsVO">
			SELECT resource_cred_id AS resourceCredId,
			rc.resource_id AS resourceId ,
			rc.cred_type_id AS typeId,
			rc.cred_category_id AS categoryId,
			rcc.cred_category AS credCategory,
			rct.cred_type_desc AS credType,
			rc.cred_source AS issuerName,
			rc.cred_name AS licenseName,
			rc.cred_expiration_date AS expirationDate,
			<!--SL-21142  -->
			rc.is_file_uploaded as isFileUploaded,
			<!--SL-21142  -->
			rc.wf_state_id AS wfStateId,
			rc.cred_issue_date as issueDate,
			rc.modified_date as modifiedDate
			FROM resource_credentials rc
			JOIN lu_resource_credential_category AS rcc ON (rc.cred_category_id = rcc.cred_category_id)
			JOIN lu_resource_credential_type AS rct ON (rc.cred_type_id = rct.cred_type_id)
			WHERE resource_id=#resourceId#
	</select>

	<select id="teamCredentialsVO.queryCredByResourceIdIncludedStates" resultClass="teamCredentialsVO" parameterClass="teamCredentialsVO">
			SELECT rc.resource_cred_id AS resourceCredId,
			rc.resource_id AS resourceId ,
			rc.cred_type_id AS typeId,
			rc.cred_category_id AS categoryId,
			rcc.cred_category AS credCategory,
			rct.cred_type_desc AS credType,
			rc.cred_source AS issuerName,
			rc.cred_name AS licenseName,
			rc.cred_expiration_date AS expirationDate,
			rc.wf_state_id AS wfStateId,
			rc.cred_issue_date AS issueDate,
			rc.modified_date AS modifiedDate,
			CASE WHEN rcd.document_id IS NULL THEN 0 ELSE rcd.document_id END AS currentDocumentId
			FROM resource_credentials rc
			JOIN lu_resource_credential_category AS rcc ON (rc.cred_category_id = rcc.cred_category_id)
			JOIN lu_resource_credential_type AS rct ON (rc.cred_type_id = rct.cred_type_id)
			LEFT JOIN resource_credentials_document rcd ON rc.resource_cred_id=rcd.resource_cred_id
			WHERE resource_id=#resourceId#
			<isNotEmpty property="includedStatus" prepend=" AND " >
	 	 		wf_state_id in
			 	<iterate property="includedStatus" open="(" close=")" 	conjunction=",">
					#includedStatus[]#
				</iterate>
			</isNotEmpty>

	</select>

	<select id="teamCredentialsVO.queryCredById" resultClass="teamCredentialsVO">
   			SELECT resource_cred_id AS resourceCredId,
   				resource_id AS resourceId,
   				cred_type_id AS typeId,
   				cred_category_id AS categoryId,
   				cred_source AS issuerName,
   				cred_name AS licenseName,
				cred_issue_date AS issueDate,
				cred_expiration_date AS expirationDate,
				cred_no AS credentialNumber,
				cred_city AS city,
				cred_county AS county,
				cred_state AS state,
				cred_notes AS notes
   			FROM resource_credentials
   			WHERE resource_cred_id=#resourceCredId#
	</select>

	<select id="teamCredentialsVO.queryCredByIdSec" resultClass="teamCredentialsVO">
   			SELECT resource_cred_id AS resourceCredId,
   				resource_id AS resourceId,
   				cred_type_id AS typeId,
   				cred_category_id AS categoryId,
   				cred_source AS issuerName,
   				cred_name AS licenseName,
				cred_issue_date AS issueDate,
				cred_expiration_date AS expirationDate,
				is_file_uploaded as isFileUploaded,
				cred_no AS credentialNumber,
				cred_city AS city,
				cred_county AS county,
				cred_state AS state,
				cred_notes AS notes
   			FROM resource_credentials
   			WHERE resource_cred_id=#resourceCredId#
   			AND resource_id=#resourceId#
	</select>

   	<insert id="teamCredentialsVO.insert" parameterClass="teamCredentialsVO">
		INSERT INTO resource_credentials
			(resource_id,
			cred_type_id,
			cred_category_id,
			cred_source,
			cred_name,
			cred_issue_date,
			cred_expiration_date,
			<!--SL-21142  -->
			is_file_uploaded,
			<!--SL-21142  -->
			cred_no,
			cred_city,
			cred_county,
		<isNotNull property="state">
				cred_state ,
		</isNotNull>
			cred_notes)
			values(#resourceId#,
				   #typeId#,
				   #categoryId#,
				   #issuerName#,
				   #licenseName#,
				   #issueDate#,
				   #expirationDate#,
				   #isFileUploaded#,
				   #credentialNumber#,
				   #city#,
				   #county#,
		  <isNotNull property="state">
					#state#,
		</isNotNull>
				   #notes#)
		<selectKey resultClass="int">
           SELECT last_insert_id()
           AS resourceCredId
       </selectKey>
    </insert>

    <update id="teamCredentialsVO.update" parameterClass="teamCredentialsVO">
		UPDATE resource_credentials
		<dynamic prepend="set">
			<isGreaterThan prepend=", " property="resourceId" compareValue="-1">resource_id = #resourceId#</isGreaterThan>
			<isGreaterThan prepend=", " property="typeId" compareValue="-1">cred_type_id = #typeId#</isGreaterThan>
			<isGreaterThan prepend=", " property="categoryId" compareValue="-1">cred_category_id = #categoryId#</isGreaterThan>
			<isNotNull prepend=", " property="issuerName">cred_source = #issuerName#</isNotNull>
			<isNotNull prepend=", " property="licenseName">cred_name = #licenseName#</isNotNull>
			<isNotNull prepend=", " property="issueDate">cred_issue_date = #issueDate#</isNotNull>
			<isNull prepend=", " property="expirationDate">cred_expiration_date = #expirationDate#</isNull>
			<!--  <isNotNull prepend=", " property="isFileUploaded">is_file_uploaded = #isFileUploaded#</isNotNull> -->
			<isNotNull prepend=", " property="expirationDate">cred_expiration_date = #expirationDate#</isNotNull>
			<isNotNull prepend=", " property="credentialNumber">cred_no = #credentialNumber#</isNotNull>
			<isNotNull prepend=", " property="city">cred_city = #city#</isNotNull>
			<isNotNull prepend=", " property="county">cred_county = #county#</isNotNull>
			<isNotNull prepend=", " property="state">cred_state = #state#</isNotNull>
			<isNotNull prepend=", " property="notes">cred_notes = #notes#</isNotNull>
		</dynamic>
		where resource_cred_id = #resourceCredId#
	</update>

	<update id="teamCredentialsVO.updateWfStateId" parameterClass="teamCredentialsVO">
		UPDATE resource_credentials
		SET wf_state_id = #wfStateId#
		WHERE resource_id = #resourceId#
		AND   resource_cred_id = #resourceCredId#
	</update>
	
	 <update id="teamCredentialsVO.updateCredential" parameterClass="teamCredentialsVO">
		UPDATE resource_credentials
		<dynamic prepend="set">
			<isGreaterThan prepend=", " property="resourceId" compareValue="-1">resource_id = #resourceId#</isGreaterThan>
			<isGreaterThan prepend=", " property="typeId" compareValue="-1">cred_type_id = #typeId#</isGreaterThan>
			<isGreaterThan prepend=", " property="categoryId" compareValue="-1">cred_category_id = #categoryId#</isGreaterThan>
			<isNotNull prepend=", " property="issuerName">cred_source = #issuerName#</isNotNull>
			<isNotNull prepend=", " property="licenseName">cred_name = #licenseName#</isNotNull>
			<isNotNull prepend=", " property="issueDate">cred_issue_date = #issueDate#</isNotNull>
			<isNull prepend=", " property="expirationDate">cred_expiration_date = #expirationDate#</isNull>
			<isNull prepend=", " property="isFileUploaded">is_file_uploaded = #isFileUploaded#</isNull>
			<isNotNull prepend=", " property="expirationDate">cred_expiration_date = #expirationDate#</isNotNull>
			<isNotNull prepend=", " property="credentialNumber">cred_no = #credentialNumber#</isNotNull>
			<isNotNull prepend=", " property="city">cred_city = #city#</isNotNull>
			<isNotNull prepend=", " property="county">cred_county = #county#</isNotNull>
			<isNull prepend=", " property="state">cred_state = #state#</isNull>
			<isNotNull prepend=", " property="state">cred_state = #state#</isNotNull>
			<isNotNull prepend=", " property="notes">cred_notes = #notes#</isNotNull>
		</dynamic>
		where resource_cred_id = #resourceCredId#
	</update>

	<delete id="teamCredentialsVO.delete" parameterClass="teamCredentialsVO">
		delete from resource_credentials where resource_cred_id = #resourceCredId#
	</delete>

	<select id="getResourceFullName.query" parameterClass="teamCredentialsVO" resultClass="teamCredentialsVO">
		SELECT	concat(first_name, ' ', last_name) AS resourceName
		FROM 	contact c, vendor_resource v
		WHERE 	c.contact_id = v.contact_id
		AND		v.resource_id = #resourceId#
	</select>
	
     <select id="resourceCred.isAvailable" parameterClass="teamCredentialsVO" resultClass="java.lang.Boolean">
         SELECT 
         count(*) > 0 as isAvailable  
         FROM
         resource_credentials 
         WHERE 
         resource_id = #resourceId# and resource_cred_id =#resourceCredId#
     </select> 
     
     <select id="teamCredentialsVO.queryCatByType" resultClass="teamCredentialsLookupVO">
   			SELECT cCat.cred_category_id AS catId, LTRIM(cCat.cred_category) AS category
   			FROM lu_resource_credential_category cCat join lu_resource_credential_type cType
			on cType.cred_type_id = cCat.cred_type_id
   			where cType.cred_type_desc = #typeDesc#;
   	</select>
     
</sqlMap>