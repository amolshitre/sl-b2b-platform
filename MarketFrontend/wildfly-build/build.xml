<?xml version="1.0" encoding="UTF-8"?>

<project name="MarketFrontend" basedir="../" default="dist">

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${nondeployables.lib}/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

	<echo level="info">
	===============================================================================
	                                ${ant.project.name} 
	===============================================================================</echo>
	
    <target name="dist" depends="junit-report"/>
	
	<target name="package" depends="dist"/>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create build number file -->
        <buildnumber />
        <property name="dir.base" value="${basedir}" />

        <property file="${dir.overall.base}/build.properties" />
        <property name="dir.app" value="${dir.base}/web" />    	
        <property name="dir.source" value="${dir.base}/src" />
        <property name="dir.dest" value="${dir.base}/bin" />
        <property name="dir.build" value="${dir.base}/wildfly-build" />
        <property name="dir.test" value="${dir.base}/test" />
        <property name="dir.archive" value="${dir.base}/archive" />
        <property name="env" value="dev" />
        <property name="app.lastbuild.tag.auto" value="release_1_${build.number}_${env}_${DSTAMP}${TSTAMP}Ztest" />

        <!-- Folder under which all the libraries are kept -->
        <property name="dir.service.live.web.util.base" value="../ServiceLiveWebUtil" />
        <property name="deployables.lib" value="${dir.service.live.web.util.base}/lib/deployables"/>
    	<property name="Struts2InitialDeployables.lib" value="${dir.service.live.web.util.base}/lib/Struts2InitialDeployables"/>
        <property name="Struts2Deployables.lib" value="${dir.service.live.web.util.base}/lib/Struts2Deployables"/>
		<property name="nondeployables.lib" value="${dir.service.live.web.util.base}/lib/nondeployables"/>

        <!-- For projects that use SLCommonBuild scripts, the 'dist' target (usually the default) writes to here -->
        <property name="generated" value="../SLCommonBuild/lib/generated" />

        <property name="dir.market.backend.dist" value="../MarketBackend/dist" />
		<property name="dir.market.bi.dist" value="../MarketBusinessInterface/target/dist" />
        <property name="dir.market.common.dist" value="../MarketCommon/dist" />
        <property name="dir.market.document.dist" value="../MarketDocument/dist" />
        <property name="dir.market.gwt.dist" value="../MarketGWTProviderSearch/dist" />
        <property name="dir.orderfulfillment.Client.base" value="../OrderFulfillment/OrderFulfillment.Client" />
        <property name="dir.orderfulfillment.Domain.base" value="../OrderFulfillment/OrderFulfillment.Domain" />
        <property name="dir.orderfulfillment.ServiceInterface.base" value="../OrderFulfillment/OrderFulfillment.ServiceInterface" />
      	
    	<property name="dir.market.frontend.base" value="../MarketFrontend" />
        <property name="dir.market.backend.base" value="../MarketBackend" />
        <property name="dir.market.bi.base" value="../MarketBusinessInterface" />
        <property name="dir.market.common.base" value="../MarketCommon" />
        <property name="dir.market.document.base" value="../MarketDocument" />
        <property name="dir.market.staging.base" value="../OMSStaging" />
        <property name="dir.market.permissions.base" value="../Permissions" />
        <property name="dir.market.gwt.providersearch.base" value="../MarketGWTProviderSearch"/>
        <property name="dir.service.live.web.util.base" value="../ServiceLiveWebUtil" />
        <property name="dir.service.live.common.domain.base" value="../ServiceLiveCommonDomain" />
        <property name="dir.routing.rules.web.base" value="../RoutingRulesWeb" />
        <property name="dir.routing.rules.engine.base" value="../RoutingRulesEngine" />    	
        <property name="dir.market.alerts.base" value="../MarketAlertsManager" />
    	<property name="dir.orderfulfillment.Client.base" value="../OrderFulfillment/OrderFulfillment.Client" />
		<property name="dir.orderfulfillment.Domain.base" value="../OrderFulfillment/OrderFulfillment.Domain" />
		<property name="dir.orderfulfillment.ServiceInterface.base" value="../OrderFulfillment/OrderFulfillment.ServiceInterface" />
        <property name="dir.market.responsys.dist" value="../ResponsysClient/target/dist" />
        <property name="dir.market.responsys.interact.base" value="../ResponsysInteractClient" />
        <property name="dir.market.responsys.interact.dist" value="${dir.market.responsys.interact.base}/target/dist" />        	
        <property name="dir.archive" value="${dir.base}/archive" />
    	<!-- Folder under which all the libraries are kept -->
        <property name="endorsed.lib" value="${dir.service.live.web.util.base}/lib/deployables"/>
    	<property name="dir.slCommonBuild.nondeployables" value="../SLCommonBuild/lib/nondeployables"/>
    	<property name="sl.deployables.lib" value="../SLCommonBuild/lib/deployables"/>

		<!-- JUnit report dir path -->
		<property name="junit-report.dir" value="${basedir}/${ant.project.name}Reports" />

        <!-- Folder containing uncompressed final release software-->
        <property name="dir.dist" value="${dir.base}/dist"/>

        <path id="build.class.path">
            <fileset dir="${deployables.lib}">
            	<exclude name="hdiv-core-2.0.4.jar"/>
            	<exclude name="hdiv-struts-2.0.9-2.0.4.jar"/>
                <include name="*.jar"/>
            </fileset>
        	<fileset dir="${Struts2InitialDeployables.lib}">
        	    <include name="gson-2.3.1.jar"/>
        	 </fileset>
            <fileset dir="${nondeployables.lib}">
                <include name="*.jar"/>
            </fileset>
        	<fileset dir="${Struts2Deployables.lib}">
        	     <include name="*.jar"/>
        	</fileset>
        	<fileset dir="${Struts2InitialDeployables.lib}">
        	     <include name="json-lib-2.0-jdk15.jar"/>
        	</fileset>
            <fileset dir="${dir.market.backend.dist}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${dir.market.bi.dist}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${dir.market.common.dist}">
                <include name="*.jar"/>
            </fileset>
        	<fileset dir="${dir.routing.rules.engine.base}/target/dist">
        	    <include name="*.jar"/>
        	</fileset>
            <fileset dir="${dir.market.document.dist}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${dir.market.gwt.dist}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${generated}">
            	<include name="MarketCommon.jar" />
            	<include name="ServiceLiveCommonDomain.jar" />
            	<include name="ServiceLive.Common.jar" />
                <include name="ServiceLive.Lookup.jar" />
                <include name="Wallet.ServiceInterface.jar" />
                <include name="Wallet.Batch.jar" />
            </fileset>
            <fileset dir="${dir.orderfulfillment.Client.base}/target/dist">
                 <include name="*.jar"/>
             </fileset>
             <fileset dir="${dir.orderfulfillment.Domain.base}/target/dist">
                 <include name="*.jar"/>
             </fileset>        	
        	<fileset dir="${dir.service.live.common.domain.base}/target/dist">
        	     <include name="*.jar"/>
        	 </fileset>
             <fileset dir="${dir.orderfulfillment.ServiceInterface.base}/target/dist">
                 <include name="*.jar"/>
             </fileset>
        	<fileset dir="${dir.slCommonBuild.nondeployables}">
        		 <include name="*.jar"/>
        	</fileset>
        </path>
    	
    	<path id="test.class.path">
    		<pathelement location="${build.class.path}" />
			<pathelement location="${dir.dest}"/>
    		<fileset dir="${dir.slCommonBuild.nondeployables}">
    			<include name="junit.jar" />
    			<include name="hamcrest-core-1.1.jar" />
    			<include name="hamcrest-library-1.1.jar" />
    			<include name="mockito-all-1.8.4.jar" />
    			<include name="j2ee-1.4.jar" />
    		</fileset>			
			<fileset dir="${generated}">
	            	<include name="ServiceLiveCommonDomain.jar" />
	            	<include name="MarketCommon.jar" />
				    <include name="MarketBackend.jar" />
				    <include name="MarketBusinessInterface.jar" />
				    <include name="ServiceLive.Common.jar" />
				    <include name="MarketDocument.jar" />
				    <include name="Wallet.ServiceInterface.jar" />
			</fileset>
			<fileset dir="${Struts2InitialDeployables.lib}">
			        <include name="xwork-2.0.4.jar"/>
					<include name="commons-logging-1.1.jar"/>
				    <include name="gson-2.3.1.jar"/>
					<include name="json-lib-2.0-jdk15.jar"/>
			 </fileset>					
			<fileset dir="${deployables.lib}">
			        <include name="log4j-1.2.14.jar"/>
					<include name="commons-lang-2.3.jar"/>
			     	<include name="jxl.jar"/>
				    <include name="mail-1.4.jar"/>
			 </fileset>
    		<fileset dir="${Struts2Deployables.lib}">
    		        <include name="*.jar"/>
    		</fileset>
    		<fileset dir="${dir.orderfulfillment.Client.base}/target/dist">
    		        <include name="*.jar"/>
    		</fileset>
    		<fileset dir="${dir.orderfulfillment.Domain.base}/target/dist">
    		        <include name="*.jar"/>
    		</fileset>
    		<fileset dir="${dir.orderfulfillment.ServiceInterface.base}/target/dist">
    		        <include name="*.jar"/>
    		</fileset>
    		<fileset dir="${dir.service.live.common.domain.base}/target/dist">
    		        <include name="*.jar"/>
    		 </fileset>
    		<fileset dir="${sl.deployables.lib}">
    		    	<include name="ejb3-persistence-1.0.2.GA.jar"/>
    		 </fileset>
		</path>

        <!-- broken:  <antcall target="find_revision"/> -->
    </target>

	<target name="clean" depends="init">
        <delete includeEmptyDirs="true">
            <fileset dir="${dir.base}" includes="**/*.class" />
            <fileset dir="${dir.base}" includes="**/*.war" />
            <fileset dir="${dir.base}" includes="**/*.ear">
                <exclude name="**/${app.product.name}-qa*.ear"/>
                <exclude name="**/${app.product.name}-prod*.ear"/>
            </fileset>
        </delete>
        <delete includeEmptyDirs="false">
            <fileset dir="${dir.app}/WEB-INF/lib" />
        </delete>
        <delete dir="${dir.dest}" />
        <delete dir="${dir.dist}" quiet="true" failonerror="false"/>
    	<delete dir="${junit-report.dir}" failonerror="false"/>
    </target>
	
    <target name="create-dirs" depends="clean">
        <mkdir dir="${dir.dest}" />
        <mkdir dir="${dir.app}/WEB-INF/classes" />
        <mkdir dir="${dir.dist}"/>
        <mkdir dir="${dir.dist}/lib"/>
    	<mkdir dir="${junit-report.dir}"/>
    </target>
	
	<target name="compile" depends="create-dirs">
        <javac
            srcdir="${dir.source}"
            destdir="${dir.dest}"
            classpathref="build.class.path"
        	target="1.8"
        	source="1.8"
            debug="on"
            deprecation="false"
        />
        <copy todir="${dir.dest}">
            <fileset dir="${dir.source}">
                <include name="**/*.xml"/>
                <exclude name="**/*.tld"/>
                <include name="**/*.properties"/>
            </fileset>
        </copy>
    </target>
	
    <target name="war"  depends="compile">
        <copy todir="${dir.app}/WEB-INF/classes">
            <fileset dir="${dir.dest}">
                <include name="**/*.class"/>
                <include name="**/*.xml"/>
            </fileset>
            <fileset dir="${dir.market.frontend.base}/src/resources/properties">
                <include name="servicelive.properties"/>
            </fileset>
            <fileset dir="${dir.market.backend.base}/src/resources/images">
                <include name="service_live_logo.gif"/>
            </fileset>
            <fileset dir="${dir.dest}">
                <include name="**/*.properties"/>
            </fileset>
        </copy>

        <mkdir dir="${dir.app}/WEB-INF/classes/resources/properties"/>
        <mkdir dir="${dir.app}/WEB-INF/classes/resources/images"/>
    	<mkdir dir="${dir.app}/WEB-INF/classes/resources/pdficons"/>
        <copy todir="${dir.app}/WEB-INF/classes/resources/properties">
            <fileset dir="${dir.market.frontend.base}/src/resources/properties">
                <include name="*.properties"/>
            </fileset>
        </copy>
        <copy todir="${dir.app}/WEB-INF/classes/resources/images">
            <fileset dir="${dir.market.backend.base}/src/resources/images">
                <include name="*.gif"/>
            	<include name="no_image_125_125.png"/>
            	<include name="no_image_250_250.png"/>
            </fileset>
        </copy>        
    	<copy todir="${dir.app}/WEB-INF/classes/resources/pdficons">
    	    <fileset dir="${dir.market.backend.base}/src/resources/pdficons">
    	        <include name="*.png"/>
    	    </fileset>
    	</copy> 
        <delete dir="${dir.app}/WEB-INF/classes/demo" />
        <delete dir="${dir.app}/WEB-INF/classes/resources/spring/test" />    
        <copy todir="${dir.app}/WEB-INF">
            <fileset dir="${dir.dest}">
                <exclude name="**/*.tld"/>
            </fileset>
            <fileset dir="${dir.dest}">
                <include name="**/*.properties"/>
            </fileset>
        </copy>

        <copy todir="${dir.app}/WEB-INF/lib">
            <fileset dir="${endorsed.lib}">
                <include name="*.jar"/>
                <exclude name="log4j*.jar"/>
                <exclude name="xwork-2.0.1.jar"/>
            	<!-- Wildfly 8.2 Upgrade-->      
            	                  
            	              	<exclude name="struts-extras-1.3.8.jar"/> 
            	              	<exclude name="struts-el-1.3.8.jar"/> 
            	            	<exclude name="struts-scripting-1.3.8.jar"/> 
            	            	<exclude name="struts-taglib-1.3.8.jar"/> 
            	            	<exclude name="hibernate3.jar"/> 
            	            	<exclude name="hibernate-annotations.jar"/>
            	            	<exclude name="hibernate-commons-annotations.jar"/> 
            	                <exclude name="hibernate-commons-annotations-3.0.0.ga.jar"/> 
            	                <exclude name="hibernate-entitymanager.jar"/> 
            	                <exclude name="hibernate-validator.jar"/>
            					<exclude name="pell-multipart-2.1.5.jar"/>
            					<exclude name="struts2-pell-multipart-plugin-2.3.16.2.jar"/>
								<exclude name="mysql-connector-java-5.0.4-bin.jar"/>
            					<exclude name="commons-fileupload-1.2.jar"/>
            					<exclude name="commons-lang-2.3.jar"/>
            	
            </fileset>
        	<fileset dir="${sl.deployables.lib}">
        	    <include name="jsr311-api-1.1.jar"/>
        	</fileset>
            <fileset dir="${dir.market.backend.base}/dist">
                <include name="*.jar"/>
                <exclude name="MDB.jar"/>
            </fileset>
            <fileset dir="${dir.market.bi.base}/target/dist">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${dir.market.common.base}/dist">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${dir.market.document.base}/dist">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${dir.market.staging.base}/dist">
                <include name="*.jar"/>
            </fileset>
            <!-- fileset dir="${dir.market.permissions.base}/dist">
                <include name="*.jar"/>
            </fileset -->
            <fileset dir="${dir.market.gwt.providersearch.base}/dist">
                <include name="MarketGWTProviderSearch.jar"/>
            </fileset>
            <fileset dir="${dir.dist}/lib">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${dir.service.live.common.domain.base}/target/dist">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${dir.routing.rules.web.base}/target/dist">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${dir.routing.rules.engine.base}/target/dist">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${dir.market.responsys.dist}">
				<include name="*.jar" />
			</fileset>	
		    <fileset dir="${dir.market.responsys.interact.dist}">
				<include name="*.jar" />
			</fileset>
            <fileset dir="${dir.market.alerts.base}/dist">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${generated}">
                <include name="ServiceLive.Common.jar" />
                <include name="ServiceLive.Lookup.jar" />
                <include name="Wallet.ACH.jar" />
                <include name="Wallet.Alert.jar" />
                <include name="Wallet.Batch.jar" />
                <include name="Wallet.Common.jar" />
                <include name="Wallet.CreditCard.jar" />
                <include name="Wallet.Ledger.jar" />
                <include name="Wallet.Service.jar" />        
                <include name="Wallet.ServiceInterface.jar" />
                <include name="Wallet.ValueLink.jar" />
            </fileset>
			<fileset dir="${dir.orderfulfillment.Client.base}/target/dist">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${dir.orderfulfillment.Domain.base}/target/dist">
				<include name="*.jar"/>
			</fileset>
        	
        	<fileset dir="${dir.service.live.common.domain.base}/target/dist">
        					<include name="*.jar"/>
        	</fileset>
    	
			<fileset dir="${dir.orderfulfillment.ServiceInterface.base}/target/dist">
				<include name="*.jar"/>
			</fileset>
			
        	<!--R16_1: SL-18979: Added json jar -->
        	<fileset dir="${Struts2InitialDeployables.lib}">
        		<include name="json-lib-2.0-jdk15.jar"/>
        		<include name="gson-2.3.1.jar"/>
        	</fileset>
        </copy>

        <!-- Build the WAR file -->
        <jar compress="yes" jarfile="${dir.base}/MarketFrontend.war">
            <fileset dir="${dir.app}">
                <include name="**/*.class"/>
                <include name="**/*.html"/>
                <include name="**/*.inc"/>
                <include name="**/*.jsp"/>
                <include name="**/*.jspf"/>
                <include name="**/*.htm"/>
                <include name="**/*.xml"/>
                <include name="**/*.jrxml"/>
                <include name="**/*.xml"/>                
                <include name="**/*.properties"/>
                <include name="**/*.so"/>
                <include name="**/*.zip"/>
                <include name="**/*.swf"/>
                <include name="**/*.tag"/>
                <include name="**/*.jar"/>
                <include name="**/*.gif"/>
                <include name="**/*.css"/>
                <include name="**/*.js"/>
                <include name="**/*.png"/>
                <include name="**/*.rpc"/>
            	<include name="**/*.less"/>
            	<include name="**/*.eot"/>
            	<include name="**/*.svg"/>
            	<include name="**/*.ttf"/>
            	<include name="**/*.woff"/>
            	<exclude name="**/*.tld"/>
                <exclude name="omsstagingclient.jar"/>      	
            </fileset>        	
        </jar>
    </target>

	<target name="compile-test" depends="war">
		<javac 
			srcdir="${dir.test}" 
			destdir="${dir.dest}" 
			classpathref="build.class.path" 
			target="1.8" 
			source="1.8" 
			debug="on" 
			deprecation="false" />
	</target>
	
	<target name="junit-report" description="Runs the JUnit test cases" depends="compile-test">
			<junit fork="yes" haltonfailure="false" printsummary="withOutAndErr" showoutput="yes">		
				<classpath>
					<path refid="test.class.path"/>						  				
				</classpath>
		
				<formatter type="xml" />
					
				<batchtest fork="yes" todir="${junit-report.dir}" >	 
					<fileset dir="${dir.test}" >
						<include name="**/*Test.java" />
					</fileset>
				</batchtest>	  
			</junit>
			<echo message="build date ">${DSTAMP}${TSTAMP}</echo>
			<echo message="build.number ">${build.number}</echo>
			<echo message="full tag ">${app.lastbuild.tag.auto}</echo>

			<echo message="Format the tests report" />
			<junitreport todir="${junit-report.dir}">
				<fileset dir="${junit-report.dir}">
					<include name="TEST-*.xml" />
				</fileset>
				<report todir="${junit-report.dir}" />
			</junitreport>
	</target>
	
	<!-- Sonar Integration -->
	<property name="dir.sonar.src" value="${basedir}/src" />
	<property name="dir.sonar.ant.task" value="../SLCommonBuild/lib/nondeployables"/>
	<import file="../../SLCommonBuild/ant/wildfly-opt/ant-script-library/asl-java-sonar.xml"/>
	<target name="sonar" depends="sonar-init, sonar-run">
	</target>
	
    <target name="find_revision" description="Sets property 'svn.info.rev' to head svn revision">
<!-- Broken...
        <trycatch>
            <try>
                <property name="endorsed.lib1" value="${basedir}" />
                <path id="endorsed.lib1">
                    <fileset dir="lib">
                        <include name="svnant.jar"/>
                        <include name="svnClientAdapter.jar"/>
                        <include name="svnjavahl.jar"/>
                        <include name="svnkit.jar"/>
                    </fileset>
                </path>

                <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="endorsed.lib1" />

                <svn username="pangeen" password="sears123" javahl="false" >
                    <wcversion path="./../" prefix="wc."/>
                </svn>

                <echo>Revision# found: ${wc.committed.max}</echo>
                <echo>Branch Name Found: ${wc.repository.path}</echo>

                <propertyfile file="src/resources/properties/svn_revision.properties">
                    <entry key="svn.revision"  value= "${wc.committed.max}" />
                    <entry key="svn.branch"  value= "${wc.repository.path}"/>
                </propertyfile>

            </try>
            <catch>
                <echo>find_revision: SVN info not available</echo>
            </catch>
        </trycatch>
-->
    </target>
</project>
