<?xml version="1.0" encoding="UTF-8"?>

<!-- Build.xml file for MarketPublicAPI_Ver2 -->

<project name="SolrReport" basedir="../" default="distribute">
	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
	<target name="package" depends="distribute"/>
	<echo level="info">
	===============================================================================
	                                ${ant.project.name} 
	===============================================================================</echo>	
	<!-- Initialize -->
	<target name="init">
			<!-- Create the time stamp -->
			<tstamp/>
			<!-- Create build number file -->
			<buildnumber />
			<property name="dir.base" value="${basedir}" />

			<property name="dir.app" value="${dir.base}/web" />
			<property name="dir.source" value="${dir.base}/src/main/java" />
			<property name="dir.dest" value="${dir.base}/bin" />
			<property name="dir.build" value="${dir.base}/wildfly-build" />
			<property name="dir.dist" value="${dir.base}/dist" />
			<property name="dir.test" value="${dir.base}/src/test/java" />
			
			<property name="deployables.lib" value="lib"/>
			<property name="nondeployables.lib" value="../ServiceLiveWebUtil/lib/nondeployables"/>	
			<property name="slwebutil.deployables.lib" value="../ServiceLiveWebUtil/lib/deployables"/>
			<property name="slwebutil.initialdeps" value="../ServiceLiveWebUtil/lib/Struts2InitialDeployables"/>
			<property name="env" value="dev" />
			<property name="app.lastbuild.tag.auto" value="release_1_${build.number}_${env}_${DSTAMP}${TSTAMP}Ztest" />

			<!-- Folder containing uncompressed final release software-->
			<property name="dir.dist" value="${dir.base}/dist"/>
		
			<property name="junit-report.dir" value="${basedir}/${ant.project.name}Reports" />
			<property name="dir.slCommonBuild.nondeployables" value="../SLCommonBuild/lib/nondeployables"/>
			
			<path id="build.class.path">
				<fileset dir="${deployables.lib}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${nondeployables.lib}">
					<include name="*.jar"/>
				</fileset>	
				<fileset dir="${slwebutil.deployables.lib}">
						<include name="*.jar"/>
				</fileset>
				<fileset dir="${slwebutil.initialdeps}">
						<include name="*.jar"/>
				</fileset>
			</path>
		
			<path id="test.class.path">
	    		<pathelement location="${build.class.path}" />
				<pathelement location="${dir.dest}"/>
	    		<fileset dir="${dir.slCommonBuild.nondeployables}">
		    			<include name="junit.jar" />
		    			<include name="hamcrest-core-1.1.jar" />
		    			<include name="hamcrest-library-1.1.jar" />
		    			<include name="mockito-all-1.8.4.jar"/>
	    		</fileset>
				<fileset dir="${slwebutil.deployables.lib}">
						<include name="*.jar"/>
				</fileset>
				<fileset dir="${slwebutil.initialdeps}">
						<include name="*.jar"/>
				</fileset>
				<!--<fileset dir="${deployables.lib}">
						<include name="*.jar"/>
				</fileset>
				<fileset dir="${nondeployables.lib}">
						<include name="*.jar"/>
				</fileset>-->
			</path>
	</target>
	
	<!-- Clean the distribution folders -->
	<target name="clean" depends="init">
		<delete dir="${dir.dest}" failonerror="false"/>
		<mkdir dir="${dir.dest}"/>
		<delete dir="${dir.dist}" failonerror="false"/>
		<mkdir dir="${dir.dist}"/>
		<delete dir="${dir.app}/" failonerror="false"/>
		<mkdir dir="${dir.app}"/>
		<mkdir dir="${dir.app}/WEB-INF/lib"/>		
		<mkdir dir="${dir.app}/WEB-INF/classes"/> 
		<delete dir="${junit-report.dir}" failonerror="false"/>
		<mkdir dir="${junit-report.dir}"/>
	</target>
	
	<target name="compile" depends="clean">			
		<javac
				srcdir="${dir.source}"
				destdir="${dir.dest}"
				classpathref="build.class.path"
				target="1.8"
				source="1.8"
				debug="on"
				deprecation="false"
		/>
		
		<copy todir="${dir.dest}">
			<fileset dir="${dir.source}">
				<include name="**/*.xml"/>
			</fileset>
			<fileset dir="${dir.source}">
				<include name="**/*.properties"/>
			</fileset>
		</copy> 		
	</target>
				
	<!-- Create the WAR file -->
	<target name="war" depends="compile">
		<!-- -->
		<copy todir="${dir.app}/WEB-INF/classes">
			<fileset dir="${dir.dest}">
				<include name="**/*.class"/>
			</fileset>			
			<fileset dir="${dir.dest}">
				<include name="**/*.xml"/>
			</fileset>			
			<fileset dir="${dir.dest}">
				<include name="**/*.properties"/>
			</fileset>
		</copy>

		<copy todir="${dir.app}/WEB-INF/lib">
			<fileset dir="${basedir}/lib">
				<include name="*.jar"/>			
			</fileset>
		</copy>
		
		<copy todir="${dir.app}">		
			<fileset dir="${dir.base}/WebContent">
				<include name="*.*"/>									
			</fileset>				
		</copy>	
		
		<copy todir="${dir.app}/WEB-INF">		
			<fileset dir="${dir.base}/WebContent/WEB-INF">
				<include name="*.*"/>									
			</fileset>				
		</copy>			
		
		<!-- Build the WAR file -->
		<jar compress="yes" jarfile="${dir.dist}/report.war">
			<fileset dir="${dir.app}">
				<include name="**/*.class"/>
				<include name="**/*.html"/>
				<include name="**/*.inc"/>
				<include name="**/*.jsp"/>
				<include name="**/*.jspf"/>
				<include name="**/*.htm"/>
				<include name="**/*.xml"/>
				<include name="**/*.jrxml"/>
				<include name="**/*.xml"/>
				<include name="**/*.xsd"/>
				<include name="**/*.tld"/>
				<include name="**/*.properties"/>
				<include name="**/*.so"/>
				<include name="**/*.zip"/>
				<include name="**/*.tag"/>
				<include name="**/*.jar"/>
				<include name="**/*.gif"/>
				<include name="**/*.rpc"/>				
			</fileset>
		</jar>
	</target>
	
	<target name="compile-test" depends="war">
			<javac
				srcdir="${dir.test}"
				destdir="${dir.dest}"
				classpathref="build.class.path"
				target="1.8"
				source="1.8"
				debug="on"
				deprecation="false"
			/>	
	</target>
	
	<target name="junit-report" description="Runs the JUnit test cases" depends="compile-test">			
			<junit fork="yes" haltonfailure="false" printsummary="withOutAndErr" showoutput="yes">		
				<classpath>
						<path refid="test.class.path"/>						  				
				</classpath>
		
				<formatter type="xml" />
					
				<batchtest fork="yes" todir="${junit-report.dir}" >	 
					<fileset dir="${dir.test}" >
						<include name="**/*Test.java" />
					</fileset>
				</batchtest>	  
			</junit>
			<echo message="build date ">${DSTAMP}${TSTAMP}</echo>
			<echo message="build.number ">${build.number}</echo>
			<echo message="full tag ">${app.lastbuild.tag.auto}</echo>
	
			<echo message="Format the tests report" />
			<junitreport todir="${junit-report.dir}">
				<fileset dir="${junit-report.dir}">
					<include name="TEST-*.xml" />
				</fileset>
				<report todir="${junit-report.dir}" />
			</junitreport>		
	</target>
	
	<target name="distribute" depends="junit-report">
	</target>
	
	<!-- Sonar Integration -->
	<property name="dir.sonar.src" value="${basedir}/src/main/java" />
	<property name="dir.sonar.ant.task" value="../SLCommonBuild/lib/nondeployables"/>
	<import file="../../SLCommonBuild/ant/wildfly-opt/ant-script-library/asl-java-sonar.xml"/>
	<target name="sonar" depends="sonar-init, sonar-run">
	</target>
</project>